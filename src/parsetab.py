
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightASSIGN_OPleftCOMMAleftLSQUAREleftRSQUAREleftLCURLYleftRCURLYleftDDDleftDOTleftSEMICOLONleftCOLONleftSINGLE_QUOTESleftDOUBLE_QUOTESleftDECIMAL_LITleftOCTAL_LITleftHEX_LITleftFLOAT_LITleftSTRING_LITleftNEWLINEleftBREAKleftCONTINUEleftRETURNleftRROUNDleftLROUNDleftOR_ORleftAMP_AMPleftEQ_EQNOT_EQLTLT_EQGTGT_EQleftPLUSMINUSORCARETleftSTARDIVIDEMODULOAMPAND_ORLSRSAMP AMP_AMP AMP_EQ AND_OR AND_OR_EQ ASSIGN_OP BREAK CARET CARET_EQ CASE COLON COMMA CONST CONTINUE DDD DECIMAL_LIT DEFAULT DIVIDE DIVIDE_EQ DOT DOUBLE_QUOTES ELSE EQ EQ_EQ FALSE FLOAT_LIT FOR FUNC GO GOTO GT GT_EQ HEX_LIT IDENTIFIER IF IMPORT LCURLY LROUND LS LSQUARE LS_EQ LT LT_EQ LT_MINUS MINUS MINUS_EQ MINUS_MINUS MODULO MODULO_EQ NEWLINE NIL NOT NOT_EQ OCTAL_LIT OR OR_EQ OR_OR PACKAGE PLUS PLUS_EQ PLUS_PLUS PREDEF_TYPE RCURLY RETURN RROUND RS RSQUARE RS_EQ SELECT SEMICOLON SINGLE_QUOTES STAR STAR_EQ STRING_LIT STRUCT SWITCH TRUE TYPE VAR invalidIdentSourceFile : PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList\n    ImportDeclList : ImportDecl SEMICOLON ImportDeclList\n                | empty\n    TopLevelDeclList : TopLevelDecl SEMICOLON TopLevelDeclList\n                        | empty\n    TopLevelDecl  : Declaration\n                    | FunctionDecl\n    ImportDecl : IMPORT LROUND ImportSpecList RROUND\n                    | IMPORT ImportSpec\n    ImportSpecList : ImportSpec SEMICOLON ImportSpecList\n                        | empty\n    ImportSpec :  DOT string_lit\n                    | IDENTIFIER string_lit\n                    | empty string_lit\n    Block : LCURLY ScopeStart StatementList ScopeEnd RCURLY\n    ScopeStart : empty\n    ScopeEnd : empty\n    StatementList : Statement SEMICOLON StatementList\n                    | empty\n    Statement : Declaration\n                 | SimpleStmt\n                 | ReturnStmt\n                 | Block\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n    Declaration  : ConstDecl\n                 | TypeDecl\n                 | VarDecl\n    ConstDecl : CONST LROUND ConstSpecList RROUND\n                 | CONST ConstSpec\n                 | CONST IDENTIFIER\n    ConstSpecList : empty\n                 | ConstSpecList ConstSpec SEMICOLON\n                 | ConstSpecList IDENTIFIER SEMICOLON\n    ConstSpec : IdentifierList\n                 | IdentifierList Type EQ Expression\n                 | IDENTIFIER Type EQ Expression\n                 | IdentifierList Type EQ ExpressionList\n                 | IDENTIFIER Type EQ ExpressionList\n\n                 | IdentifierList IDENTIFIER DOT IDENTIFIER EQ Expression\n                 | IDENTIFIER IDENTIFIER DOT IDENTIFIER EQ Expression\n                 | IdentifierList IDENTIFIER DOT IDENTIFIER EQ ExpressionList\n                 | IDENTIFIER IDENTIFIER DOT IDENTIFIER EQ ExpressionList\n\n                 | IdentifierList IDENTIFIER EQ Expression\n                 | IDENTIFIER IDENTIFIER EQ Expression\n                 | IdentifierList IDENTIFIER EQ ExpressionList\n                 | IDENTIFIER IDENTIFIER EQ ExpressionList\n                 | IdentifierList EQ Expression\n                 | IDENTIFIER EQ Expression\n                 | IdentifierList EQ ExpressionList\n                 | IDENTIFIER EQ ExpressionList\n    IdentifierList : IDENTIFIER COMMA IdentifierBotList\n    IdentifierBotList : IDENTIFIER COMMA IdentifierBotList\n                 | IDENTIFIER\n    ExpressionList : Expression COMMA ExpressionBotList\n    ExpressionBotList : Expression COMMA ExpressionBotList\n                        | Expression\n    TypeDecl : TYPE TypeSpecTopList\n    TypeSpecTopList : TypeSpec\n                 | LROUND TypeSpecList  RROUND\n    TypeSpecList : empty\n                 | TypeSpecList TypeSpec SEMICOLON\n    TypeSpec : AliasDecl\n                 | TypeDef\n    AliasDecl : IDENTIFIER EQ Type\n                 | IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER\n                 | IDENTIFIER EQ IDENTIFIER\n    TypeDef : IDENTIFIER Type\n                 | IDENTIFIER IDENTIFIER\n                 | IDENTIFIER IDENTIFIER DOT IDENTIFIER\n    Type :  TypeLit\n                 | LROUND IDENTIFIER RROUND\n                 | LROUND Type RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER RROUND\n                 | empty\n    TypeLit : ArrayType\n                 | StandardType\n                 | StructType\n                 | FunctionType\n    StandardType : PREDEF_TYPE\n    ArrayType : LSQUARE ArrayLength RSQUARE Type\n                 | LSQUARE ArrayLength RSQUARE IDENTIFIER\n                 | LSQUARE ArrayLength RSQUARE IDENTIFIER DOT IDENTIFIER\n    ArrayLength : Expression\n    StructType : STRUCT LCURLY FieldDeclList RCURLY\n    FieldDeclList : empty\n                 | FieldDeclList FieldDecl SEMICOLON\n    FieldDecl : IdentifierList Type TagTop\n                 | IdentifierList IDENTIFIER TagTop\n                 | IDENTIFIER IDENTIFIER\n                 | IdentifierList IDENTIFIER DOT IDENTIFIER TagTop\n                 | STAR IDENTIFIER DOT IDENTIFIER TagTop\n                 | IDENTIFIER DOT IDENTIFIER TagTop\n                 | STAR IDENTIFIER TagTop\n                 | IDENTIFIER TagTop\n    TagTop : empty\n                 | Tag\n    Tag : string_lit\n    FunctionType : FUNC Signature\n    Signature : Parameters\n                 | Parameters Result\n    Result : Parameters\n                 | Type\n                 | IDENTIFIER\n                 | IDENTIFIER DOT IDENTIFIER\n    Parameters : LROUND RROUND\n                 | LROUND ParameterList RROUND\n                 | LROUND ParameterList COMMA RROUND\n\n    ParameterList  : ParameterDecl\n                 | ParameterList COMMA ParameterDecl\n\n    ParameterDecl  : DDD Type\n                 | IdentifierList Type\n                 | IdentifierList DDD Type\n                 | IDENTIFIER Type\n                 | IDENTIFIER DDD Type\n                 | DDD IDENTIFIER\n                 | IdentifierList IDENTIFIER\n                 | IdentifierList DDD IDENTIFIER\n                 | IDENTIFIER IDENTIFIER\n                 | IDENTIFIER DDD IDENTIFIER\n                 | DDD IDENTIFIER DOT IDENTIFIER\n                 | IdentifierList IDENTIFIER DOT IDENTIFIER\n                 | IdentifierList DDD IDENTIFIER DOT IDENTIFIER\n                 | IDENTIFIER IDENTIFIER DOT IDENTIFIER\n                 | IDENTIFIER DDD IDENTIFIER DOT IDENTIFIER\n    VarDecl : VAR VarSpecTopList\n    VarSpecTopList : VarSpec\n                      | LROUND VarSpecList RROUND\n    VarSpecList : empty\n                 | VarSpecList VarSpec SEMICOLON\n    VarSpec : IDENTIFIER Type\n               | IDENTIFIER EQ Expression\n               | IDENTIFIER Type EQ Expression\n               | IdentifierList Type\n               | IdentifierList EQ ExpressionList\n               | IdentifierList Type EQ ExpressionList\n    VarSpecMid : empty\n                 | EQ ExpressionList\n                 | EQ Expression\n    FunctionDecl : FUNC FunctionName Type Signature\n                | FUNC FunctionName Signature\n                | FUNC FunctionName Type Signature FunctionBody\n                | FUNC FunctionName Signature FunctionBody\n    FunctionName : IDENTIFIER\n    FunctionBody : Block\n    SimpleStmt : Expression\n                 | Assignment\n                 | ShortVarDecl\n                 | IncDecStmt\n    IncDecStmt : Expression PLUS_PLUS\n                | Expression MINUS_MINUS\n    ShortVarDecl : ExpressionList ASSIGN_OP ExpressionList\n                 | Expression ASSIGN_OP Expression\n    Assignment : ExpressionList assign_op ExpressionList\n                | Expression assign_op Expression\n    assign_op : EQ\n                 | PLUS_EQ\n                 | MINUS_EQ\n                 | OR_EQ\n                 | CARET_EQ\n                 | STAR_EQ\n                 | DIVIDE_EQ\n                 | MODULO_EQ\n                 | LS_EQ\n                 | RS_EQ\n                 | AMP_EQ\n                 | AND_OR_EQ\n    IfStmt : IF Expression Block\n            | IF Expression Block ELSE elseTail\n    elseTail : IfStmt\n                 | Block\n    SwitchStmt : ExprSwitchStmt\n    ExprSwitchStmt : SWITCH SimpleStmt SEMICOLON LCURLY ExprCaseClauseList RCURLY\n                 | SWITCH SimpleStmt SEMICOLON Expression LCURLY ExprCaseClauseList RCURLY\n                 | SWITCH LCURLY ExprCaseClauseList RCURLY\n                 | SWITCH Expression LCURLY ExprCaseClauseList RCURLY\n    ExprCaseClauseList : empty\n                 | ExprCaseClauseList ExprCaseClause\n    ExprCaseClause : ExprSwitchCase COLON StatementList\n    ExprSwitchCase : CASE ExpressionList\n                 | DEFAULT\n                 | CASE Expression\n    ForStmt : FOR Expression Block\n                 | FOR Block\n    ReturnStmt : RETURN\n                  | RETURN Expression\n                  | RETURN ExpressionList\n    BreakStmt : BREAK IDENTIFIER\n    ContinueStmt : CONTINUE IDENTIFIER\n    GotoStmt : GOTO IDENTIFIER\n    Expression : UnaryExpr\n                 | Expression OR_OR Expression\n                 | Expression AMP_AMP Expression\n                 | Expression EQ_EQ Expression\n                 | Expression NOT_EQ Expression\n                 | Expression LT Expression\n                 | Expression LT_EQ Expression\n                 | Expression GT Expression\n                 | Expression GT_EQ Expression\n                 | Expression PLUS Expression\n                 | Expression MINUS Expression\n                 | Expression OR Expression\n                 | Expression CARET Expression\n                 | Expression STAR Expression\n                 | Expression DIVIDE Expression\n                 | Expression MODULO Expression\n                 | Expression LS Expression\n                 | Expression AMP Expression\n                 | Expression AND_OR Expression\n    UnaryExpr : PrimaryExpr\n                 | unary_op UnaryExpr\n    unary_op : PLUS\n                 | MINUS\n                 | NOT\n                 | CARET\n                 | STAR\n                 | AMP\n                 | LT_MINUS\n    PrimaryExpr : Operand\n                 | IDENTIFIER\n                 | PrimaryExpr Selector\n                 | PrimaryExpr Index\n                 | PrimaryExpr Arguments\n    Operand  : Literal\n                 | LROUND Expression RROUND\n    Literal  : BasicLit\n                 | FunctionLit\n    BasicLit : int_lit\n                 | float_lit\n                 | string_lit\n    int_lit : decimal_lit\n                 | octal_lit\n                 | hex_lit\n    decimal_lit : DECIMAL_LIT\n    octal_lit : OCTAL_LIT\n    hex_lit  : HEX_LIT\n    float_lit : FLOAT_LIT\n    FunctionLit : FUNC Signature FunctionBody\n    Selector : DOT IDENTIFIER\n    Index : LSQUARE Expression RSQUARE\n    Arguments : LROUND RROUND\n                 | LROUND ExpressionList DDD RROUND\n                 | LROUND Expression DDD RROUND\n                 | LROUND ExpressionList RROUND\n                 | LROUND Expression RROUND\n                 | LROUND Type DDD RROUND\n                 | LROUND Type RROUND\n                 | LROUND Type COMMA ExpressionList  DDD RROUND\n                 | LROUND Type COMMA ExpressionList  RROUND\n                 | LROUND Type COMMA Expression DDD RROUND\n                 | LROUND Type COMMA Expression RROUND\n                 | LROUND IDENTIFIER DDD RROUND\n                 | LROUND IDENTIFIER RROUND %prec LROUND\n                 | LROUND IDENTIFIER COMMA ExpressionList  DDD RROUND\n                 | LROUND IDENTIFIER COMMA ExpressionList  RROUND\n                 | LROUND IDENTIFIER COMMA Expression DDD RROUND\n                 | LROUND IDENTIFIER COMMA Expression RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER DDD RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList  DDD RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList  RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression DDD RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression RROUND\n                 | LROUND ExpressionList DDD COMMA RROUND\n                 | LROUND Expression DDD COMMA RROUND\n                 | LROUND ExpressionList COMMA RROUND\n                 | LROUND Expression COMMA RROUND\n                 | LROUND Type DDD COMMA RROUND\n                 | LROUND Type COMMA RROUND\n                 | LROUND Type COMMA ExpressionList  DDD COMMA RROUND\n                 | LROUND Type COMMA ExpressionList  COMMA RROUND\n                 | LROUND Type COMMA Expression DDD COMMA RROUND\n                 | LROUND Type COMMA Expression COMMA RROUND\n                 | LROUND IDENTIFIER DDD COMMA RROUND\n                 | LROUND IDENTIFIER COMMA RROUND\n                 | LROUND IDENTIFIER COMMA ExpressionList  DDD COMMA RROUND\n                 | LROUND IDENTIFIER COMMA ExpressionList  COMMA RROUND\n                 | LROUND IDENTIFIER COMMA Expression DDD COMMA RROUND\n                 | LROUND IDENTIFIER COMMA Expression COMMA RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER DDD COMMA RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList  DDD COMMA RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList  COMMA RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression DDD COMMA RROUND\n                 | LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression COMMA RROUND\n    empty :string_lit : STRING_LIT\n    '
    
_lr_action_items = {'PACKAGE':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SourceFile':([0,],[1,]),'ImportDeclList':([4,21,],[5,45,]),'ImportDecl':([4,21,],[6,6,]),'empty':([4,5,8,21,22,27,28,30,32,33,36,39,42,43,44,58,60,74,81,90,96,97,102,103,108,138,141,168,170,176,183,186,210,236,295,306,307,317,345,371,372,379,396,420,425,452,454,459,460,],[7,11,26,7,48,11,59,69,59,59,79,59,84,59,59,59,59,59,59,48,171,59,59,59,59,215,59,59,238,59,59,59,59,316,59,59,376,238,395,376,376,376,395,376,395,376,376,395,238,]),'TopLevelDeclList':([5,27,],[9,53,]),'TopLevelDecl':([5,27,],[10,10,]),'Declaration':([5,27,170,317,460,],[12,12,239,239,239,]),'FunctionDecl':([5,27,],[13,13,]),'ConstDecl':([5,27,170,317,460,],[14,14,14,14,14,]),'TypeDecl':([5,27,170,317,460,],[15,15,15,15,15,]),'VarDecl':([5,27,170,317,460,],[16,16,16,16,16,]),'ImportSpec':([8,22,90,],[23,47,47,]),'FunctionName':([17,],[28,]),'ConstSpec':([18,68,],[31,140,]),'IdentifierList':([18,20,58,68,83,92,108,179,214,],[33,44,103,33,44,103,103,103,306,]),'TypeSpecTopList':([19,],[34,]),'TypeSpec':([19,78,],[35,156,]),'AliasDecl':([19,78,],[37,37,]),'TypeDef':([19,78,],[38,38,]),'VarSpecTopList':([20,],[40,]),'VarSpec':([20,83,],[41,161,]),'ImportSpecList':([22,90,],[46,167,]),'string_lit':([24,25,26,48,65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,307,309,313,317,318,319,336,337,361,364,367,371,372,379,382,393,420,430,439,446,451,452,454,460,494,],[49,51,52,52,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,378,129,129,129,129,129,129,129,129,129,129,378,378,378,129,129,378,129,129,129,129,378,378,129,129,]),'Type':([28,32,33,39,43,44,58,60,74,81,97,102,103,108,141,168,176,183,186,210,295,306,],[55,71,75,82,85,87,99,106,99,159,175,180,182,99,71,175,265,269,273,299,99,371,]),'Signature':([28,54,55,130,301,],[56,91,93,213,369,]),'TypeLit':([28,32,33,39,43,44,58,60,74,81,97,102,103,108,141,168,176,183,186,210,295,306,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'Parameters':([28,54,55,60,130,301,],[60,60,60,104,60,60,]),'ArrayType':([28,32,33,39,43,44,58,60,74,81,97,102,103,108,141,168,176,183,186,210,295,306,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'StandardType':([28,32,33,39,43,44,58,60,74,81,97,102,103,108,141,168,176,183,186,210,295,306,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'StructType':([28,32,33,39,43,44,58,60,74,81,97,102,103,108,141,168,176,183,186,210,295,306,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'FunctionType':([28,32,33,39,43,44,58,60,74,81,97,102,103,108,141,168,176,183,186,210,295,306,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'ConstSpecList':([30,],[68,]),'TypeSpecList':([36,],[78,]),'VarSpecList':([42,],[83,]),'FunctionBody':([56,93,213,369,],[94,169,303,303,]),'Block':([56,93,170,213,257,317,338,339,369,424,460,],[95,95,242,95,340,242,391,392,95,455,242,]),'ParameterList':([58,92,108,],[100,100,100,]),'ParameterDecl':([58,92,108,179,],[101,101,101,267,]),'Result':([60,],[105,]),'ArrayLength':([65,],[109,]),'Expression':([65,72,76,86,88,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[111,145,151,163,166,212,219,221,225,228,234,166,249,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,294,298,310,334,338,339,346,212,380,383,249,387,388,166,166,310,410,415,310,426,462,310,310,480,249,310,]),'UnaryExpr':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[112,112,112,112,112,211,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'PrimaryExpr':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'unary_op':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'Operand':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'Literal':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'BasicLit':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'FunctionLit':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'int_lit':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'float_lit':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,]),'decimal_lit':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,]),'octal_lit':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,]),'hex_lit':([65,72,76,86,88,119,124,143,144,150,154,162,164,170,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,209,210,223,253,255,257,261,295,309,313,317,318,319,336,337,361,364,367,382,393,430,439,446,451,460,494,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'ExpressionList':([72,76,88,143,144,150,154,164,170,210,253,261,309,313,317,336,337,364,367,430,451,460,],[146,152,165,220,222,226,229,235,254,297,335,254,381,384,254,389,390,408,413,461,478,254,]),'IdentifierBotList':([73,224,],[148,312,]),'ScopeStart':([96,],[170,]),'Selector':([118,],[205,]),'Index':([118,],[206,]),'Arguments':([118,],[207,]),'FieldDeclList':([138,],[214,]),'StatementList':([170,317,460,],[236,386,485,]),'Statement':([170,317,460,],[237,237,237,]),'SimpleStmt':([170,261,317,460,],[240,344,240,240,]),'ReturnStmt':([170,317,460,],[241,241,241,]),'IfStmt':([170,317,424,460,],[243,243,457,243,]),'SwitchStmt':([170,317,460,],[244,244,244,]),'ForStmt':([170,317,460,],[245,245,245,]),'BreakStmt':([170,317,460,],[246,246,246,]),'ContinueStmt':([170,317,460,],[247,247,247,]),'GotoStmt':([170,317,460,],[248,248,248,]),'Assignment':([170,261,317,460,],[250,250,250,250,]),'ShortVarDecl':([170,261,317,460,],[251,251,251,251,]),'IncDecStmt':([170,261,317,460,],[252,252,252,252,]),'ExprSwitchStmt':([170,317,460,],[256,256,256,]),'FieldDecl':([214,],[305,]),'ExpressionBotList':([223,361,382,439,446,494,],[311,311,423,311,311,311,]),'ScopeEnd':([236,],[315,]),'assign_op':([249,254,346,],[318,336,318,]),'TagTop':([307,371,372,379,420,452,454,],[375,417,418,422,453,481,482,]),'Tag':([307,371,372,379,420,452,454,],[377,377,377,377,377,377,377,]),'ExprCaseClauseList':([345,396,425,459,],[394,432,458,484,]),'ExprCaseClause':([394,432,458,484,],[428,428,428,428,]),'ExprSwitchCase':([394,432,458,484,],[429,429,429,429,]),'elseTail':([424,],[456,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList','SourceFile',5,'p_SourceFile','parser.py',139),
  ('ImportDeclList -> ImportDecl SEMICOLON ImportDeclList','ImportDeclList',3,'p_ImportDeclList','parser.py',152),
  ('ImportDeclList -> empty','ImportDeclList',1,'p_ImportDeclList','parser.py',153),
  ('TopLevelDeclList -> TopLevelDecl SEMICOLON TopLevelDeclList','TopLevelDeclList',3,'p_TopLevelDeclList','parser.py',162),
  ('TopLevelDeclList -> empty','TopLevelDeclList',1,'p_TopLevelDeclList','parser.py',163),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parser.py',176),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parser.py',177),
  ('ImportDecl -> IMPORT LROUND ImportSpecList RROUND','ImportDecl',4,'p_ImportDecl','parser.py',185),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_ImportDecl','parser.py',186),
  ('ImportSpecList -> ImportSpec SEMICOLON ImportSpecList','ImportSpecList',3,'p_ImportSpecList','parser.py',194),
  ('ImportSpecList -> empty','ImportSpecList',1,'p_ImportSpecList','parser.py',195),
  ('ImportSpec -> DOT string_lit','ImportSpec',2,'p_ImportSpec','parser.py',203),
  ('ImportSpec -> IDENTIFIER string_lit','ImportSpec',2,'p_ImportSpec','parser.py',204),
  ('ImportSpec -> empty string_lit','ImportSpec',2,'p_ImportSpec','parser.py',205),
  ('Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY','Block',5,'p_Block','parser.py',213),
  ('ScopeStart -> empty','ScopeStart',1,'p_ScopeStart','parser.py',222),
  ('ScopeEnd -> empty','ScopeEnd',1,'p_ScopeEnd','parser.py',230),
  ('StatementList -> Statement SEMICOLON StatementList','StatementList',3,'p_StatementList','parser.py',238),
  ('StatementList -> empty','StatementList',1,'p_StatementList','parser.py',239),
  ('Statement -> Declaration','Statement',1,'p_Statement','parser.py',251),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','parser.py',252),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parser.py',253),
  ('Statement -> Block','Statement',1,'p_Statement','parser.py',254),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parser.py',255),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','parser.py',256),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parser.py',257),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parser.py',258),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parser.py',259),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','parser.py',260),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','parser.py',268),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','parser.py',269),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parser.py',270),
  ('ConstDecl -> CONST LROUND ConstSpecList RROUND','ConstDecl',4,'p_ConstDecl','parser.py',278),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_ConstDecl','parser.py',279),
  ('ConstDecl -> CONST IDENTIFIER','ConstDecl',2,'p_ConstDecl','parser.py',280),
  ('ConstSpecList -> empty','ConstSpecList',1,'p_ConstSpecList','parser.py',286),
  ('ConstSpecList -> ConstSpecList ConstSpec SEMICOLON','ConstSpecList',3,'p_ConstSpecList','parser.py',287),
  ('ConstSpecList -> ConstSpecList IDENTIFIER SEMICOLON','ConstSpecList',3,'p_ConstSpecList','parser.py',288),
  ('ConstSpec -> IdentifierList','ConstSpec',1,'p_ConstSpec','parser.py',294),
  ('ConstSpec -> IdentifierList Type EQ Expression','ConstSpec',4,'p_ConstSpec','parser.py',295),
  ('ConstSpec -> IDENTIFIER Type EQ Expression','ConstSpec',4,'p_ConstSpec','parser.py',296),
  ('ConstSpec -> IdentifierList Type EQ ExpressionList','ConstSpec',4,'p_ConstSpec','parser.py',297),
  ('ConstSpec -> IDENTIFIER Type EQ ExpressionList','ConstSpec',4,'p_ConstSpec','parser.py',298),
  ('ConstSpec -> IdentifierList IDENTIFIER DOT IDENTIFIER EQ Expression','ConstSpec',6,'p_ConstSpec','parser.py',300),
  ('ConstSpec -> IDENTIFIER IDENTIFIER DOT IDENTIFIER EQ Expression','ConstSpec',6,'p_ConstSpec','parser.py',301),
  ('ConstSpec -> IdentifierList IDENTIFIER DOT IDENTIFIER EQ ExpressionList','ConstSpec',6,'p_ConstSpec','parser.py',302),
  ('ConstSpec -> IDENTIFIER IDENTIFIER DOT IDENTIFIER EQ ExpressionList','ConstSpec',6,'p_ConstSpec','parser.py',303),
  ('ConstSpec -> IdentifierList IDENTIFIER EQ Expression','ConstSpec',4,'p_ConstSpec','parser.py',305),
  ('ConstSpec -> IDENTIFIER IDENTIFIER EQ Expression','ConstSpec',4,'p_ConstSpec','parser.py',306),
  ('ConstSpec -> IdentifierList IDENTIFIER EQ ExpressionList','ConstSpec',4,'p_ConstSpec','parser.py',307),
  ('ConstSpec -> IDENTIFIER IDENTIFIER EQ ExpressionList','ConstSpec',4,'p_ConstSpec','parser.py',308),
  ('ConstSpec -> IdentifierList EQ Expression','ConstSpec',3,'p_ConstSpec','parser.py',309),
  ('ConstSpec -> IDENTIFIER EQ Expression','ConstSpec',3,'p_ConstSpec','parser.py',310),
  ('ConstSpec -> IdentifierList EQ ExpressionList','ConstSpec',3,'p_ConstSpec','parser.py',311),
  ('ConstSpec -> IDENTIFIER EQ ExpressionList','ConstSpec',3,'p_ConstSpec','parser.py',312),
  ('IdentifierList -> IDENTIFIER COMMA IdentifierBotList','IdentifierList',3,'p_IdentifierList','parser.py',319),
  ('IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList','IdentifierBotList',3,'p_IdentifierBotList','parser.py',326),
  ('IdentifierBotList -> IDENTIFIER','IdentifierBotList',1,'p_IdentifierBotList','parser.py',327),
  ('ExpressionList -> Expression COMMA ExpressionBotList','ExpressionList',3,'p_ExpressionList','parser.py',339),
  ('ExpressionBotList -> Expression COMMA ExpressionBotList','ExpressionBotList',3,'p_ExpressionBotList','parser.py',348),
  ('ExpressionBotList -> Expression','ExpressionBotList',1,'p_ExpressionBotList','parser.py',349),
  ('TypeDecl -> TYPE TypeSpecTopList','TypeDecl',2,'p_TypeDecl','parser.py',363),
  ('TypeSpecTopList -> TypeSpec','TypeSpecTopList',1,'p_TypeSpecTopList','parser.py',369),
  ('TypeSpecTopList -> LROUND TypeSpecList RROUND','TypeSpecTopList',3,'p_TypeSpecTopList','parser.py',370),
  ('TypeSpecList -> empty','TypeSpecList',1,'p_TypeSpecList','parser.py',376),
  ('TypeSpecList -> TypeSpecList TypeSpec SEMICOLON','TypeSpecList',3,'p_TypeSpecList','parser.py',377),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_TypeSpec','parser.py',383),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_TypeSpec','parser.py',384),
  ('AliasDecl -> IDENTIFIER EQ Type','AliasDecl',3,'p_AliasDecl','parser.py',390),
  ('AliasDecl -> IDENTIFIER EQ IDENTIFIER DOT IDENTIFIER','AliasDecl',5,'p_AliasDecl','parser.py',391),
  ('AliasDecl -> IDENTIFIER EQ IDENTIFIER','AliasDecl',3,'p_AliasDecl','parser.py',392),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_TypeDef','parser.py',398),
  ('TypeDef -> IDENTIFIER IDENTIFIER','TypeDef',2,'p_TypeDef','parser.py',399),
  ('TypeDef -> IDENTIFIER IDENTIFIER DOT IDENTIFIER','TypeDef',4,'p_TypeDef','parser.py',400),
  ('Type -> TypeLit','Type',1,'p_Type','parser.py',406),
  ('Type -> LROUND IDENTIFIER RROUND','Type',3,'p_Type','parser.py',407),
  ('Type -> LROUND Type RROUND','Type',3,'p_Type','parser.py',408),
  ('Type -> LROUND IDENTIFIER DOT IDENTIFIER RROUND','Type',5,'p_Type','parser.py',409),
  ('Type -> empty','Type',1,'p_Type','parser.py',410),
  ('TypeLit -> ArrayType','TypeLit',1,'p_TypeLit','parser.py',422),
  ('TypeLit -> StandardType','TypeLit',1,'p_TypeLit','parser.py',423),
  ('TypeLit -> StructType','TypeLit',1,'p_TypeLit','parser.py',424),
  ('TypeLit -> FunctionType','TypeLit',1,'p_TypeLit','parser.py',425),
  ('StandardType -> PREDEF_TYPE','StandardType',1,'p_StandardType','parser.py',431),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE Type','ArrayType',4,'p_ArrayType','parser.py',439),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE IDENTIFIER','ArrayType',4,'p_ArrayType','parser.py',440),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE IDENTIFIER DOT IDENTIFIER','ArrayType',6,'p_ArrayType','parser.py',441),
  ('ArrayLength -> Expression','ArrayLength',1,'p_ArrayLength','parser.py',447),
  ('StructType -> STRUCT LCURLY FieldDeclList RCURLY','StructType',4,'p_StructType','parser.py',453),
  ('FieldDeclList -> empty','FieldDeclList',1,'p_FieldDeclList','parser.py',459),
  ('FieldDeclList -> FieldDeclList FieldDecl SEMICOLON','FieldDeclList',3,'p_FieldDeclList','parser.py',460),
  ('FieldDecl -> IdentifierList Type TagTop','FieldDecl',3,'p_FieldDecl','parser.py',466),
  ('FieldDecl -> IdentifierList IDENTIFIER TagTop','FieldDecl',3,'p_FieldDecl','parser.py',467),
  ('FieldDecl -> IDENTIFIER IDENTIFIER','FieldDecl',2,'p_FieldDecl','parser.py',468),
  ('FieldDecl -> IdentifierList IDENTIFIER DOT IDENTIFIER TagTop','FieldDecl',5,'p_FieldDecl','parser.py',469),
  ('FieldDecl -> STAR IDENTIFIER DOT IDENTIFIER TagTop','FieldDecl',5,'p_FieldDecl','parser.py',470),
  ('FieldDecl -> IDENTIFIER DOT IDENTIFIER TagTop','FieldDecl',4,'p_FieldDecl','parser.py',471),
  ('FieldDecl -> STAR IDENTIFIER TagTop','FieldDecl',3,'p_FieldDecl','parser.py',472),
  ('FieldDecl -> IDENTIFIER TagTop','FieldDecl',2,'p_FieldDecl','parser.py',473),
  ('TagTop -> empty','TagTop',1,'p_TagTop','parser.py',479),
  ('TagTop -> Tag','TagTop',1,'p_TagTop','parser.py',480),
  ('Tag -> string_lit','Tag',1,'p_Tag','parser.py',486),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_FunctionType','parser.py',492),
  ('Signature -> Parameters','Signature',1,'p_Signature','parser.py',504),
  ('Signature -> Parameters Result','Signature',2,'p_Signature','parser.py',505),
  ('Result -> Parameters','Result',1,'p_Result','parser.py',511),
  ('Result -> Type','Result',1,'p_Result','parser.py',512),
  ('Result -> IDENTIFIER','Result',1,'p_Result','parser.py',513),
  ('Result -> IDENTIFIER DOT IDENTIFIER','Result',3,'p_Result','parser.py',514),
  ('Parameters -> LROUND RROUND','Parameters',2,'p_Parameters','parser.py',520),
  ('Parameters -> LROUND ParameterList RROUND','Parameters',3,'p_Parameters','parser.py',521),
  ('Parameters -> LROUND ParameterList COMMA RROUND','Parameters',4,'p_Parameters','parser.py',522),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parser.py',529),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parser.py',530),
  ('ParameterDecl -> DDD Type','ParameterDecl',2,'p_ParameterDecl','parser.py',537),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_ParameterDecl','parser.py',538),
  ('ParameterDecl -> IdentifierList DDD Type','ParameterDecl',3,'p_ParameterDecl','parser.py',539),
  ('ParameterDecl -> IDENTIFIER Type','ParameterDecl',2,'p_ParameterDecl','parser.py',540),
  ('ParameterDecl -> IDENTIFIER DDD Type','ParameterDecl',3,'p_ParameterDecl','parser.py',541),
  ('ParameterDecl -> DDD IDENTIFIER','ParameterDecl',2,'p_ParameterDecl','parser.py',542),
  ('ParameterDecl -> IdentifierList IDENTIFIER','ParameterDecl',2,'p_ParameterDecl','parser.py',543),
  ('ParameterDecl -> IdentifierList DDD IDENTIFIER','ParameterDecl',3,'p_ParameterDecl','parser.py',544),
  ('ParameterDecl -> IDENTIFIER IDENTIFIER','ParameterDecl',2,'p_ParameterDecl','parser.py',545),
  ('ParameterDecl -> IDENTIFIER DDD IDENTIFIER','ParameterDecl',3,'p_ParameterDecl','parser.py',546),
  ('ParameterDecl -> DDD IDENTIFIER DOT IDENTIFIER','ParameterDecl',4,'p_ParameterDecl','parser.py',547),
  ('ParameterDecl -> IdentifierList IDENTIFIER DOT IDENTIFIER','ParameterDecl',4,'p_ParameterDecl','parser.py',548),
  ('ParameterDecl -> IdentifierList DDD IDENTIFIER DOT IDENTIFIER','ParameterDecl',5,'p_ParameterDecl','parser.py',549),
  ('ParameterDecl -> IDENTIFIER IDENTIFIER DOT IDENTIFIER','ParameterDecl',4,'p_ParameterDecl','parser.py',550),
  ('ParameterDecl -> IDENTIFIER DDD IDENTIFIER DOT IDENTIFIER','ParameterDecl',5,'p_ParameterDecl','parser.py',551),
  ('VarDecl -> VAR VarSpecTopList','VarDecl',2,'p_VarDecl','parser.py',557),
  ('VarSpecTopList -> VarSpec','VarSpecTopList',1,'p_VarSpecTopList','parser.py',566),
  ('VarSpecTopList -> LROUND VarSpecList RROUND','VarSpecTopList',3,'p_VarSpecTopList','parser.py',567),
  ('VarSpecList -> empty','VarSpecList',1,'p_VarSpecList','parser.py',579),
  ('VarSpecList -> VarSpecList VarSpec SEMICOLON','VarSpecList',3,'p_VarSpecList','parser.py',580),
  ('VarSpec -> IDENTIFIER Type','VarSpec',2,'p_VarSpec','parser.py',587),
  ('VarSpec -> IDENTIFIER EQ Expression','VarSpec',3,'p_VarSpec','parser.py',588),
  ('VarSpec -> IDENTIFIER Type EQ Expression','VarSpec',4,'p_VarSpec','parser.py',589),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parser.py',590),
  ('VarSpec -> IdentifierList EQ ExpressionList','VarSpec',3,'p_VarSpec','parser.py',591),
  ('VarSpec -> IdentifierList Type EQ ExpressionList','VarSpec',4,'p_VarSpec','parser.py',592),
  ('VarSpecMid -> empty','VarSpecMid',1,'p_VarSpecMid','parser.py',612),
  ('VarSpecMid -> EQ ExpressionList','VarSpecMid',2,'p_VarSpecMid','parser.py',613),
  ('VarSpecMid -> EQ Expression','VarSpecMid',2,'p_VarSpecMid','parser.py',614),
  ('FunctionDecl -> FUNC FunctionName Type Signature','FunctionDecl',4,'p_FunctionDecl','parser.py',620),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_FunctionDecl','parser.py',621),
  ('FunctionDecl -> FUNC FunctionName Type Signature FunctionBody','FunctionDecl',5,'p_FunctionDecl','parser.py',622),
  ('FunctionDecl -> FUNC FunctionName Signature FunctionBody','FunctionDecl',4,'p_FunctionDecl','parser.py',623),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_FunctionName','parser.py',637),
  ('FunctionBody -> Block','FunctionBody',1,'p_FunctionBody','parser.py',644),
  ('SimpleStmt -> Expression','SimpleStmt',1,'p_SimpleStmt','parser.py',652),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parser.py',653),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parser.py',654),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',655),
  ('IncDecStmt -> Expression PLUS_PLUS','IncDecStmt',2,'p_IncDecStmt','parser.py',669),
  ('IncDecStmt -> Expression MINUS_MINUS','IncDecStmt',2,'p_IncDecStmt','parser.py',670),
  ('ShortVarDecl -> ExpressionList ASSIGN_OP ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parser.py',686),
  ('ShortVarDecl -> Expression ASSIGN_OP Expression','ShortVarDecl',3,'p_ShortVarDecl','parser.py',687),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_Assignment','parser.py',734),
  ('Assignment -> Expression assign_op Expression','Assignment',3,'p_Assignment','parser.py',735),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','parser.py',795),
  ('assign_op -> PLUS_EQ','assign_op',1,'p_assign_op','parser.py',796),
  ('assign_op -> MINUS_EQ','assign_op',1,'p_assign_op','parser.py',797),
  ('assign_op -> OR_EQ','assign_op',1,'p_assign_op','parser.py',798),
  ('assign_op -> CARET_EQ','assign_op',1,'p_assign_op','parser.py',799),
  ('assign_op -> STAR_EQ','assign_op',1,'p_assign_op','parser.py',800),
  ('assign_op -> DIVIDE_EQ','assign_op',1,'p_assign_op','parser.py',801),
  ('assign_op -> MODULO_EQ','assign_op',1,'p_assign_op','parser.py',802),
  ('assign_op -> LS_EQ','assign_op',1,'p_assign_op','parser.py',803),
  ('assign_op -> RS_EQ','assign_op',1,'p_assign_op','parser.py',804),
  ('assign_op -> AMP_EQ','assign_op',1,'p_assign_op','parser.py',805),
  ('assign_op -> AND_OR_EQ','assign_op',1,'p_assign_op','parser.py',806),
  ('IfStmt -> IF Expression Block','IfStmt',3,'p_IfStmt','parser.py',813),
  ('IfStmt -> IF Expression Block ELSE elseTail','IfStmt',5,'p_IfStmt','parser.py',814),
  ('elseTail -> IfStmt','elseTail',1,'p_elseTail','parser.py',839),
  ('elseTail -> Block','elseTail',1,'p_elseTail','parser.py',840),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_SwitchStmt','parser.py',848),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ExprCaseClauseList RCURLY','ExprSwitchStmt',6,'p_ExprSwitchStmt','parser.py',855),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ExprCaseClauseList RCURLY','ExprSwitchStmt',7,'p_ExprSwitchStmt','parser.py',856),
  ('ExprSwitchStmt -> SWITCH LCURLY ExprCaseClauseList RCURLY','ExprSwitchStmt',4,'p_ExprSwitchStmt','parser.py',857),
  ('ExprSwitchStmt -> SWITCH Expression LCURLY ExprCaseClauseList RCURLY','ExprSwitchStmt',5,'p_ExprSwitchStmt','parser.py',858),
  ('ExprCaseClauseList -> empty','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',887),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',888),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',909),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',924),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',925),
  ('ExprSwitchCase -> CASE Expression','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',926),
  ('ForStmt -> FOR Expression Block','ForStmt',3,'p_ForStmt','parser.py',937),
  ('ForStmt -> FOR Block','ForStmt',2,'p_ForStmt','parser.py',938),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','parser.py',962),
  ('ReturnStmt -> RETURN Expression','ReturnStmt',2,'p_ReturnStmt','parser.py',963),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_ReturnStmt','parser.py',964),
  ('BreakStmt -> BREAK IDENTIFIER','BreakStmt',2,'p_BreakStmt','parser.py',979),
  ('ContinueStmt -> CONTINUE IDENTIFIER','ContinueStmt',2,'p_ContinueStmt','parser.py',985),
  ('GotoStmt -> GOTO IDENTIFIER','GotoStmt',2,'p_GotoStmt','parser.py',991),
  ('Expression -> UnaryExpr','Expression',1,'p_Expression','parser.py',997),
  ('Expression -> Expression OR_OR Expression','Expression',3,'p_Expression','parser.py',998),
  ('Expression -> Expression AMP_AMP Expression','Expression',3,'p_Expression','parser.py',999),
  ('Expression -> Expression EQ_EQ Expression','Expression',3,'p_Expression','parser.py',1000),
  ('Expression -> Expression NOT_EQ Expression','Expression',3,'p_Expression','parser.py',1001),
  ('Expression -> Expression LT Expression','Expression',3,'p_Expression','parser.py',1002),
  ('Expression -> Expression LT_EQ Expression','Expression',3,'p_Expression','parser.py',1003),
  ('Expression -> Expression GT Expression','Expression',3,'p_Expression','parser.py',1004),
  ('Expression -> Expression GT_EQ Expression','Expression',3,'p_Expression','parser.py',1005),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_Expression','parser.py',1006),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_Expression','parser.py',1007),
  ('Expression -> Expression OR Expression','Expression',3,'p_Expression','parser.py',1008),
  ('Expression -> Expression CARET Expression','Expression',3,'p_Expression','parser.py',1009),
  ('Expression -> Expression STAR Expression','Expression',3,'p_Expression','parser.py',1010),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_Expression','parser.py',1011),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_Expression','parser.py',1012),
  ('Expression -> Expression LS Expression','Expression',3,'p_Expression','parser.py',1013),
  ('Expression -> Expression AMP Expression','Expression',3,'p_Expression','parser.py',1014),
  ('Expression -> Expression AND_OR Expression','Expression',3,'p_Expression','parser.py',1015),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parser.py',1047),
  ('UnaryExpr -> unary_op UnaryExpr','UnaryExpr',2,'p_UnaryExpr','parser.py',1048),
  ('unary_op -> PLUS','unary_op',1,'p_unary_op','parser.py',1067),
  ('unary_op -> MINUS','unary_op',1,'p_unary_op','parser.py',1068),
  ('unary_op -> NOT','unary_op',1,'p_unary_op','parser.py',1069),
  ('unary_op -> CARET','unary_op',1,'p_unary_op','parser.py',1070),
  ('unary_op -> STAR','unary_op',1,'p_unary_op','parser.py',1071),
  ('unary_op -> AMP','unary_op',1,'p_unary_op','parser.py',1072),
  ('unary_op -> LT_MINUS','unary_op',1,'p_unary_op','parser.py',1073),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_PrimaryExpr','parser.py',1080),
  ('PrimaryExpr -> IDENTIFIER','PrimaryExpr',1,'p_PrimaryExpr','parser.py',1081),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1082),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1083),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1084),
  ('Operand -> Literal','Operand',1,'p_Operand','parser.py',1100),
  ('Operand -> LROUND Expression RROUND','Operand',3,'p_Operand','parser.py',1101),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parser.py',1112),
  ('Literal -> FunctionLit','Literal',1,'p_Literal','parser.py',1113),
  ('BasicLit -> int_lit','BasicLit',1,'p_BasicLit','parser.py',1125),
  ('BasicLit -> float_lit','BasicLit',1,'p_BasicLit','parser.py',1126),
  ('BasicLit -> string_lit','BasicLit',1,'p_BasicLit','parser.py',1127),
  ('int_lit -> decimal_lit','int_lit',1,'p_int_lit','parser.py',1135),
  ('int_lit -> octal_lit','int_lit',1,'p_int_lit','parser.py',1136),
  ('int_lit -> hex_lit','int_lit',1,'p_int_lit','parser.py',1137),
  ('decimal_lit -> DECIMAL_LIT','decimal_lit',1,'p_decimal_lit','parser.py',1145),
  ('octal_lit -> OCTAL_LIT','octal_lit',1,'p_octal_lit','parser.py',1152),
  ('hex_lit -> HEX_LIT','hex_lit',1,'p_hex_lit','parser.py',1159),
  ('float_lit -> FLOAT_LIT','float_lit',1,'p_float_lit','parser.py',1166),
  ('FunctionLit -> FUNC Signature FunctionBody','FunctionLit',3,'p_FunctionLit','parser.py',1173),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_Selector','parser.py',1179),
  ('Index -> LSQUARE Expression RSQUARE','Index',3,'p_Index','parser.py',1185),
  ('Arguments -> LROUND RROUND','Arguments',2,'p_Arguments','parser.py',1191),
  ('Arguments -> LROUND ExpressionList DDD RROUND','Arguments',4,'p_Arguments','parser.py',1192),
  ('Arguments -> LROUND Expression DDD RROUND','Arguments',4,'p_Arguments','parser.py',1193),
  ('Arguments -> LROUND ExpressionList RROUND','Arguments',3,'p_Arguments','parser.py',1194),
  ('Arguments -> LROUND Expression RROUND','Arguments',3,'p_Arguments','parser.py',1195),
  ('Arguments -> LROUND Type DDD RROUND','Arguments',4,'p_Arguments','parser.py',1196),
  ('Arguments -> LROUND Type RROUND','Arguments',3,'p_Arguments','parser.py',1197),
  ('Arguments -> LROUND Type COMMA ExpressionList DDD RROUND','Arguments',6,'p_Arguments','parser.py',1198),
  ('Arguments -> LROUND Type COMMA ExpressionList RROUND','Arguments',5,'p_Arguments','parser.py',1199),
  ('Arguments -> LROUND Type COMMA Expression DDD RROUND','Arguments',6,'p_Arguments','parser.py',1200),
  ('Arguments -> LROUND Type COMMA Expression RROUND','Arguments',5,'p_Arguments','parser.py',1201),
  ('Arguments -> LROUND IDENTIFIER DDD RROUND','Arguments',4,'p_Arguments','parser.py',1202),
  ('Arguments -> LROUND IDENTIFIER RROUND','Arguments',3,'p_Arguments','parser.py',1203),
  ('Arguments -> LROUND IDENTIFIER COMMA ExpressionList DDD RROUND','Arguments',6,'p_Arguments','parser.py',1204),
  ('Arguments -> LROUND IDENTIFIER COMMA ExpressionList RROUND','Arguments',5,'p_Arguments','parser.py',1205),
  ('Arguments -> LROUND IDENTIFIER COMMA Expression DDD RROUND','Arguments',6,'p_Arguments','parser.py',1206),
  ('Arguments -> LROUND IDENTIFIER COMMA Expression RROUND','Arguments',5,'p_Arguments','parser.py',1207),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER DDD RROUND','Arguments',6,'p_Arguments','parser.py',1208),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER RROUND','Arguments',5,'p_Arguments','parser.py',1209),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList DDD RROUND','Arguments',8,'p_Arguments','parser.py',1210),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList RROUND','Arguments',7,'p_Arguments','parser.py',1211),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression DDD RROUND','Arguments',8,'p_Arguments','parser.py',1212),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression RROUND','Arguments',7,'p_Arguments','parser.py',1213),
  ('Arguments -> LROUND ExpressionList DDD COMMA RROUND','Arguments',5,'p_Arguments','parser.py',1214),
  ('Arguments -> LROUND Expression DDD COMMA RROUND','Arguments',5,'p_Arguments','parser.py',1215),
  ('Arguments -> LROUND ExpressionList COMMA RROUND','Arguments',4,'p_Arguments','parser.py',1216),
  ('Arguments -> LROUND Expression COMMA RROUND','Arguments',4,'p_Arguments','parser.py',1217),
  ('Arguments -> LROUND Type DDD COMMA RROUND','Arguments',5,'p_Arguments','parser.py',1218),
  ('Arguments -> LROUND Type COMMA RROUND','Arguments',4,'p_Arguments','parser.py',1219),
  ('Arguments -> LROUND Type COMMA ExpressionList DDD COMMA RROUND','Arguments',7,'p_Arguments','parser.py',1220),
  ('Arguments -> LROUND Type COMMA ExpressionList COMMA RROUND','Arguments',6,'p_Arguments','parser.py',1221),
  ('Arguments -> LROUND Type COMMA Expression DDD COMMA RROUND','Arguments',7,'p_Arguments','parser.py',1222),
  ('Arguments -> LROUND Type COMMA Expression COMMA RROUND','Arguments',6,'p_Arguments','parser.py',1223),
  ('Arguments -> LROUND IDENTIFIER DDD COMMA RROUND','Arguments',5,'p_Arguments','parser.py',1224),
  ('Arguments -> LROUND IDENTIFIER COMMA RROUND','Arguments',4,'p_Arguments','parser.py',1225),
  ('Arguments -> LROUND IDENTIFIER COMMA ExpressionList DDD COMMA RROUND','Arguments',7,'p_Arguments','parser.py',1226),
  ('Arguments -> LROUND IDENTIFIER COMMA ExpressionList COMMA RROUND','Arguments',6,'p_Arguments','parser.py',1227),
  ('Arguments -> LROUND IDENTIFIER COMMA Expression DDD COMMA RROUND','Arguments',7,'p_Arguments','parser.py',1228),
  ('Arguments -> LROUND IDENTIFIER COMMA Expression COMMA RROUND','Arguments',6,'p_Arguments','parser.py',1229),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER DDD COMMA RROUND','Arguments',7,'p_Arguments','parser.py',1230),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA RROUND','Arguments',6,'p_Arguments','parser.py',1231),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList DDD COMMA RROUND','Arguments',9,'p_Arguments','parser.py',1232),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA ExpressionList COMMA RROUND','Arguments',8,'p_Arguments','parser.py',1233),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression DDD COMMA RROUND','Arguments',9,'p_Arguments','parser.py',1234),
  ('Arguments -> LROUND IDENTIFIER DOT IDENTIFIER COMMA Expression COMMA RROUND','Arguments',8,'p_Arguments','parser.py',1235),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1242),
  ('string_lit -> STRING_LIT','string_lit',1,'p_string_lit','parser.py',1247),
]
