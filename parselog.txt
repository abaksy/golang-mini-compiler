   yacc.py:3317:Created by PLY version 3.11 (http://www.dabeaz.com/ply)
   yacc.py:3368:
   yacc.py:3369:Unused terminals:
   yacc.py:3370:
   yacc.py:3373:    DDD
   yacc.py:3373:    DOUBLE_QUOTES
   yacc.py:3373:    FALSE
   yacc.py:3373:    GO
   yacc.py:3373:    NEWLINE
   yacc.py:3373:    NIL
   yacc.py:3373:    SELECT
   yacc.py:3373:    SINGLE_QUOTES
   yacc.py:3373:    TRUE
   yacc.py:3377:
   yacc.py:3378:Grammar
   yacc.py:3379:
   yacc.py:3381:Rule 0     S' -> SourceFile
   yacc.py:3381:Rule 1     SourceFile -> PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList
   yacc.py:3381:Rule 2     ImportDeclList -> ImportDecl SEMICOLON ImportDeclList
   yacc.py:3381:Rule 3     ImportDeclList -> empty
   yacc.py:3381:Rule 4     TopLevelDeclList -> TopLevelDecl SEMICOLON TopLevelDeclList
   yacc.py:3381:Rule 5     TopLevelDeclList -> empty
   yacc.py:3381:Rule 6     TopLevelDecl -> Declaration
   yacc.py:3381:Rule 7     TopLevelDecl -> FunctionDecl
   yacc.py:3381:Rule 8     ImportDecl -> IMPORT LROUND ImportSpecList RROUND
   yacc.py:3381:Rule 9     ImportDecl -> IMPORT ImportSpec
   yacc.py:3381:Rule 10    ImportSpecList -> ImportSpec SEMICOLON ImportSpecList
   yacc.py:3381:Rule 11    ImportSpecList -> empty
   yacc.py:3381:Rule 12    ImportSpec -> DOT string_lit
   yacc.py:3381:Rule 13    ImportSpec -> IDENTIFIER string_lit
   yacc.py:3381:Rule 14    ImportSpec -> empty string_lit
   yacc.py:3381:Rule 15    Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:3381:Rule 16    ScopeStart -> empty
   yacc.py:3381:Rule 17    ScopeEnd -> empty
   yacc.py:3381:Rule 18    StatementList -> Statement SEMICOLON StatementList
   yacc.py:3381:Rule 19    StatementList -> empty
   yacc.py:3381:Rule 20    Statement -> Declaration
   yacc.py:3381:Rule 21    Statement -> SimpleStmt
   yacc.py:3381:Rule 22    Statement -> ReturnStmt
   yacc.py:3381:Rule 23    Statement -> Block
   yacc.py:3381:Rule 24    Statement -> IfStmt
   yacc.py:3381:Rule 25    Statement -> SwitchStmt
   yacc.py:3381:Rule 26    Statement -> ForStmt
   yacc.py:3381:Rule 27    Statement -> BreakStmt
   yacc.py:3381:Rule 28    Statement -> ContinueStmt
   yacc.py:3381:Rule 29    Statement -> GotoStmt
   yacc.py:3381:Rule 30    Statement -> PrintIntStmt
   yacc.py:3381:Rule 31    Statement -> PrintStrStmt
   yacc.py:3381:Rule 32    PrintIntStmt -> PRINTLN LROUND IDENTIFIER RROUND
   yacc.py:3381:Rule 33    PrintIntStmt -> PRINTLN LROUND int_lit RROUND
   yacc.py:3381:Rule 34    PrintStrStmt -> PRINTLN LROUND string_lit RROUND
   yacc.py:3381:Rule 35    Declaration -> ConstDecl
   yacc.py:3381:Rule 36    Declaration -> TypeDecl
   yacc.py:3381:Rule 37    Declaration -> VarDecl
   yacc.py:3381:Rule 38    ConstDecl -> CONST LROUND ConstSpecList RROUND
   yacc.py:3381:Rule 39    ConstDecl -> CONST ConstSpec
   yacc.py:3381:Rule 40    ConstSpecList -> empty
   yacc.py:3381:Rule 41    ConstSpecList -> ConstSpecList ConstSpec SEMICOLON
   yacc.py:3381:Rule 42    ConstSpec -> IDENTIFIER
   yacc.py:3381:Rule 43    ConstSpec -> IdentifierList
   yacc.py:3381:Rule 44    ConstSpec -> IDENTIFIER EQ Expression
   yacc.py:3381:Rule 45    ConstSpec -> IdentifierList EQ ExpressionList
   yacc.py:3381:Rule 46    ConstSpec -> IDENTIFIER Type EQ Expression
   yacc.py:3381:Rule 47    ConstSpec -> IdentifierList Type EQ ExpressionList
   yacc.py:3381:Rule 48    IdentifierList -> IDENTIFIER COMMA IdentifierBotList
   yacc.py:3381:Rule 49    IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList
   yacc.py:3381:Rule 50    IdentifierBotList -> IDENTIFIER
   yacc.py:3381:Rule 51    ExpressionList -> Expression COMMA ExpressionBotList
   yacc.py:3381:Rule 52    ExpressionBotList -> Expression COMMA ExpressionBotList
   yacc.py:3381:Rule 53    ExpressionBotList -> Expression
   yacc.py:3381:Rule 54    TypeDecl -> TYPE TypeSpecTopList
   yacc.py:3381:Rule 55    TypeSpecTopList -> TypeSpec
   yacc.py:3381:Rule 56    TypeSpecTopList -> LROUND TypeSpecList RROUND
   yacc.py:3381:Rule 57    TypeSpecList -> empty
   yacc.py:3381:Rule 58    TypeSpecList -> TypeSpecList TypeSpec SEMICOLON
   yacc.py:3381:Rule 59    TypeSpec -> AliasDecl
   yacc.py:3381:Rule 60    TypeSpec -> TypeDef
   yacc.py:3381:Rule 61    AliasDecl -> IDENTIFIER EQ Type
   yacc.py:3381:Rule 62    TypeDef -> IDENTIFIER Type
   yacc.py:3381:Rule 63    Type -> TypeLit
   yacc.py:3381:Rule 64    Type -> StandardTypes
   yacc.py:3381:Rule 65    Type -> LROUND Type RROUND
   yacc.py:3381:Rule 66    StandardTypes -> PREDEFINED_TYPES
   yacc.py:3381:Rule 67    TypeLit -> ArrayType
   yacc.py:3381:Rule 68    TypeLit -> StructType
   yacc.py:3381:Rule 69    TypeLit -> FunctionType
   yacc.py:3381:Rule 70    TypeLit -> PointerType
   yacc.py:3381:Rule 71    PointerType -> STAR Type
   yacc.py:3381:Rule 72    ArrayType -> LSQUARE ArrayLength RSQUARE Type
   yacc.py:3381:Rule 73    ArrayLength -> Expression
   yacc.py:3381:Rule 74    StructType -> STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:3381:Rule 75    FieldDeclList -> empty
   yacc.py:3381:Rule 76    FieldDeclList -> FieldDeclList FieldDecl SEMICOLON
   yacc.py:3381:Rule 77    FieldDecl -> IdentifierList Type TagTop
   yacc.py:3381:Rule 78    FieldDecl -> IDENTIFIER Type TagTop
   yacc.py:3381:Rule 79    TagTop -> empty
   yacc.py:3381:Rule 80    TagTop -> Tag
   yacc.py:3381:Rule 81    Tag -> string_lit
   yacc.py:3381:Rule 82    FunctionType -> FUNC Signature
   yacc.py:3381:Rule 83    Signature -> Parameters
   yacc.py:3381:Rule 84    Signature -> Parameters Result
   yacc.py:3381:Rule 85    Result -> Parameters
   yacc.py:3381:Rule 86    Result -> Type
   yacc.py:3381:Rule 87    Parameters -> LROUND RROUND
   yacc.py:3381:Rule 88    Parameters -> LROUND ParameterList RROUND
   yacc.py:3381:Rule 89    ParameterList -> ParameterDecl
   yacc.py:3381:Rule 90    ParameterList -> ParameterList COMMA ParameterDecl
   yacc.py:3381:Rule 91    ParameterDecl -> IdentifierList Type
   yacc.py:3381:Rule 92    ParameterDecl -> IDENTIFIER Type
   yacc.py:3381:Rule 93    ParameterDecl -> Type
   yacc.py:3381:Rule 94    VarDecl -> VAR VarSpecTopList
   yacc.py:3381:Rule 95    VarSpecTopList -> VarSpec
   yacc.py:3381:Rule 96    VarSpecTopList -> LROUND VarSpecList RROUND
   yacc.py:3381:Rule 97    VarSpecList -> empty
   yacc.py:3381:Rule 98    VarSpecList -> VarSpecList VarSpec SEMICOLON
   yacc.py:3381:Rule 99    VarSpec -> IDENTIFIER Type
   yacc.py:3381:Rule 100   VarSpec -> IDENTIFIER EQ Expression
   yacc.py:3381:Rule 101   VarSpec -> IDENTIFIER Type EQ Expression
   yacc.py:3381:Rule 102   VarSpec -> IdentifierList Type
   yacc.py:3381:Rule 103   VarSpec -> IdentifierList EQ ExpressionList
   yacc.py:3381:Rule 104   VarSpec -> IdentifierList Type EQ ExpressionList
   yacc.py:3381:Rule 105   FunctionDecl -> FUNC FunctionName Signature
   yacc.py:3381:Rule 106   FunctionDecl -> FUNC FunctionName Signature FunctionBody
   yacc.py:3381:Rule 107   FunctionName -> IDENTIFIER
   yacc.py:3381:Rule 108   FunctionBody -> Block
   yacc.py:3381:Rule 109   SimpleStmt -> Expression
   yacc.py:3381:Rule 110   SimpleStmt -> Assignment
   yacc.py:3381:Rule 111   SimpleStmt -> ShortVarDecl
   yacc.py:3381:Rule 112   SimpleStmt -> IncDecStmt
   yacc.py:3381:Rule 113   IncDecStmt -> Expression PLUS_PLUS
   yacc.py:3381:Rule 114   IncDecStmt -> Expression MINUS_MINUS
   yacc.py:3381:Rule 115   ShortVarDecl -> ExpressionList ASSIGN_OP ExpressionList
   yacc.py:3381:Rule 116   ShortVarDecl -> Expression ASSIGN_OP Expression
   yacc.py:3381:Rule 117   Assignment -> ExpressionList assign_op ExpressionList
   yacc.py:3381:Rule 118   Assignment -> Expression assign_op Expression
   yacc.py:3381:Rule 119   assign_op -> EQ
   yacc.py:3381:Rule 120   assign_op -> PLUS_EQ
   yacc.py:3381:Rule 121   assign_op -> MINUS_EQ
   yacc.py:3381:Rule 122   assign_op -> OR_EQ
   yacc.py:3381:Rule 123   assign_op -> CARET_EQ
   yacc.py:3381:Rule 124   assign_op -> STAR_EQ
   yacc.py:3381:Rule 125   assign_op -> DIVIDE_EQ
   yacc.py:3381:Rule 126   assign_op -> MODULO_EQ
   yacc.py:3381:Rule 127   assign_op -> LS_EQ
   yacc.py:3381:Rule 128   assign_op -> RS_EQ
   yacc.py:3381:Rule 129   assign_op -> AMP_EQ
   yacc.py:3381:Rule 130   assign_op -> AND_OR_EQ
   yacc.py:3381:Rule 131   IfStmt -> IF Expression Block
   yacc.py:3381:Rule 132   IfStmt -> IF Expression Block ELSE elseTail
   yacc.py:3381:Rule 133   elseTail -> IfStmt
   yacc.py:3381:Rule 134   elseTail -> Block
   yacc.py:3381:Rule 135   SwitchStmt -> ExprSwitchStmt
   yacc.py:3381:Rule 136   ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:3381:Rule 137   ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:3381:Rule 138   ExprSwitchStmt -> SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:3381:Rule 139   ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:3381:Rule 140   ExprCaseClauseList -> empty
   yacc.py:3381:Rule 141   ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause
   yacc.py:3381:Rule 142   ExprCaseClause -> ExprSwitchCase COLON StatementList
   yacc.py:3381:Rule 143   ExprSwitchCase -> CASE ExpressionList
   yacc.py:3381:Rule 144   ExprSwitchCase -> DEFAULT
   yacc.py:3381:Rule 145   ExprSwitchCase -> CASE Expression
   yacc.py:3381:Rule 146   ForStmt -> FOR Expression Block
   yacc.py:3381:Rule 147   ForStmt -> FOR Block
   yacc.py:3381:Rule 148   ReturnStmt -> RETURN
   yacc.py:3381:Rule 149   ReturnStmt -> RETURN Expression
   yacc.py:3381:Rule 150   ReturnStmt -> RETURN ExpressionList
   yacc.py:3381:Rule 151   BreakStmt -> BREAK IDENTIFIER
   yacc.py:3381:Rule 152   ContinueStmt -> CONTINUE IDENTIFIER
   yacc.py:3381:Rule 153   GotoStmt -> GOTO IDENTIFIER
   yacc.py:3381:Rule 154   Expression -> UnaryExpr
   yacc.py:3381:Rule 155   Expression -> Expression OR_OR Expression
   yacc.py:3381:Rule 156   Expression -> Expression AMP_AMP Expression
   yacc.py:3381:Rule 157   Expression -> Expression EQ_EQ Expression
   yacc.py:3381:Rule 158   Expression -> Expression NOT_EQ Expression
   yacc.py:3381:Rule 159   Expression -> Expression LT Expression
   yacc.py:3381:Rule 160   Expression -> Expression LT_EQ Expression
   yacc.py:3381:Rule 161   Expression -> Expression GT Expression
   yacc.py:3381:Rule 162   Expression -> Expression GT_EQ Expression
   yacc.py:3381:Rule 163   Expression -> Expression PLUS Expression
   yacc.py:3381:Rule 164   Expression -> Expression MINUS Expression
   yacc.py:3381:Rule 165   Expression -> Expression OR Expression
   yacc.py:3381:Rule 166   Expression -> Expression CARET Expression
   yacc.py:3381:Rule 167   Expression -> Expression STAR Expression
   yacc.py:3381:Rule 168   Expression -> Expression DIVIDE Expression
   yacc.py:3381:Rule 169   Expression -> Expression MODULO Expression
   yacc.py:3381:Rule 170   Expression -> Expression LS Expression
   yacc.py:3381:Rule 171   Expression -> Expression RS Expression
   yacc.py:3381:Rule 172   Expression -> Expression AMP Expression
   yacc.py:3381:Rule 173   Expression -> Expression AND_OR Expression
   yacc.py:3381:Rule 174   UnaryExpr -> PrimaryExpr
   yacc.py:3381:Rule 175   UnaryExpr -> unary_op UnaryExpr
   yacc.py:3381:Rule 176   unary_op -> PLUS
   yacc.py:3381:Rule 177   unary_op -> MINUS
   yacc.py:3381:Rule 178   unary_op -> NOT
   yacc.py:3381:Rule 179   unary_op -> CARET
   yacc.py:3381:Rule 180   unary_op -> STAR
   yacc.py:3381:Rule 181   unary_op -> AMP
   yacc.py:3381:Rule 182   unary_op -> LT_MINUS
   yacc.py:3381:Rule 183   PrimaryExpr -> Operand
   yacc.py:3381:Rule 184   PrimaryExpr -> IDENTIFIER
   yacc.py:3381:Rule 185   PrimaryExpr -> PrimaryExpr Selector
   yacc.py:3381:Rule 186   PrimaryExpr -> PrimaryExpr Index
   yacc.py:3381:Rule 187   PrimaryExpr -> PrimaryExpr Arguments
   yacc.py:3381:Rule 188   Operand -> Literal
   yacc.py:3381:Rule 189   Operand -> LROUND Expression RROUND
   yacc.py:3381:Rule 190   Literal -> BasicLit
   yacc.py:3381:Rule 191   Literal -> FunctionLit
   yacc.py:3381:Rule 192   BasicLit -> int_lit
   yacc.py:3381:Rule 193   BasicLit -> float_lit
   yacc.py:3381:Rule 194   BasicLit -> string_lit
   yacc.py:3381:Rule 195   BasicLit -> rune_lit
   yacc.py:3381:Rule 196   int_lit -> decimal_lit
   yacc.py:3381:Rule 197   int_lit -> octal_lit
   yacc.py:3381:Rule 198   int_lit -> hex_lit
   yacc.py:3381:Rule 199   decimal_lit -> DECIMAL_LIT
   yacc.py:3381:Rule 200   octal_lit -> OCTAL_LIT
   yacc.py:3381:Rule 201   hex_lit -> HEX_LIT
   yacc.py:3381:Rule 202   float_lit -> FLOAT_LIT
   yacc.py:3381:Rule 203   FunctionLit -> FUNC Signature FunctionBody
   yacc.py:3381:Rule 204   Selector -> DOT IDENTIFIER
   yacc.py:3381:Rule 205   Index -> LSQUARE Expression RSQUARE
   yacc.py:3381:Rule 206   Arguments -> LROUND RROUND
   yacc.py:3381:Rule 207   Arguments -> LROUND ExpressionList RROUND
   yacc.py:3381:Rule 208   Arguments -> LROUND Expression RROUND
   yacc.py:3381:Rule 209   Arguments -> LROUND Type RROUND
   yacc.py:3381:Rule 210   Arguments -> LROUND Type COMMA ExpressionList RROUND
   yacc.py:3381:Rule 211   Arguments -> LROUND Type COMMA Expression RROUND
   yacc.py:3381:Rule 212   string_lit -> STRING_LIT
   yacc.py:3381:Rule 213   rune_lit -> RUNE_LIT
   yacc.py:3381:Rule 214   empty -> <empty>
   yacc.py:3399:
   yacc.py:3400:Terminals, with rules where they appear
   yacc.py:3401:
   yacc.py:3405:AMP                  : 172 181
   yacc.py:3405:AMP_AMP              : 156
   yacc.py:3405:AMP_EQ               : 129
   yacc.py:3405:AND_OR               : 173
   yacc.py:3405:AND_OR_EQ            : 130
   yacc.py:3405:ASSIGN_OP            : 115 116
   yacc.py:3405:BREAK                : 151
   yacc.py:3405:CARET                : 166 179
   yacc.py:3405:CARET_EQ             : 123
   yacc.py:3405:CASE                 : 143 145
   yacc.py:3405:COLON                : 142
   yacc.py:3405:COMMA                : 48 49 51 52 90 210 211
   yacc.py:3405:CONST                : 38 39
   yacc.py:3405:CONTINUE             : 152
   yacc.py:3405:DDD                  : 
   yacc.py:3405:DECIMAL_LIT          : 199
   yacc.py:3405:DEFAULT              : 144
   yacc.py:3405:DIVIDE               : 168
   yacc.py:3405:DIVIDE_EQ            : 125
   yacc.py:3405:DOT                  : 12 204
   yacc.py:3405:DOUBLE_QUOTES        : 
   yacc.py:3405:ELSE                 : 132
   yacc.py:3405:EQ                   : 44 45 46 47 61 100 101 103 104 119
   yacc.py:3405:EQ_EQ                : 157
   yacc.py:3405:FALSE                : 
   yacc.py:3405:FLOAT_LIT            : 202
   yacc.py:3405:FOR                  : 146 147
   yacc.py:3405:FUNC                 : 82 105 106 203
   yacc.py:3405:GO                   : 
   yacc.py:3405:GOTO                 : 153
   yacc.py:3405:GT                   : 161
   yacc.py:3405:GT_EQ                : 162
   yacc.py:3405:HEX_LIT              : 201
   yacc.py:3405:IDENTIFIER           : 1 13 32 42 44 46 48 49 50 61 62 78 92 99 100 101 107 151 152 153 184 204
   yacc.py:3405:IF                   : 131 132
   yacc.py:3405:IMPORT               : 8 9
   yacc.py:3405:LCURLY               : 15 74 136 137 138 139
   yacc.py:3405:LROUND               : 8 32 33 34 38 56 65 87 88 96 189 206 207 208 209 210 211
   yacc.py:3405:LS                   : 170
   yacc.py:3405:LSQUARE              : 72 205
   yacc.py:3405:LS_EQ                : 127
   yacc.py:3405:LT                   : 159
   yacc.py:3405:LT_EQ                : 160
   yacc.py:3405:LT_MINUS             : 182
   yacc.py:3405:MINUS                : 164 177
   yacc.py:3405:MINUS_EQ             : 121
   yacc.py:3405:MINUS_MINUS          : 114
   yacc.py:3405:MODULO               : 169
   yacc.py:3405:MODULO_EQ            : 126
   yacc.py:3405:NEWLINE              : 
   yacc.py:3405:NIL                  : 
   yacc.py:3405:NOT                  : 178
   yacc.py:3405:NOT_EQ               : 158
   yacc.py:3405:OCTAL_LIT            : 200
   yacc.py:3405:OR                   : 165
   yacc.py:3405:OR_EQ                : 122
   yacc.py:3405:OR_OR                : 155
   yacc.py:3405:PACKAGE              : 1
   yacc.py:3405:PLUS                 : 163 176
   yacc.py:3405:PLUS_EQ              : 120
   yacc.py:3405:PLUS_PLUS            : 113
   yacc.py:3405:PREDEFINED_TYPES     : 66
   yacc.py:3405:PRINTLN              : 32 33 34
   yacc.py:3405:RCURLY               : 15 74 136 137 138 139
   yacc.py:3405:RETURN               : 148 149 150
   yacc.py:3405:RROUND               : 8 32 33 34 38 56 65 87 88 96 189 206 207 208 209 210 211
   yacc.py:3405:RS                   : 171
   yacc.py:3405:RSQUARE              : 72 205
   yacc.py:3405:RS_EQ                : 128
   yacc.py:3405:RUNE_LIT             : 213
   yacc.py:3405:SELECT               : 
   yacc.py:3405:SEMICOLON            : 1 2 4 10 18 41 58 76 98 136 137
   yacc.py:3405:SINGLE_QUOTES        : 
   yacc.py:3405:STAR                 : 71 167 180
   yacc.py:3405:STAR_EQ              : 124
   yacc.py:3405:STRING_LIT           : 212
   yacc.py:3405:STRUCT               : 74
   yacc.py:3405:SWITCH               : 136 137 138 139
   yacc.py:3405:TRUE                 : 
   yacc.py:3405:TYPE                 : 54
   yacc.py:3405:VAR                  : 94
   yacc.py:3405:error                : 
   yacc.py:3407:
   yacc.py:3408:Nonterminals, with rules where they appear
   yacc.py:3409:
   yacc.py:3413:AliasDecl            : 59
   yacc.py:3413:Arguments            : 187
   yacc.py:3413:ArrayLength          : 72
   yacc.py:3413:ArrayType            : 67
   yacc.py:3413:Assignment           : 110
   yacc.py:3413:BasicLit             : 190
   yacc.py:3413:Block                : 23 108 131 132 134 146 147
   yacc.py:3413:BreakStmt            : 27
   yacc.py:3413:ConstDecl            : 35
   yacc.py:3413:ConstSpec            : 39 41
   yacc.py:3413:ConstSpecList        : 38 41
   yacc.py:3413:ContinueStmt         : 28
   yacc.py:3413:Declaration          : 6 20
   yacc.py:3413:ExprCaseClause       : 141
   yacc.py:3413:ExprCaseClauseList   : 136 137 138 139 141
   yacc.py:3413:ExprSwitchCase       : 142
   yacc.py:3413:ExprSwitchStmt       : 135
   yacc.py:3413:Expression           : 44 46 51 52 53 73 100 101 109 113 114 116 116 118 118 131 132 137 139 145 146 149 155 155 156 156 157 157 158 158 159 159 160 160 161 161 162 162 163 163 164 164 165 165 166 166 167 167 168 168 169 169 170 170 171 171 172 172 173 173 189 205 208 211
   yacc.py:3413:ExpressionBotList    : 51 52
   yacc.py:3413:ExpressionList       : 45 47 103 104 115 115 117 117 143 150 207 210
   yacc.py:3413:FieldDecl            : 76
   yacc.py:3413:FieldDeclList        : 74 76
   yacc.py:3413:ForStmt              : 26
   yacc.py:3413:FunctionBody         : 106 203
   yacc.py:3413:FunctionDecl         : 7
   yacc.py:3413:FunctionLit          : 191
   yacc.py:3413:FunctionName         : 105 106
   yacc.py:3413:FunctionType         : 69
   yacc.py:3413:GotoStmt             : 29
   yacc.py:3413:IdentifierBotList    : 48 49
   yacc.py:3413:IdentifierList       : 43 45 47 77 91 102 103 104
   yacc.py:3413:IfStmt               : 24 133
   yacc.py:3413:ImportDecl           : 2
   yacc.py:3413:ImportDeclList       : 1 2
   yacc.py:3413:ImportSpec           : 9 10
   yacc.py:3413:ImportSpecList       : 8 10
   yacc.py:3413:IncDecStmt           : 112
   yacc.py:3413:Index                : 186
   yacc.py:3413:Literal              : 188
   yacc.py:3413:Operand              : 183
   yacc.py:3413:ParameterDecl        : 89 90
   yacc.py:3413:ParameterList        : 88 90
   yacc.py:3413:Parameters           : 83 84 85
   yacc.py:3413:PointerType          : 70
   yacc.py:3413:PrimaryExpr          : 174 185 186 187
   yacc.py:3413:PrintIntStmt         : 30
   yacc.py:3413:PrintStrStmt         : 31
   yacc.py:3413:Result               : 84
   yacc.py:3413:ReturnStmt           : 22
   yacc.py:3413:ScopeEnd             : 15 136 137 138 139
   yacc.py:3413:ScopeStart           : 15 136 137 138 139
   yacc.py:3413:Selector             : 185
   yacc.py:3413:ShortVarDecl         : 111
   yacc.py:3413:Signature            : 82 105 106 203
   yacc.py:3413:SimpleStmt           : 21 136 137
   yacc.py:3413:SourceFile           : 0
   yacc.py:3413:StandardTypes        : 64
   yacc.py:3413:Statement            : 18
   yacc.py:3413:StatementList        : 15 18 142
   yacc.py:3413:StructType           : 68
   yacc.py:3413:SwitchStmt           : 25
   yacc.py:3413:Tag                  : 80
   yacc.py:3413:TagTop               : 77 78
   yacc.py:3413:TopLevelDecl         : 4
   yacc.py:3413:TopLevelDeclList     : 1 4
   yacc.py:3413:Type                 : 46 47 61 62 65 71 72 77 78 86 91 92 93 99 101 102 104 209 210 211
   yacc.py:3413:TypeDecl             : 36
   yacc.py:3413:TypeDef              : 60
   yacc.py:3413:TypeLit              : 63
   yacc.py:3413:TypeSpec             : 55 58
   yacc.py:3413:TypeSpecList         : 56 58
   yacc.py:3413:TypeSpecTopList      : 54
   yacc.py:3413:UnaryExpr            : 154 175
   yacc.py:3413:VarDecl              : 37
   yacc.py:3413:VarSpec              : 95 98
   yacc.py:3413:VarSpecList          : 96 98
   yacc.py:3413:VarSpecTopList       : 94
   yacc.py:3413:assign_op            : 117 118
   yacc.py:3413:decimal_lit          : 196
   yacc.py:3413:elseTail             : 132
   yacc.py:3413:empty                : 3 5 11 14 16 17 19 40 57 75 79 97 140
   yacc.py:3413:float_lit            : 193
   yacc.py:3413:hex_lit              : 198
   yacc.py:3413:int_lit              : 33 192
   yacc.py:3413:octal_lit            : 197
   yacc.py:3413:rune_lit             : 195
   yacc.py:3413:string_lit           : 12 13 14 34 81 194
   yacc.py:3413:unary_op             : 175
   yacc.py:3414:
   yacc.py:2543:Parsing method: LALR
   yacc.py:2561:
   yacc.py:2562:state 0
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> . SourceFile
   yacc.py:2565:    (1) SourceFile -> . PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList
   yacc.py:2566:
   yacc.py:2687:    PACKAGE         shift and go to state 2
   yacc.py:2689:
   yacc.py:2714:    SourceFile                     shift and go to state 1
   yacc.py:2561:
   yacc.py:2562:state 1
   yacc.py:2563:
   yacc.py:2565:    (0) S' -> SourceFile .
   yacc.py:2566:
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 2
   yacc.py:2563:
   yacc.py:2565:    (1) SourceFile -> PACKAGE . IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 3
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 3
   yacc.py:2563:
   yacc.py:2565:    (1) SourceFile -> PACKAGE IDENTIFIER . SEMICOLON ImportDeclList TopLevelDeclList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 4
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 4
   yacc.py:2563:
   yacc.py:2565:    (1) SourceFile -> PACKAGE IDENTIFIER SEMICOLON . ImportDeclList TopLevelDeclList
   yacc.py:2565:    (2) ImportDeclList -> . ImportDecl SEMICOLON ImportDeclList
   yacc.py:2565:    (3) ImportDeclList -> . empty
   yacc.py:2565:    (8) ImportDecl -> . IMPORT LROUND ImportSpecList RROUND
   yacc.py:2565:    (9) ImportDecl -> . IMPORT ImportSpec
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    IMPORT          shift and go to state 8
   yacc.py:2687:    FUNC            reduce using rule 214 (empty -> .)
   yacc.py:2687:    CONST           reduce using rule 214 (empty -> .)
   yacc.py:2687:    TYPE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    VAR             reduce using rule 214 (empty -> .)
   yacc.py:2687:    $end            reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ImportDeclList                 shift and go to state 5
   yacc.py:2714:    ImportDecl                     shift and go to state 6
   yacc.py:2714:    empty                          shift and go to state 7
   yacc.py:2561:
   yacc.py:2562:state 5
   yacc.py:2563:
   yacc.py:2565:    (1) SourceFile -> PACKAGE IDENTIFIER SEMICOLON ImportDeclList . TopLevelDeclList
   yacc.py:2565:    (4) TopLevelDeclList -> . TopLevelDecl SEMICOLON TopLevelDeclList
   yacc.py:2565:    (5) TopLevelDeclList -> . empty
   yacc.py:2565:    (6) TopLevelDecl -> . Declaration
   yacc.py:2565:    (7) TopLevelDecl -> . FunctionDecl
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (35) Declaration -> . ConstDecl
   yacc.py:2565:    (36) Declaration -> . TypeDecl
   yacc.py:2565:    (37) Declaration -> . VarDecl
   yacc.py:2565:    (105) FunctionDecl -> . FUNC FunctionName Signature
   yacc.py:2565:    (106) FunctionDecl -> . FUNC FunctionName Signature FunctionBody
   yacc.py:2565:    (38) ConstDecl -> . CONST LROUND ConstSpecList RROUND
   yacc.py:2565:    (39) ConstDecl -> . CONST ConstSpec
   yacc.py:2565:    (54) TypeDecl -> . TYPE TypeSpecTopList
   yacc.py:2565:    (94) VarDecl -> . VAR VarSpecTopList
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 214 (empty -> .)
   yacc.py:2687:    FUNC            shift and go to state 17
   yacc.py:2687:    CONST           shift and go to state 18
   yacc.py:2687:    TYPE            shift and go to state 19
   yacc.py:2687:    VAR             shift and go to state 20
   yacc.py:2689:
   yacc.py:2714:    TopLevelDeclList               shift and go to state 9
   yacc.py:2714:    TopLevelDecl                   shift and go to state 10
   yacc.py:2714:    empty                          shift and go to state 11
   yacc.py:2714:    Declaration                    shift and go to state 12
   yacc.py:2714:    FunctionDecl                   shift and go to state 13
   yacc.py:2714:    ConstDecl                      shift and go to state 14
   yacc.py:2714:    TypeDecl                       shift and go to state 15
   yacc.py:2714:    VarDecl                        shift and go to state 16
   yacc.py:2561:
   yacc.py:2562:state 6
   yacc.py:2563:
   yacc.py:2565:    (2) ImportDeclList -> ImportDecl . SEMICOLON ImportDeclList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 21
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 7
   yacc.py:2563:
   yacc.py:2565:    (3) ImportDeclList -> empty .
   yacc.py:2566:
   yacc.py:2687:    FUNC            reduce using rule 3 (ImportDeclList -> empty .)
   yacc.py:2687:    CONST           reduce using rule 3 (ImportDeclList -> empty .)
   yacc.py:2687:    TYPE            reduce using rule 3 (ImportDeclList -> empty .)
   yacc.py:2687:    VAR             reduce using rule 3 (ImportDeclList -> empty .)
   yacc.py:2687:    $end            reduce using rule 3 (ImportDeclList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 8
   yacc.py:2563:
   yacc.py:2565:    (8) ImportDecl -> IMPORT . LROUND ImportSpecList RROUND
   yacc.py:2565:    (9) ImportDecl -> IMPORT . ImportSpec
   yacc.py:2565:    (12) ImportSpec -> . DOT string_lit
   yacc.py:2565:    (13) ImportSpec -> . IDENTIFIER string_lit
   yacc.py:2565:    (14) ImportSpec -> . empty string_lit
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 22
   yacc.py:2687:    DOT             shift and go to state 24
   yacc.py:2687:    IDENTIFIER      shift and go to state 25
   yacc.py:2687:    STRING_LIT      reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ImportSpec                     shift and go to state 23
   yacc.py:2714:    empty                          shift and go to state 26
   yacc.py:2561:
   yacc.py:2562:state 9
   yacc.py:2563:
   yacc.py:2565:    (1) SourceFile -> PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 1 (SourceFile -> PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 10
   yacc.py:2563:
   yacc.py:2565:    (4) TopLevelDeclList -> TopLevelDecl . SEMICOLON TopLevelDeclList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 27
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 11
   yacc.py:2563:
   yacc.py:2565:    (5) TopLevelDeclList -> empty .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 5 (TopLevelDeclList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 12
   yacc.py:2563:
   yacc.py:2565:    (6) TopLevelDecl -> Declaration .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 6 (TopLevelDecl -> Declaration .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 13
   yacc.py:2563:
   yacc.py:2565:    (7) TopLevelDecl -> FunctionDecl .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 7 (TopLevelDecl -> FunctionDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 14
   yacc.py:2563:
   yacc.py:2565:    (35) Declaration -> ConstDecl .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 35 (Declaration -> ConstDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 15
   yacc.py:2563:
   yacc.py:2565:    (36) Declaration -> TypeDecl .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 36 (Declaration -> TypeDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 16
   yacc.py:2563:
   yacc.py:2565:    (37) Declaration -> VarDecl .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 37 (Declaration -> VarDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 17
   yacc.py:2563:
   yacc.py:2565:    (105) FunctionDecl -> FUNC . FunctionName Signature
   yacc.py:2565:    (106) FunctionDecl -> FUNC . FunctionName Signature FunctionBody
   yacc.py:2565:    (107) FunctionName -> . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 29
   yacc.py:2689:
   yacc.py:2714:    FunctionName                   shift and go to state 28
   yacc.py:2561:
   yacc.py:2562:state 18
   yacc.py:2563:
   yacc.py:2565:    (38) ConstDecl -> CONST . LROUND ConstSpecList RROUND
   yacc.py:2565:    (39) ConstDecl -> CONST . ConstSpec
   yacc.py:2565:    (42) ConstSpec -> . IDENTIFIER
   yacc.py:2565:    (43) ConstSpec -> . IdentifierList
   yacc.py:2565:    (44) ConstSpec -> . IDENTIFIER EQ Expression
   yacc.py:2565:    (45) ConstSpec -> . IdentifierList EQ ExpressionList
   yacc.py:2565:    (46) ConstSpec -> . IDENTIFIER Type EQ Expression
   yacc.py:2565:    (47) ConstSpec -> . IdentifierList Type EQ ExpressionList
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 30
   yacc.py:2687:    IDENTIFIER      shift and go to state 32
   yacc.py:2689:
   yacc.py:2714:    ConstSpec                      shift and go to state 31
   yacc.py:2714:    IdentifierList                 shift and go to state 33
   yacc.py:2561:
   yacc.py:2562:state 19
   yacc.py:2563:
   yacc.py:2565:    (54) TypeDecl -> TYPE . TypeSpecTopList
   yacc.py:2565:    (55) TypeSpecTopList -> . TypeSpec
   yacc.py:2565:    (56) TypeSpecTopList -> . LROUND TypeSpecList RROUND
   yacc.py:2565:    (59) TypeSpec -> . AliasDecl
   yacc.py:2565:    (60) TypeSpec -> . TypeDef
   yacc.py:2565:    (61) AliasDecl -> . IDENTIFIER EQ Type
   yacc.py:2565:    (62) TypeDef -> . IDENTIFIER Type
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 36
   yacc.py:2687:    IDENTIFIER      shift and go to state 39
   yacc.py:2689:
   yacc.py:2714:    TypeSpecTopList                shift and go to state 34
   yacc.py:2714:    TypeSpec                       shift and go to state 35
   yacc.py:2714:    AliasDecl                      shift and go to state 37
   yacc.py:2714:    TypeDef                        shift and go to state 38
   yacc.py:2561:
   yacc.py:2562:state 20
   yacc.py:2563:
   yacc.py:2565:    (94) VarDecl -> VAR . VarSpecTopList
   yacc.py:2565:    (95) VarSpecTopList -> . VarSpec
   yacc.py:2565:    (96) VarSpecTopList -> . LROUND VarSpecList RROUND
   yacc.py:2565:    (99) VarSpec -> . IDENTIFIER Type
   yacc.py:2565:    (100) VarSpec -> . IDENTIFIER EQ Expression
   yacc.py:2565:    (101) VarSpec -> . IDENTIFIER Type EQ Expression
   yacc.py:2565:    (102) VarSpec -> . IdentifierList Type
   yacc.py:2565:    (103) VarSpec -> . IdentifierList EQ ExpressionList
   yacc.py:2565:    (104) VarSpec -> . IdentifierList Type EQ ExpressionList
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 42
   yacc.py:2687:    IDENTIFIER      shift and go to state 43
   yacc.py:2689:
   yacc.py:2714:    VarSpecTopList                 shift and go to state 40
   yacc.py:2714:    VarSpec                        shift and go to state 41
   yacc.py:2714:    IdentifierList                 shift and go to state 44
   yacc.py:2561:
   yacc.py:2562:state 21
   yacc.py:2563:
   yacc.py:2565:    (2) ImportDeclList -> ImportDecl SEMICOLON . ImportDeclList
   yacc.py:2565:    (2) ImportDeclList -> . ImportDecl SEMICOLON ImportDeclList
   yacc.py:2565:    (3) ImportDeclList -> . empty
   yacc.py:2565:    (8) ImportDecl -> . IMPORT LROUND ImportSpecList RROUND
   yacc.py:2565:    (9) ImportDecl -> . IMPORT ImportSpec
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    IMPORT          shift and go to state 8
   yacc.py:2687:    FUNC            reduce using rule 214 (empty -> .)
   yacc.py:2687:    CONST           reduce using rule 214 (empty -> .)
   yacc.py:2687:    TYPE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    VAR             reduce using rule 214 (empty -> .)
   yacc.py:2687:    $end            reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ImportDecl                     shift and go to state 6
   yacc.py:2714:    ImportDeclList                 shift and go to state 45
   yacc.py:2714:    empty                          shift and go to state 7
   yacc.py:2561:
   yacc.py:2562:state 22
   yacc.py:2563:
   yacc.py:2565:    (8) ImportDecl -> IMPORT LROUND . ImportSpecList RROUND
   yacc.py:2565:    (10) ImportSpecList -> . ImportSpec SEMICOLON ImportSpecList
   yacc.py:2565:    (11) ImportSpecList -> . empty
   yacc.py:2565:    (12) ImportSpec -> . DOT string_lit
   yacc.py:2565:    (13) ImportSpec -> . IDENTIFIER string_lit
   yacc.py:2565:    (14) ImportSpec -> . empty string_lit
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    DOT             shift and go to state 24
   yacc.py:2687:    IDENTIFIER      shift and go to state 25
   yacc.py:2687:    STRING_LIT      reduce using rule 214 (empty -> .)
   yacc.py:2687:    RROUND          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ImportSpecList                 shift and go to state 46
   yacc.py:2714:    ImportSpec                     shift and go to state 47
   yacc.py:2714:    empty                          shift and go to state 48
   yacc.py:2561:
   yacc.py:2562:state 23
   yacc.py:2563:
   yacc.py:2565:    (9) ImportDecl -> IMPORT ImportSpec .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 9 (ImportDecl -> IMPORT ImportSpec .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 24
   yacc.py:2563:
   yacc.py:2565:    (12) ImportSpec -> DOT . string_lit
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2566:
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2689:
   yacc.py:2714:    string_lit                     shift and go to state 49
   yacc.py:2561:
   yacc.py:2562:state 25
   yacc.py:2563:
   yacc.py:2565:    (13) ImportSpec -> IDENTIFIER . string_lit
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2566:
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2689:
   yacc.py:2714:    string_lit                     shift and go to state 51
   yacc.py:2561:
   yacc.py:2562:state 26
   yacc.py:2563:
   yacc.py:2565:    (14) ImportSpec -> empty . string_lit
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2566:
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2689:
   yacc.py:2714:    string_lit                     shift and go to state 52
   yacc.py:2561:
   yacc.py:2562:state 27
   yacc.py:2563:
   yacc.py:2565:    (4) TopLevelDeclList -> TopLevelDecl SEMICOLON . TopLevelDeclList
   yacc.py:2565:    (4) TopLevelDeclList -> . TopLevelDecl SEMICOLON TopLevelDeclList
   yacc.py:2565:    (5) TopLevelDeclList -> . empty
   yacc.py:2565:    (6) TopLevelDecl -> . Declaration
   yacc.py:2565:    (7) TopLevelDecl -> . FunctionDecl
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (35) Declaration -> . ConstDecl
   yacc.py:2565:    (36) Declaration -> . TypeDecl
   yacc.py:2565:    (37) Declaration -> . VarDecl
   yacc.py:2565:    (105) FunctionDecl -> . FUNC FunctionName Signature
   yacc.py:2565:    (106) FunctionDecl -> . FUNC FunctionName Signature FunctionBody
   yacc.py:2565:    (38) ConstDecl -> . CONST LROUND ConstSpecList RROUND
   yacc.py:2565:    (39) ConstDecl -> . CONST ConstSpec
   yacc.py:2565:    (54) TypeDecl -> . TYPE TypeSpecTopList
   yacc.py:2565:    (94) VarDecl -> . VAR VarSpecTopList
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 214 (empty -> .)
   yacc.py:2687:    FUNC            shift and go to state 17
   yacc.py:2687:    CONST           shift and go to state 18
   yacc.py:2687:    TYPE            shift and go to state 19
   yacc.py:2687:    VAR             shift and go to state 20
   yacc.py:2689:
   yacc.py:2714:    TopLevelDecl                   shift and go to state 10
   yacc.py:2714:    TopLevelDeclList               shift and go to state 53
   yacc.py:2714:    empty                          shift and go to state 11
   yacc.py:2714:    Declaration                    shift and go to state 12
   yacc.py:2714:    FunctionDecl                   shift and go to state 13
   yacc.py:2714:    ConstDecl                      shift and go to state 14
   yacc.py:2714:    TypeDecl                       shift and go to state 15
   yacc.py:2714:    VarDecl                        shift and go to state 16
   yacc.py:2561:
   yacc.py:2562:state 28
   yacc.py:2563:
   yacc.py:2565:    (105) FunctionDecl -> FUNC FunctionName . Signature
   yacc.py:2565:    (106) FunctionDecl -> FUNC FunctionName . Signature FunctionBody
   yacc.py:2565:    (83) Signature -> . Parameters
   yacc.py:2565:    (84) Signature -> . Parameters Result
   yacc.py:2565:    (87) Parameters -> . LROUND RROUND
   yacc.py:2565:    (88) Parameters -> . LROUND ParameterList RROUND
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 56
   yacc.py:2689:
   yacc.py:2714:    Signature                      shift and go to state 54
   yacc.py:2714:    Parameters                     shift and go to state 55
   yacc.py:2561:
   yacc.py:2562:state 29
   yacc.py:2563:
   yacc.py:2565:    (107) FunctionName -> IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    LROUND          reduce using rule 107 (FunctionName -> IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 30
   yacc.py:2563:
   yacc.py:2565:    (38) ConstDecl -> CONST LROUND . ConstSpecList RROUND
   yacc.py:2565:    (40) ConstSpecList -> . empty
   yacc.py:2565:    (41) ConstSpecList -> . ConstSpecList ConstSpec SEMICOLON
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 214 (empty -> .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ConstSpecList                  shift and go to state 57
   yacc.py:2714:    empty                          shift and go to state 58
   yacc.py:2561:
   yacc.py:2562:state 31
   yacc.py:2563:
   yacc.py:2565:    (39) ConstDecl -> CONST ConstSpec .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 39 (ConstDecl -> CONST ConstSpec .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 32
   yacc.py:2563:
   yacc.py:2565:    (42) ConstSpec -> IDENTIFIER .
   yacc.py:2565:    (44) ConstSpec -> IDENTIFIER . EQ Expression
   yacc.py:2565:    (46) ConstSpec -> IDENTIFIER . Type EQ Expression
   yacc.py:2565:    (48) IdentifierList -> IDENTIFIER . COMMA IdentifierBotList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 42 (ConstSpec -> IDENTIFIER .)
   yacc.py:2687:    EQ              shift and go to state 59
   yacc.py:2687:    COMMA           shift and go to state 61
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 60
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 33
   yacc.py:2563:
   yacc.py:2565:    (43) ConstSpec -> IdentifierList .
   yacc.py:2565:    (45) ConstSpec -> IdentifierList . EQ ExpressionList
   yacc.py:2565:    (47) ConstSpec -> IdentifierList . Type EQ ExpressionList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 43 (ConstSpec -> IdentifierList .)
   yacc.py:2687:    EQ              shift and go to state 74
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 75
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 34
   yacc.py:2563:
   yacc.py:2565:    (54) TypeDecl -> TYPE TypeSpecTopList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 54 (TypeDecl -> TYPE TypeSpecTopList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 35
   yacc.py:2563:
   yacc.py:2565:    (55) TypeSpecTopList -> TypeSpec .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 55 (TypeSpecTopList -> TypeSpec .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 36
   yacc.py:2563:
   yacc.py:2565:    (56) TypeSpecTopList -> LROUND . TypeSpecList RROUND
   yacc.py:2565:    (57) TypeSpecList -> . empty
   yacc.py:2565:    (58) TypeSpecList -> . TypeSpecList TypeSpec SEMICOLON
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 214 (empty -> .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    TypeSpecList                   shift and go to state 76
   yacc.py:2714:    empty                          shift and go to state 77
   yacc.py:2561:
   yacc.py:2562:state 37
   yacc.py:2563:
   yacc.py:2565:    (59) TypeSpec -> AliasDecl .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 59 (TypeSpec -> AliasDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 38
   yacc.py:2563:
   yacc.py:2565:    (60) TypeSpec -> TypeDef .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 60 (TypeSpec -> TypeDef .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 39
   yacc.py:2563:
   yacc.py:2565:    (61) AliasDecl -> IDENTIFIER . EQ Type
   yacc.py:2565:    (62) TypeDef -> IDENTIFIER . Type
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    EQ              shift and go to state 78
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 79
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 40
   yacc.py:2563:
   yacc.py:2565:    (94) VarDecl -> VAR VarSpecTopList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 94 (VarDecl -> VAR VarSpecTopList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 41
   yacc.py:2563:
   yacc.py:2565:    (95) VarSpecTopList -> VarSpec .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 95 (VarSpecTopList -> VarSpec .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 42
   yacc.py:2563:
   yacc.py:2565:    (96) VarSpecTopList -> LROUND . VarSpecList RROUND
   yacc.py:2565:    (97) VarSpecList -> . empty
   yacc.py:2565:    (98) VarSpecList -> . VarSpecList VarSpec SEMICOLON
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 214 (empty -> .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    VarSpecList                    shift and go to state 80
   yacc.py:2714:    empty                          shift and go to state 81
   yacc.py:2561:
   yacc.py:2562:state 43
   yacc.py:2563:
   yacc.py:2565:    (99) VarSpec -> IDENTIFIER . Type
   yacc.py:2565:    (100) VarSpec -> IDENTIFIER . EQ Expression
   yacc.py:2565:    (101) VarSpec -> IDENTIFIER . Type EQ Expression
   yacc.py:2565:    (48) IdentifierList -> IDENTIFIER . COMMA IdentifierBotList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    EQ              shift and go to state 83
   yacc.py:2687:    COMMA           shift and go to state 61
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 82
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 44
   yacc.py:2563:
   yacc.py:2565:    (102) VarSpec -> IdentifierList . Type
   yacc.py:2565:    (103) VarSpec -> IdentifierList . EQ ExpressionList
   yacc.py:2565:    (104) VarSpec -> IdentifierList . Type EQ ExpressionList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    EQ              shift and go to state 85
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 84
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 45
   yacc.py:2563:
   yacc.py:2565:    (2) ImportDeclList -> ImportDecl SEMICOLON ImportDeclList .
   yacc.py:2566:
   yacc.py:2687:    FUNC            reduce using rule 2 (ImportDeclList -> ImportDecl SEMICOLON ImportDeclList .)
   yacc.py:2687:    CONST           reduce using rule 2 (ImportDeclList -> ImportDecl SEMICOLON ImportDeclList .)
   yacc.py:2687:    TYPE            reduce using rule 2 (ImportDeclList -> ImportDecl SEMICOLON ImportDeclList .)
   yacc.py:2687:    VAR             reduce using rule 2 (ImportDeclList -> ImportDecl SEMICOLON ImportDeclList .)
   yacc.py:2687:    $end            reduce using rule 2 (ImportDeclList -> ImportDecl SEMICOLON ImportDeclList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 46
   yacc.py:2563:
   yacc.py:2565:    (8) ImportDecl -> IMPORT LROUND ImportSpecList . RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 86
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 47
   yacc.py:2563:
   yacc.py:2565:    (10) ImportSpecList -> ImportSpec . SEMICOLON ImportSpecList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 87
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 48
   yacc.py:2563:
   yacc.py:2565:    (11) ImportSpecList -> empty .
   yacc.py:2565:    (14) ImportSpec -> empty . string_lit
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 11 (ImportSpecList -> empty .)
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2689:
   yacc.py:2714:    string_lit                     shift and go to state 52
   yacc.py:2561:
   yacc.py:2562:state 49
   yacc.py:2563:
   yacc.py:2565:    (12) ImportSpec -> DOT string_lit .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 12 (ImportSpec -> DOT string_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 50
   yacc.py:2563:
   yacc.py:2565:    (212) string_lit -> STRING_LIT .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    DOT             reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    LSQUARE         reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    LROUND          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    OR_OR           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    AMP_AMP         reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    EQ_EQ           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    NOT_EQ          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    LT              reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    LT_EQ           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    GT              reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    GT_EQ           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    PLUS            reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    MINUS           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    OR              reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    CARET           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    STAR            reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    DIVIDE          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    MODULO          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    LS              reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    RS              reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    AMP             reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    AND_OR          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    RSQUARE         reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    COMMA           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    RROUND          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    EQ              reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    OR_EQ           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    CARET_EQ        reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    STAR_EQ         reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    LS_EQ           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    RS_EQ           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    AMP_EQ          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    COLON           reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2687:    LCURLY          reduce using rule 212 (string_lit -> STRING_LIT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 51
   yacc.py:2563:
   yacc.py:2565:    (13) ImportSpec -> IDENTIFIER string_lit .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 13 (ImportSpec -> IDENTIFIER string_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 52
   yacc.py:2563:
   yacc.py:2565:    (14) ImportSpec -> empty string_lit .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 14 (ImportSpec -> empty string_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 53
   yacc.py:2563:
   yacc.py:2565:    (4) TopLevelDeclList -> TopLevelDecl SEMICOLON TopLevelDeclList .
   yacc.py:2566:
   yacc.py:2687:    $end            reduce using rule 4 (TopLevelDeclList -> TopLevelDecl SEMICOLON TopLevelDeclList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 54
   yacc.py:2563:
   yacc.py:2565:    (105) FunctionDecl -> FUNC FunctionName Signature .
   yacc.py:2565:    (106) FunctionDecl -> FUNC FunctionName Signature . FunctionBody
   yacc.py:2565:    (108) FunctionBody -> . Block
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 105 (FunctionDecl -> FUNC FunctionName Signature .)
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2689:
   yacc.py:2714:    FunctionBody                   shift and go to state 88
   yacc.py:2714:    Block                          shift and go to state 89
   yacc.py:2561:
   yacc.py:2562:state 55
   yacc.py:2563:
   yacc.py:2565:    (83) Signature -> Parameters .
   yacc.py:2565:    (84) Signature -> Parameters . Result
   yacc.py:2565:    (85) Result -> . Parameters
   yacc.py:2565:    (86) Result -> . Type
   yacc.py:2565:    (87) Parameters -> . LROUND RROUND
   yacc.py:2565:    (88) Parameters -> . LROUND ParameterList RROUND
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    LCURLY          reduce using rule 83 (Signature -> Parameters .)
   yacc.py:2687:    SEMICOLON       reduce using rule 83 (Signature -> Parameters .)
   yacc.py:2687:    EQ              reduce using rule 83 (Signature -> Parameters .)
   yacc.py:2687:    RROUND          reduce using rule 83 (Signature -> Parameters .)
   yacc.py:2687:    COMMA           reduce using rule 83 (Signature -> Parameters .)
   yacc.py:2687:    STRING_LIT      reduce using rule 83 (Signature -> Parameters .)
   yacc.py:2687:    LROUND          shift and go to state 94
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Parameters                     shift and go to state 91
   yacc.py:2714:    Result                         shift and go to state 92
   yacc.py:2714:    Type                           shift and go to state 93
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 56
   yacc.py:2563:
   yacc.py:2565:    (87) Parameters -> LROUND . RROUND
   yacc.py:2565:    (88) Parameters -> LROUND . ParameterList RROUND
   yacc.py:2565:    (89) ParameterList -> . ParameterDecl
   yacc.py:2565:    (90) ParameterList -> . ParameterList COMMA ParameterDecl
   yacc.py:2565:    (91) ParameterDecl -> . IdentifierList Type
   yacc.py:2565:    (92) ParameterDecl -> . IDENTIFIER Type
   yacc.py:2565:    (93) ParameterDecl -> . Type
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 95
   yacc.py:2687:    IDENTIFIER      shift and go to state 100
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    ParameterList                  shift and go to state 96
   yacc.py:2714:    ParameterDecl                  shift and go to state 97
   yacc.py:2714:    IdentifierList                 shift and go to state 98
   yacc.py:2714:    Type                           shift and go to state 99
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 57
   yacc.py:2563:
   yacc.py:2565:    (38) ConstDecl -> CONST LROUND ConstSpecList . RROUND
   yacc.py:2565:    (41) ConstSpecList -> ConstSpecList . ConstSpec SEMICOLON
   yacc.py:2565:    (42) ConstSpec -> . IDENTIFIER
   yacc.py:2565:    (43) ConstSpec -> . IdentifierList
   yacc.py:2565:    (44) ConstSpec -> . IDENTIFIER EQ Expression
   yacc.py:2565:    (45) ConstSpec -> . IdentifierList EQ ExpressionList
   yacc.py:2565:    (46) ConstSpec -> . IDENTIFIER Type EQ Expression
   yacc.py:2565:    (47) ConstSpec -> . IdentifierList Type EQ ExpressionList
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 101
   yacc.py:2687:    IDENTIFIER      shift and go to state 32
   yacc.py:2689:
   yacc.py:2714:    ConstSpec                      shift and go to state 102
   yacc.py:2714:    IdentifierList                 shift and go to state 33
   yacc.py:2561:
   yacc.py:2562:state 58
   yacc.py:2563:
   yacc.py:2565:    (40) ConstSpecList -> empty .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 40 (ConstSpecList -> empty .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 40 (ConstSpecList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 59
   yacc.py:2563:
   yacc.py:2565:    (44) ConstSpec -> IDENTIFIER EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 104
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 60
   yacc.py:2563:
   yacc.py:2565:    (46) ConstSpec -> IDENTIFIER Type . EQ Expression
   yacc.py:2566:
   yacc.py:2687:    EQ              shift and go to state 133
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 61
   yacc.py:2563:
   yacc.py:2565:    (48) IdentifierList -> IDENTIFIER COMMA . IdentifierBotList
   yacc.py:2565:    (49) IdentifierBotList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2565:    (50) IdentifierBotList -> . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 134
   yacc.py:2689:
   yacc.py:2714:    IdentifierBotList              shift and go to state 135
   yacc.py:2561:
   yacc.py:2562:state 62
   yacc.py:2563:
   yacc.py:2565:    (63) Type -> TypeLit .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 63 (Type -> TypeLit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 63 (Type -> TypeLit .)
   yacc.py:2687:    LCURLY          reduce using rule 63 (Type -> TypeLit .)
   yacc.py:2687:    RROUND          reduce using rule 63 (Type -> TypeLit .)
   yacc.py:2687:    COMMA           reduce using rule 63 (Type -> TypeLit .)
   yacc.py:2687:    STRING_LIT      reduce using rule 63 (Type -> TypeLit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 63
   yacc.py:2563:
   yacc.py:2565:    (64) Type -> StandardTypes .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 64 (Type -> StandardTypes .)
   yacc.py:2687:    SEMICOLON       reduce using rule 64 (Type -> StandardTypes .)
   yacc.py:2687:    LCURLY          reduce using rule 64 (Type -> StandardTypes .)
   yacc.py:2687:    RROUND          reduce using rule 64 (Type -> StandardTypes .)
   yacc.py:2687:    COMMA           reduce using rule 64 (Type -> StandardTypes .)
   yacc.py:2687:    STRING_LIT      reduce using rule 64 (Type -> StandardTypes .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 64
   yacc.py:2563:
   yacc.py:2565:    (65) Type -> LROUND . Type RROUND
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 136
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 65
   yacc.py:2563:
   yacc.py:2565:    (67) TypeLit -> ArrayType .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 67 (TypeLit -> ArrayType .)
   yacc.py:2687:    SEMICOLON       reduce using rule 67 (TypeLit -> ArrayType .)
   yacc.py:2687:    LCURLY          reduce using rule 67 (TypeLit -> ArrayType .)
   yacc.py:2687:    RROUND          reduce using rule 67 (TypeLit -> ArrayType .)
   yacc.py:2687:    COMMA           reduce using rule 67 (TypeLit -> ArrayType .)
   yacc.py:2687:    STRING_LIT      reduce using rule 67 (TypeLit -> ArrayType .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 66
   yacc.py:2563:
   yacc.py:2565:    (68) TypeLit -> StructType .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 68 (TypeLit -> StructType .)
   yacc.py:2687:    SEMICOLON       reduce using rule 68 (TypeLit -> StructType .)
   yacc.py:2687:    LCURLY          reduce using rule 68 (TypeLit -> StructType .)
   yacc.py:2687:    RROUND          reduce using rule 68 (TypeLit -> StructType .)
   yacc.py:2687:    COMMA           reduce using rule 68 (TypeLit -> StructType .)
   yacc.py:2687:    STRING_LIT      reduce using rule 68 (TypeLit -> StructType .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 67
   yacc.py:2563:
   yacc.py:2565:    (69) TypeLit -> FunctionType .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 69 (TypeLit -> FunctionType .)
   yacc.py:2687:    SEMICOLON       reduce using rule 69 (TypeLit -> FunctionType .)
   yacc.py:2687:    LCURLY          reduce using rule 69 (TypeLit -> FunctionType .)
   yacc.py:2687:    RROUND          reduce using rule 69 (TypeLit -> FunctionType .)
   yacc.py:2687:    COMMA           reduce using rule 69 (TypeLit -> FunctionType .)
   yacc.py:2687:    STRING_LIT      reduce using rule 69 (TypeLit -> FunctionType .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 68
   yacc.py:2563:
   yacc.py:2565:    (70) TypeLit -> PointerType .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 70 (TypeLit -> PointerType .)
   yacc.py:2687:    SEMICOLON       reduce using rule 70 (TypeLit -> PointerType .)
   yacc.py:2687:    LCURLY          reduce using rule 70 (TypeLit -> PointerType .)
   yacc.py:2687:    RROUND          reduce using rule 70 (TypeLit -> PointerType .)
   yacc.py:2687:    COMMA           reduce using rule 70 (TypeLit -> PointerType .)
   yacc.py:2687:    STRING_LIT      reduce using rule 70 (TypeLit -> PointerType .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 69
   yacc.py:2563:
   yacc.py:2565:    (66) StandardTypes -> PREDEFINED_TYPES .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 66 (StandardTypes -> PREDEFINED_TYPES .)
   yacc.py:2687:    SEMICOLON       reduce using rule 66 (StandardTypes -> PREDEFINED_TYPES .)
   yacc.py:2687:    LCURLY          reduce using rule 66 (StandardTypes -> PREDEFINED_TYPES .)
   yacc.py:2687:    RROUND          reduce using rule 66 (StandardTypes -> PREDEFINED_TYPES .)
   yacc.py:2687:    COMMA           reduce using rule 66 (StandardTypes -> PREDEFINED_TYPES .)
   yacc.py:2687:    STRING_LIT      reduce using rule 66 (StandardTypes -> PREDEFINED_TYPES .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 70
   yacc.py:2563:
   yacc.py:2565:    (72) ArrayType -> LSQUARE . ArrayLength RSQUARE Type
   yacc.py:2565:    (73) ArrayLength -> . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ArrayLength                    shift and go to state 137
   yacc.py:2714:    Expression                     shift and go to state 138
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 71
   yacc.py:2563:
   yacc.py:2565:    (74) StructType -> STRUCT . LCURLY FieldDeclList RCURLY
   yacc.py:2566:
   yacc.py:2687:    LCURLY          shift and go to state 139
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 72
   yacc.py:2563:
   yacc.py:2565:    (82) FunctionType -> FUNC . Signature
   yacc.py:2565:    (83) Signature -> . Parameters
   yacc.py:2565:    (84) Signature -> . Parameters Result
   yacc.py:2565:    (87) Parameters -> . LROUND RROUND
   yacc.py:2565:    (88) Parameters -> . LROUND ParameterList RROUND
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 56
   yacc.py:2689:
   yacc.py:2714:    Signature                      shift and go to state 140
   yacc.py:2714:    Parameters                     shift and go to state 55
   yacc.py:2561:
   yacc.py:2562:state 73
   yacc.py:2563:
   yacc.py:2565:    (71) PointerType -> STAR . Type
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 141
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 74
   yacc.py:2563:
   yacc.py:2565:    (45) ConstSpec -> IdentifierList EQ . ExpressionList
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 142
   yacc.py:2714:    Expression                     shift and go to state 143
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 75
   yacc.py:2563:
   yacc.py:2565:    (47) ConstSpec -> IdentifierList Type . EQ ExpressionList
   yacc.py:2566:
   yacc.py:2687:    EQ              shift and go to state 144
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 76
   yacc.py:2563:
   yacc.py:2565:    (56) TypeSpecTopList -> LROUND TypeSpecList . RROUND
   yacc.py:2565:    (58) TypeSpecList -> TypeSpecList . TypeSpec SEMICOLON
   yacc.py:2565:    (59) TypeSpec -> . AliasDecl
   yacc.py:2565:    (60) TypeSpec -> . TypeDef
   yacc.py:2565:    (61) AliasDecl -> . IDENTIFIER EQ Type
   yacc.py:2565:    (62) TypeDef -> . IDENTIFIER Type
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 145
   yacc.py:2687:    IDENTIFIER      shift and go to state 39
   yacc.py:2689:
   yacc.py:2714:    TypeSpec                       shift and go to state 146
   yacc.py:2714:    AliasDecl                      shift and go to state 37
   yacc.py:2714:    TypeDef                        shift and go to state 38
   yacc.py:2561:
   yacc.py:2562:state 77
   yacc.py:2563:
   yacc.py:2565:    (57) TypeSpecList -> empty .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 57 (TypeSpecList -> empty .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 57 (TypeSpecList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 78
   yacc.py:2563:
   yacc.py:2565:    (61) AliasDecl -> IDENTIFIER EQ . Type
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 147
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 79
   yacc.py:2563:
   yacc.py:2565:    (62) TypeDef -> IDENTIFIER Type .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 62 (TypeDef -> IDENTIFIER Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 80
   yacc.py:2563:
   yacc.py:2565:    (96) VarSpecTopList -> LROUND VarSpecList . RROUND
   yacc.py:2565:    (98) VarSpecList -> VarSpecList . VarSpec SEMICOLON
   yacc.py:2565:    (99) VarSpec -> . IDENTIFIER Type
   yacc.py:2565:    (100) VarSpec -> . IDENTIFIER EQ Expression
   yacc.py:2565:    (101) VarSpec -> . IDENTIFIER Type EQ Expression
   yacc.py:2565:    (102) VarSpec -> . IdentifierList Type
   yacc.py:2565:    (103) VarSpec -> . IdentifierList EQ ExpressionList
   yacc.py:2565:    (104) VarSpec -> . IdentifierList Type EQ ExpressionList
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 148
   yacc.py:2687:    IDENTIFIER      shift and go to state 43
   yacc.py:2689:
   yacc.py:2714:    VarSpec                        shift and go to state 149
   yacc.py:2714:    IdentifierList                 shift and go to state 44
   yacc.py:2561:
   yacc.py:2562:state 81
   yacc.py:2563:
   yacc.py:2565:    (97) VarSpecList -> empty .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 97 (VarSpecList -> empty .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 97 (VarSpecList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 82
   yacc.py:2563:
   yacc.py:2565:    (99) VarSpec -> IDENTIFIER Type .
   yacc.py:2565:    (101) VarSpec -> IDENTIFIER Type . EQ Expression
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 99 (VarSpec -> IDENTIFIER Type .)
   yacc.py:2687:    EQ              shift and go to state 150
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 83
   yacc.py:2563:
   yacc.py:2565:    (100) VarSpec -> IDENTIFIER EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 151
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 84
   yacc.py:2563:
   yacc.py:2565:    (102) VarSpec -> IdentifierList Type .
   yacc.py:2565:    (104) VarSpec -> IdentifierList Type . EQ ExpressionList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 102 (VarSpec -> IdentifierList Type .)
   yacc.py:2687:    EQ              shift and go to state 152
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 85
   yacc.py:2563:
   yacc.py:2565:    (103) VarSpec -> IdentifierList EQ . ExpressionList
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 153
   yacc.py:2714:    Expression                     shift and go to state 143
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 86
   yacc.py:2563:
   yacc.py:2565:    (8) ImportDecl -> IMPORT LROUND ImportSpecList RROUND .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 8 (ImportDecl -> IMPORT LROUND ImportSpecList RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 87
   yacc.py:2563:
   yacc.py:2565:    (10) ImportSpecList -> ImportSpec SEMICOLON . ImportSpecList
   yacc.py:2565:    (10) ImportSpecList -> . ImportSpec SEMICOLON ImportSpecList
   yacc.py:2565:    (11) ImportSpecList -> . empty
   yacc.py:2565:    (12) ImportSpec -> . DOT string_lit
   yacc.py:2565:    (13) ImportSpec -> . IDENTIFIER string_lit
   yacc.py:2565:    (14) ImportSpec -> . empty string_lit
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    DOT             shift and go to state 24
   yacc.py:2687:    IDENTIFIER      shift and go to state 25
   yacc.py:2687:    STRING_LIT      reduce using rule 214 (empty -> .)
   yacc.py:2687:    RROUND          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ImportSpec                     shift and go to state 47
   yacc.py:2714:    ImportSpecList                 shift and go to state 154
   yacc.py:2714:    empty                          shift and go to state 48
   yacc.py:2561:
   yacc.py:2562:state 88
   yacc.py:2563:
   yacc.py:2565:    (106) FunctionDecl -> FUNC FunctionName Signature FunctionBody .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 106 (FunctionDecl -> FUNC FunctionName Signature FunctionBody .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 89
   yacc.py:2563:
   yacc.py:2565:    (108) FunctionBody -> Block .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    DOT             reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    LSQUARE         reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    LROUND          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    OR_OR           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    AMP_AMP         reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    EQ_EQ           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    NOT_EQ          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    LT              reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    LT_EQ           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    GT              reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    GT_EQ           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    PLUS            reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    MINUS           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    OR              reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    CARET           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    STAR            reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    DIVIDE          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    MODULO          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    LS              reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    RS              reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    AMP             reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    AND_OR          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    RSQUARE         reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    COMMA           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    RROUND          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    EQ              reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    OR_EQ           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    CARET_EQ        reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    STAR_EQ         reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    LS_EQ           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    RS_EQ           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    AMP_EQ          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    COLON           reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2687:    LCURLY          reduce using rule 108 (FunctionBody -> Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 90
   yacc.py:2563:
   yacc.py:2565:    (15) Block -> LCURLY . ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2565:    (16) ScopeStart -> . empty
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    RETURN          reduce using rule 214 (empty -> .)
   yacc.py:2687:    LCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    IF              reduce using rule 214 (empty -> .)
   yacc.py:2687:    FOR             reduce using rule 214 (empty -> .)
   yacc.py:2687:    BREAK           reduce using rule 214 (empty -> .)
   yacc.py:2687:    CONTINUE        reduce using rule 214 (empty -> .)
   yacc.py:2687:    GOTO            reduce using rule 214 (empty -> .)
   yacc.py:2687:    PRINTLN         reduce using rule 214 (empty -> .)
   yacc.py:2687:    CONST           reduce using rule 214 (empty -> .)
   yacc.py:2687:    TYPE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    VAR             reduce using rule 214 (empty -> .)
   yacc.py:2687:    SWITCH          reduce using rule 214 (empty -> .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 214 (empty -> .)
   yacc.py:2687:    PLUS            reduce using rule 214 (empty -> .)
   yacc.py:2687:    MINUS           reduce using rule 214 (empty -> .)
   yacc.py:2687:    NOT             reduce using rule 214 (empty -> .)
   yacc.py:2687:    CARET           reduce using rule 214 (empty -> .)
   yacc.py:2687:    STAR            reduce using rule 214 (empty -> .)
   yacc.py:2687:    AMP             reduce using rule 214 (empty -> .)
   yacc.py:2687:    LT_MINUS        reduce using rule 214 (empty -> .)
   yacc.py:2687:    LROUND          reduce using rule 214 (empty -> .)
   yacc.py:2687:    FUNC            reduce using rule 214 (empty -> .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 214 (empty -> .)
   yacc.py:2687:    STRING_LIT      reduce using rule 214 (empty -> .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 214 (empty -> .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 214 (empty -> .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 214 (empty -> .)
   yacc.py:2687:    HEX_LIT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ScopeStart                     shift and go to state 155
   yacc.py:2714:    empty                          shift and go to state 156
   yacc.py:2561:
   yacc.py:2562:state 91
   yacc.py:2563:
   yacc.py:2565:    (85) Result -> Parameters .
   yacc.py:2566:
   yacc.py:2687:    LCURLY          reduce using rule 85 (Result -> Parameters .)
   yacc.py:2687:    SEMICOLON       reduce using rule 85 (Result -> Parameters .)
   yacc.py:2687:    EQ              reduce using rule 85 (Result -> Parameters .)
   yacc.py:2687:    RROUND          reduce using rule 85 (Result -> Parameters .)
   yacc.py:2687:    COMMA           reduce using rule 85 (Result -> Parameters .)
   yacc.py:2687:    STRING_LIT      reduce using rule 85 (Result -> Parameters .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 92
   yacc.py:2563:
   yacc.py:2565:    (84) Signature -> Parameters Result .
   yacc.py:2566:
   yacc.py:2687:    LCURLY          reduce using rule 84 (Signature -> Parameters Result .)
   yacc.py:2687:    SEMICOLON       reduce using rule 84 (Signature -> Parameters Result .)
   yacc.py:2687:    EQ              reduce using rule 84 (Signature -> Parameters Result .)
   yacc.py:2687:    RROUND          reduce using rule 84 (Signature -> Parameters Result .)
   yacc.py:2687:    COMMA           reduce using rule 84 (Signature -> Parameters Result .)
   yacc.py:2687:    STRING_LIT      reduce using rule 84 (Signature -> Parameters Result .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 93
   yacc.py:2563:
   yacc.py:2565:    (86) Result -> Type .
   yacc.py:2566:
   yacc.py:2687:    LCURLY          reduce using rule 86 (Result -> Type .)
   yacc.py:2687:    SEMICOLON       reduce using rule 86 (Result -> Type .)
   yacc.py:2687:    EQ              reduce using rule 86 (Result -> Type .)
   yacc.py:2687:    RROUND          reduce using rule 86 (Result -> Type .)
   yacc.py:2687:    COMMA           reduce using rule 86 (Result -> Type .)
   yacc.py:2687:    STRING_LIT      reduce using rule 86 (Result -> Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 94
   yacc.py:2563:
   yacc.py:2565:    (87) Parameters -> LROUND . RROUND
   yacc.py:2565:    (88) Parameters -> LROUND . ParameterList RROUND
   yacc.py:2565:    (65) Type -> LROUND . Type RROUND
   yacc.py:2565:    (89) ParameterList -> . ParameterDecl
   yacc.py:2565:    (90) ParameterList -> . ParameterList COMMA ParameterDecl
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (91) ParameterDecl -> . IdentifierList Type
   yacc.py:2565:    (92) ParameterDecl -> . IDENTIFIER Type
   yacc.py:2565:    (93) ParameterDecl -> . Type
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 95
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    IDENTIFIER      shift and go to state 100
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    ParameterList                  shift and go to state 96
   yacc.py:2714:    Type                           shift and go to state 157
   yacc.py:2714:    ParameterDecl                  shift and go to state 97
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    IdentifierList                 shift and go to state 98
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 95
   yacc.py:2563:
   yacc.py:2565:    (87) Parameters -> LROUND RROUND .
   yacc.py:2566:
   yacc.py:2687:    LROUND          reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    PREDEFINED_TYPES reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    STRUCT          reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    FUNC            reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    STAR            reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    EQ              reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2687:    STRING_LIT      reduce using rule 87 (Parameters -> LROUND RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 96
   yacc.py:2563:
   yacc.py:2565:    (88) Parameters -> LROUND ParameterList . RROUND
   yacc.py:2565:    (90) ParameterList -> ParameterList . COMMA ParameterDecl
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 158
   yacc.py:2687:    COMMA           shift and go to state 159
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 97
   yacc.py:2563:
   yacc.py:2565:    (89) ParameterList -> ParameterDecl .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 89 (ParameterList -> ParameterDecl .)
   yacc.py:2687:    COMMA           reduce using rule 89 (ParameterList -> ParameterDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 98
   yacc.py:2563:
   yacc.py:2565:    (91) ParameterDecl -> IdentifierList . Type
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 160
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 99
   yacc.py:2563:
   yacc.py:2565:    (93) ParameterDecl -> Type .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 93 (ParameterDecl -> Type .)
   yacc.py:2687:    COMMA           reduce using rule 93 (ParameterDecl -> Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 100
   yacc.py:2563:
   yacc.py:2565:    (92) ParameterDecl -> IDENTIFIER . Type
   yacc.py:2565:    (48) IdentifierList -> IDENTIFIER . COMMA IdentifierBotList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    COMMA           shift and go to state 61
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 161
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 101
   yacc.py:2563:
   yacc.py:2565:    (38) ConstDecl -> CONST LROUND ConstSpecList RROUND .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 38 (ConstDecl -> CONST LROUND ConstSpecList RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 102
   yacc.py:2563:
   yacc.py:2565:    (41) ConstSpecList -> ConstSpecList ConstSpec . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 162
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 103
   yacc.py:2563:
   yacc.py:2565:    (184) PrimaryExpr -> IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    LSQUARE         reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    LROUND          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    OR_OR           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    AMP_AMP         reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    EQ_EQ           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    NOT_EQ          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    LT              reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    LT_EQ           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    GT              reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    GT_EQ           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    PLUS            reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    MINUS           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    OR              reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    CARET           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    STAR            reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    DIVIDE          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    MODULO          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    LS              reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    RS              reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    AMP             reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    AND_OR          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    SEMICOLON       reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    RSQUARE         reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    COMMA           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    RROUND          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    EQ              reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    OR_EQ           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    CARET_EQ        reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    STAR_EQ         reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    LS_EQ           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    RS_EQ           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    AMP_EQ          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    COLON           reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2687:    LCURLY          reduce using rule 184 (PrimaryExpr -> IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 104
   yacc.py:2563:
   yacc.py:2565:    (44) ConstSpec -> IDENTIFIER EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 44 (ConstSpec -> IDENTIFIER EQ Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 105
   yacc.py:2563:
   yacc.py:2565:    (154) Expression -> UnaryExpr .
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    AMP_AMP         reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    EQ_EQ           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    NOT_EQ          reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    LT              reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    LT_EQ           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    GT              reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    GT_EQ           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    PLUS            reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    MINUS           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    OR              reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    CARET           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    STAR            reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    DIVIDE          reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    MODULO          reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    LS              reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    RS              reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    AMP             reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    AND_OR          reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    SEMICOLON       reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    RSQUARE         reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    COMMA           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    RROUND          reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    EQ              reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    OR_EQ           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    CARET_EQ        reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    STAR_EQ         reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    LS_EQ           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    RS_EQ           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    AMP_EQ          reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    COLON           reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2687:    LCURLY          reduce using rule 154 (Expression -> UnaryExpr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 106
   yacc.py:2563:
   yacc.py:2565:    (176) unary_op -> PLUS .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    PLUS            reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    MINUS           reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    NOT             reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    CARET           reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    STAR            reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    AMP             reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    LT_MINUS        reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    LROUND          reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    FUNC            reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    STRING_LIT      reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2687:    HEX_LIT         reduce using rule 176 (unary_op -> PLUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 107
   yacc.py:2563:
   yacc.py:2565:    (177) unary_op -> MINUS .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    PLUS            reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    MINUS           reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    NOT             reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    CARET           reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    STAR            reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    AMP             reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    LT_MINUS        reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    LROUND          reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    FUNC            reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    STRING_LIT      reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2687:    HEX_LIT         reduce using rule 177 (unary_op -> MINUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 108
   yacc.py:2563:
   yacc.py:2565:    (179) unary_op -> CARET .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    PLUS            reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    MINUS           reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    NOT             reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    CARET           reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    STAR            reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    AMP             reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    LT_MINUS        reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    LROUND          reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    FUNC            reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    STRING_LIT      reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2687:    HEX_LIT         reduce using rule 179 (unary_op -> CARET .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 109
   yacc.py:2563:
   yacc.py:2565:    (180) unary_op -> STAR .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    PLUS            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    MINUS           reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    NOT             reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    CARET           reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    STAR            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    AMP             reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    LT_MINUS        reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    LROUND          reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    FUNC            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    STRING_LIT      reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    HEX_LIT         reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 110
   yacc.py:2563:
   yacc.py:2565:    (181) unary_op -> AMP .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    PLUS            reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    MINUS           reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    NOT             reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    CARET           reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    STAR            reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    AMP             reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    LT_MINUS        reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    LROUND          reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    FUNC            reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    STRING_LIT      reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2687:    HEX_LIT         reduce using rule 181 (unary_op -> AMP .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 111
   yacc.py:2563:
   yacc.py:2565:    (174) UnaryExpr -> PrimaryExpr .
   yacc.py:2565:    (185) PrimaryExpr -> PrimaryExpr . Selector
   yacc.py:2565:    (186) PrimaryExpr -> PrimaryExpr . Index
   yacc.py:2565:    (187) PrimaryExpr -> PrimaryExpr . Arguments
   yacc.py:2565:    (204) Selector -> . DOT IDENTIFIER
   yacc.py:2565:    (205) Index -> . LSQUARE Expression RSQUARE
   yacc.py:2565:    (206) Arguments -> . LROUND RROUND
   yacc.py:2565:    (207) Arguments -> . LROUND ExpressionList RROUND
   yacc.py:2565:    (208) Arguments -> . LROUND Expression RROUND
   yacc.py:2565:    (209) Arguments -> . LROUND Type RROUND
   yacc.py:2565:    (210) Arguments -> . LROUND Type COMMA ExpressionList RROUND
   yacc.py:2565:    (211) Arguments -> . LROUND Type COMMA Expression RROUND
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    AMP_AMP         reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    EQ_EQ           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    NOT_EQ          reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    LT              reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    LT_EQ           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    GT              reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    GT_EQ           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    PLUS            reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    MINUS           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    OR              reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    CARET           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    STAR            reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    DIVIDE          reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    MODULO          reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    LS              reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    RS              reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    AMP             reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    AND_OR          reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    SEMICOLON       reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    RSQUARE         reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    COMMA           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    RROUND          reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    EQ              reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    OR_EQ           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    CARET_EQ        reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    STAR_EQ         reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    LS_EQ           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    RS_EQ           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    AMP_EQ          reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    COLON           reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    LCURLY          reduce using rule 174 (UnaryExpr -> PrimaryExpr .)
   yacc.py:2687:    DOT             shift and go to state 185
   yacc.py:2687:    LSQUARE         shift and go to state 186
   yacc.py:2687:    LROUND          shift and go to state 187
   yacc.py:2689:
   yacc.py:2714:    Selector                       shift and go to state 182
   yacc.py:2714:    Index                          shift and go to state 183
   yacc.py:2714:    Arguments                      shift and go to state 184
   yacc.py:2561:
   yacc.py:2562:state 112
   yacc.py:2563:
   yacc.py:2565:    (175) UnaryExpr -> unary_op . UnaryExpr
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    UnaryExpr                      shift and go to state 188
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 113
   yacc.py:2563:
   yacc.py:2565:    (183) PrimaryExpr -> Operand .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    LSQUARE         reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    LROUND          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    OR_OR           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    AMP_AMP         reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    EQ_EQ           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    NOT_EQ          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    LT              reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    LT_EQ           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    GT              reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    GT_EQ           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    PLUS            reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    MINUS           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    OR              reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    CARET           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    STAR            reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    DIVIDE          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    MODULO          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    LS              reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    RS              reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    AMP             reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    AND_OR          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    SEMICOLON       reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    RSQUARE         reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    COMMA           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    RROUND          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    EQ              reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    OR_EQ           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    CARET_EQ        reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    STAR_EQ         reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    LS_EQ           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    RS_EQ           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    AMP_EQ          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    COLON           reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2687:    LCURLY          reduce using rule 183 (PrimaryExpr -> Operand .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 114
   yacc.py:2563:
   yacc.py:2565:    (178) unary_op -> NOT .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    PLUS            reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    MINUS           reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    NOT             reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    CARET           reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    STAR            reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    AMP             reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    LT_MINUS        reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    LROUND          reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    FUNC            reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    STRING_LIT      reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2687:    HEX_LIT         reduce using rule 178 (unary_op -> NOT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 115
   yacc.py:2563:
   yacc.py:2565:    (182) unary_op -> LT_MINUS .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    PLUS            reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    MINUS           reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    NOT             reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    CARET           reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    STAR            reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    AMP             reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    LT_MINUS        reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    LROUND          reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    FUNC            reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    STRING_LIT      reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2687:    HEX_LIT         reduce using rule 182 (unary_op -> LT_MINUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 116
   yacc.py:2563:
   yacc.py:2565:    (188) Operand -> Literal .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    LSQUARE         reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    LROUND          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    OR_OR           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    AMP_AMP         reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    EQ_EQ           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    NOT_EQ          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    LT              reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    LT_EQ           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    GT              reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    GT_EQ           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    PLUS            reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    MINUS           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    OR              reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    CARET           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    STAR            reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    DIVIDE          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    MODULO          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    LS              reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    RS              reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    AMP             reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    AND_OR          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    SEMICOLON       reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    RSQUARE         reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    COMMA           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    RROUND          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    EQ              reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    OR_EQ           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    CARET_EQ        reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    STAR_EQ         reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    LS_EQ           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    RS_EQ           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    AMP_EQ          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    COLON           reduce using rule 188 (Operand -> Literal .)
   yacc.py:2687:    LCURLY          reduce using rule 188 (Operand -> Literal .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 117
   yacc.py:2563:
   yacc.py:2565:    (189) Operand -> LROUND . Expression RROUND
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 189
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 118
   yacc.py:2563:
   yacc.py:2565:    (190) Literal -> BasicLit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    LSQUARE         reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    LROUND          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    OR_OR           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    LT              reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    LT_EQ           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    GT              reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    GT_EQ           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    PLUS            reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    MINUS           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    OR              reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    CARET           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    STAR            reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    DIVIDE          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    MODULO          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    LS              reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    RS              reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    AMP             reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    AND_OR          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    RSQUARE         reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    COMMA           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    RROUND          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    EQ              reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    OR_EQ           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    LS_EQ           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    RS_EQ           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    COLON           reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2687:    LCURLY          reduce using rule 190 (Literal -> BasicLit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 119
   yacc.py:2563:
   yacc.py:2565:    (191) Literal -> FunctionLit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    LSQUARE         reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    LROUND          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    OR_OR           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    LT              reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    LT_EQ           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    GT              reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    GT_EQ           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    PLUS            reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    MINUS           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    OR              reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    CARET           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    STAR            reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    DIVIDE          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    MODULO          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    LS              reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    RS              reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    AMP             reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    AND_OR          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    RSQUARE         reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    COMMA           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    RROUND          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    EQ              reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    OR_EQ           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    LS_EQ           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    RS_EQ           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    COLON           reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2687:    LCURLY          reduce using rule 191 (Literal -> FunctionLit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 120
   yacc.py:2563:
   yacc.py:2565:    (192) BasicLit -> int_lit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    LSQUARE         reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    LROUND          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    OR_OR           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    LT              reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    LT_EQ           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    GT              reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    GT_EQ           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    PLUS            reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    MINUS           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    OR              reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    CARET           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    STAR            reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    DIVIDE          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    MODULO          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    LS              reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    RS              reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    AMP             reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    AND_OR          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    RSQUARE         reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    COMMA           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    RROUND          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    EQ              reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    OR_EQ           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    LS_EQ           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    RS_EQ           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    COLON           reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2687:    LCURLY          reduce using rule 192 (BasicLit -> int_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 121
   yacc.py:2563:
   yacc.py:2565:    (193) BasicLit -> float_lit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    LSQUARE         reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    LROUND          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    OR_OR           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    LT              reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    LT_EQ           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    GT              reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    GT_EQ           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    PLUS            reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    MINUS           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    OR              reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    CARET           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    STAR            reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    DIVIDE          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    MODULO          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    LS              reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    RS              reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    AMP             reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    AND_OR          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    RSQUARE         reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    COMMA           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    RROUND          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    EQ              reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    OR_EQ           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    LS_EQ           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    RS_EQ           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    COLON           reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2687:    LCURLY          reduce using rule 193 (BasicLit -> float_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 122
   yacc.py:2563:
   yacc.py:2565:    (194) BasicLit -> string_lit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    LSQUARE         reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    LROUND          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    OR_OR           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    LT              reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    LT_EQ           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    GT              reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    GT_EQ           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    PLUS            reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    MINUS           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    OR              reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    CARET           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    STAR            reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    DIVIDE          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    MODULO          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    LS              reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    RS              reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    AMP             reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    AND_OR          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    RSQUARE         reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    COMMA           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    RROUND          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    EQ              reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    OR_EQ           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    LS_EQ           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    RS_EQ           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    COLON           reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2687:    LCURLY          reduce using rule 194 (BasicLit -> string_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 123
   yacc.py:2563:
   yacc.py:2565:    (195) BasicLit -> rune_lit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    LSQUARE         reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    LROUND          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    OR_OR           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    LT              reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    LT_EQ           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    GT              reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    GT_EQ           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    PLUS            reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    MINUS           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    OR              reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    CARET           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    STAR            reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    DIVIDE          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    MODULO          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    LS              reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    RS              reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    AMP             reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    AND_OR          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    RSQUARE         reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    COMMA           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    RROUND          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    EQ              reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    OR_EQ           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    LS_EQ           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    RS_EQ           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    COLON           reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2687:    LCURLY          reduce using rule 195 (BasicLit -> rune_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 124
   yacc.py:2563:
   yacc.py:2565:    (203) FunctionLit -> FUNC . Signature FunctionBody
   yacc.py:2565:    (83) Signature -> . Parameters
   yacc.py:2565:    (84) Signature -> . Parameters Result
   yacc.py:2565:    (87) Parameters -> . LROUND RROUND
   yacc.py:2565:    (88) Parameters -> . LROUND ParameterList RROUND
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 56
   yacc.py:2689:
   yacc.py:2714:    Signature                      shift and go to state 190
   yacc.py:2714:    Parameters                     shift and go to state 55
   yacc.py:2561:
   yacc.py:2562:state 125
   yacc.py:2563:
   yacc.py:2565:    (196) int_lit -> decimal_lit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    LSQUARE         reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    LROUND          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    OR_OR           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    LT              reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    LT_EQ           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    GT              reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    GT_EQ           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    PLUS            reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    MINUS           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    OR              reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    CARET           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    STAR            reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    DIVIDE          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    MODULO          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    LS              reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    RS              reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    AMP             reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    AND_OR          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    RSQUARE         reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    COMMA           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    RROUND          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    EQ              reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    OR_EQ           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    LS_EQ           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    RS_EQ           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    COLON           reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2687:    LCURLY          reduce using rule 196 (int_lit -> decimal_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 126
   yacc.py:2563:
   yacc.py:2565:    (197) int_lit -> octal_lit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    LSQUARE         reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    LROUND          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    OR_OR           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    LT              reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    LT_EQ           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    GT              reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    GT_EQ           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    PLUS            reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    MINUS           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    OR              reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    CARET           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    STAR            reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    DIVIDE          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    MODULO          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    LS              reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    RS              reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    AMP             reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    AND_OR          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    RSQUARE         reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    COMMA           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    RROUND          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    EQ              reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    OR_EQ           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    LS_EQ           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    RS_EQ           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    COLON           reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2687:    LCURLY          reduce using rule 197 (int_lit -> octal_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 127
   yacc.py:2563:
   yacc.py:2565:    (198) int_lit -> hex_lit .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    LSQUARE         reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    LROUND          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    OR_OR           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    AMP_AMP         reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    EQ_EQ           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    NOT_EQ          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    LT              reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    LT_EQ           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    GT              reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    GT_EQ           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    PLUS            reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    MINUS           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    OR              reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    CARET           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    STAR            reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    DIVIDE          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    MODULO          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    LS              reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    RS              reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    AMP             reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    AND_OR          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    SEMICOLON       reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    RSQUARE         reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    COMMA           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    RROUND          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    EQ              reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    OR_EQ           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    CARET_EQ        reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    STAR_EQ         reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    LS_EQ           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    RS_EQ           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    AMP_EQ          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    COLON           reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2687:    LCURLY          reduce using rule 198 (int_lit -> hex_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 128
   yacc.py:2563:
   yacc.py:2565:    (202) float_lit -> FLOAT_LIT .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    LSQUARE         reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    LROUND          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    OR_OR           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    AMP_AMP         reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    EQ_EQ           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    NOT_EQ          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    LT              reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    LT_EQ           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    GT              reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    GT_EQ           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    PLUS            reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    MINUS           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    OR              reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    CARET           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    STAR            reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    DIVIDE          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    MODULO          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    LS              reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    RS              reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    AMP             reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    AND_OR          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    SEMICOLON       reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    RSQUARE         reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    COMMA           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    RROUND          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    EQ              reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    OR_EQ           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    CARET_EQ        reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    STAR_EQ         reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    LS_EQ           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    RS_EQ           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    AMP_EQ          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    COLON           reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2687:    LCURLY          reduce using rule 202 (float_lit -> FLOAT_LIT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 129
   yacc.py:2563:
   yacc.py:2565:    (213) rune_lit -> RUNE_LIT .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    LSQUARE         reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    LROUND          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    OR_OR           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    AMP_AMP         reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    EQ_EQ           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    NOT_EQ          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    LT              reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    LT_EQ           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    GT              reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    GT_EQ           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    PLUS            reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    MINUS           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    OR              reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    CARET           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    STAR            reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    DIVIDE          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    MODULO          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    LS              reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    RS              reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    AMP             reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    AND_OR          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    SEMICOLON       reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    RSQUARE         reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    COMMA           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    RROUND          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    EQ              reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    OR_EQ           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    CARET_EQ        reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    STAR_EQ         reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    LS_EQ           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    RS_EQ           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    AMP_EQ          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    COLON           reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2687:    LCURLY          reduce using rule 213 (rune_lit -> RUNE_LIT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 130
   yacc.py:2563:
   yacc.py:2565:    (199) decimal_lit -> DECIMAL_LIT .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    LSQUARE         reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    LROUND          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    OR_OR           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    AMP_AMP         reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    EQ_EQ           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    NOT_EQ          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    LT              reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    LT_EQ           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    GT              reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    GT_EQ           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    PLUS            reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    MINUS           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    OR              reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    CARET           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    STAR            reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    DIVIDE          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    MODULO          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    LS              reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    RS              reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    AMP             reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    AND_OR          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    SEMICOLON       reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    RSQUARE         reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    COMMA           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    RROUND          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    EQ              reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    OR_EQ           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    CARET_EQ        reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    STAR_EQ         reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    LS_EQ           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    RS_EQ           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    AMP_EQ          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    COLON           reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2687:    LCURLY          reduce using rule 199 (decimal_lit -> DECIMAL_LIT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 131
   yacc.py:2563:
   yacc.py:2565:    (200) octal_lit -> OCTAL_LIT .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    LSQUARE         reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    LROUND          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    OR_OR           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    AMP_AMP         reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    EQ_EQ           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    NOT_EQ          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    LT              reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    LT_EQ           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    GT              reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    GT_EQ           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    PLUS            reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    MINUS           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    OR              reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    CARET           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    STAR            reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    DIVIDE          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    MODULO          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    LS              reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    RS              reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    AMP             reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    AND_OR          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    SEMICOLON       reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    RSQUARE         reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    COMMA           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    RROUND          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    EQ              reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    OR_EQ           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    CARET_EQ        reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    STAR_EQ         reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    LS_EQ           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    RS_EQ           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    AMP_EQ          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    COLON           reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2687:    LCURLY          reduce using rule 200 (octal_lit -> OCTAL_LIT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 132
   yacc.py:2563:
   yacc.py:2565:    (201) hex_lit -> HEX_LIT .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    LSQUARE         reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    LROUND          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    OR_OR           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    AMP_AMP         reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    EQ_EQ           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    NOT_EQ          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    LT              reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    LT_EQ           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    GT              reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    GT_EQ           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    PLUS            reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    MINUS           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    OR              reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    CARET           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    STAR            reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    DIVIDE          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    MODULO          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    LS              reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    RS              reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    AMP             reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    AND_OR          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    SEMICOLON       reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    RSQUARE         reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    COMMA           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    RROUND          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    EQ              reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    OR_EQ           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    CARET_EQ        reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    STAR_EQ         reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    LS_EQ           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    RS_EQ           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    AMP_EQ          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    COLON           reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2687:    LCURLY          reduce using rule 201 (hex_lit -> HEX_LIT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 133
   yacc.py:2563:
   yacc.py:2565:    (46) ConstSpec -> IDENTIFIER Type EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 191
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 134
   yacc.py:2563:
   yacc.py:2565:    (49) IdentifierBotList -> IDENTIFIER . COMMA IdentifierBotList
   yacc.py:2565:    (50) IdentifierBotList -> IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    COMMA           shift and go to state 192
   yacc.py:2687:    EQ              reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2687:    LROUND          reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2687:    PREDEFINED_TYPES reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2687:    LSQUARE         reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2687:    STRUCT          reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2687:    FUNC            reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2687:    STAR            reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2687:    SEMICOLON       reduce using rule 50 (IdentifierBotList -> IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 135
   yacc.py:2563:
   yacc.py:2565:    (48) IdentifierList -> IDENTIFIER COMMA IdentifierBotList .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    LROUND          reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    PREDEFINED_TYPES reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    LSQUARE         reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    STRUCT          reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    FUNC            reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    STAR            reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    SEMICOLON       reduce using rule 48 (IdentifierList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 136
   yacc.py:2563:
   yacc.py:2565:    (65) Type -> LROUND Type . RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 193
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 137
   yacc.py:2563:
   yacc.py:2565:    (72) ArrayType -> LSQUARE ArrayLength . RSQUARE Type
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         shift and go to state 194
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 138
   yacc.py:2563:
   yacc.py:2565:    (73) ArrayLength -> Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         reduce using rule 73 (ArrayLength -> Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 139
   yacc.py:2563:
   yacc.py:2565:    (74) StructType -> STRUCT LCURLY . FieldDeclList RCURLY
   yacc.py:2565:    (75) FieldDeclList -> . empty
   yacc.py:2565:    (76) FieldDeclList -> . FieldDeclList FieldDecl SEMICOLON
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    FieldDeclList                  shift and go to state 195
   yacc.py:2714:    empty                          shift and go to state 196
   yacc.py:2561:
   yacc.py:2562:state 140
   yacc.py:2563:
   yacc.py:2565:    (82) FunctionType -> FUNC Signature .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2687:    SEMICOLON       reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2687:    LCURLY          reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2687:    RROUND          reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2687:    COMMA           reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2687:    STRING_LIT      reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 141
   yacc.py:2563:
   yacc.py:2565:    (71) PointerType -> STAR Type .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 71 (PointerType -> STAR Type .)
   yacc.py:2687:    SEMICOLON       reduce using rule 71 (PointerType -> STAR Type .)
   yacc.py:2687:    LCURLY          reduce using rule 71 (PointerType -> STAR Type .)
   yacc.py:2687:    RROUND          reduce using rule 71 (PointerType -> STAR Type .)
   yacc.py:2687:    COMMA           reduce using rule 71 (PointerType -> STAR Type .)
   yacc.py:2687:    STRING_LIT      reduce using rule 71 (PointerType -> STAR Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 142
   yacc.py:2563:
   yacc.py:2565:    (45) ConstSpec -> IdentifierList EQ ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 45 (ConstSpec -> IdentifierList EQ ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 143
   yacc.py:2563:
   yacc.py:2565:    (51) ExpressionList -> Expression . COMMA ExpressionBotList
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    COMMA           shift and go to state 197
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 144
   yacc.py:2563:
   yacc.py:2565:    (47) ConstSpec -> IdentifierList Type EQ . ExpressionList
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 198
   yacc.py:2714:    Expression                     shift and go to state 143
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 145
   yacc.py:2563:
   yacc.py:2565:    (56) TypeSpecTopList -> LROUND TypeSpecList RROUND .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 56 (TypeSpecTopList -> LROUND TypeSpecList RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 146
   yacc.py:2563:
   yacc.py:2565:    (58) TypeSpecList -> TypeSpecList TypeSpec . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 199
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 147
   yacc.py:2563:
   yacc.py:2565:    (61) AliasDecl -> IDENTIFIER EQ Type .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 61 (AliasDecl -> IDENTIFIER EQ Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 148
   yacc.py:2563:
   yacc.py:2565:    (96) VarSpecTopList -> LROUND VarSpecList RROUND .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 96 (VarSpecTopList -> LROUND VarSpecList RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 149
   yacc.py:2563:
   yacc.py:2565:    (98) VarSpecList -> VarSpecList VarSpec . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 200
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 150
   yacc.py:2563:
   yacc.py:2565:    (101) VarSpec -> IDENTIFIER Type EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 201
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 151
   yacc.py:2563:
   yacc.py:2565:    (100) VarSpec -> IDENTIFIER EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 100 (VarSpec -> IDENTIFIER EQ Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 152
   yacc.py:2563:
   yacc.py:2565:    (104) VarSpec -> IdentifierList Type EQ . ExpressionList
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 202
   yacc.py:2714:    Expression                     shift and go to state 143
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 153
   yacc.py:2563:
   yacc.py:2565:    (103) VarSpec -> IdentifierList EQ ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 103 (VarSpec -> IdentifierList EQ ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 154
   yacc.py:2563:
   yacc.py:2565:    (10) ImportSpecList -> ImportSpec SEMICOLON ImportSpecList .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 10 (ImportSpecList -> ImportSpec SEMICOLON ImportSpecList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 155
   yacc.py:2563:
   yacc.py:2565:    (15) Block -> LCURLY ScopeStart . StatementList ScopeEnd RCURLY
   yacc.py:2565:    (18) StatementList -> . Statement SEMICOLON StatementList
   yacc.py:2565:    (19) StatementList -> . empty
   yacc.py:2565:    (20) Statement -> . Declaration
   yacc.py:2565:    (21) Statement -> . SimpleStmt
   yacc.py:2565:    (22) Statement -> . ReturnStmt
   yacc.py:2565:    (23) Statement -> . Block
   yacc.py:2565:    (24) Statement -> . IfStmt
   yacc.py:2565:    (25) Statement -> . SwitchStmt
   yacc.py:2565:    (26) Statement -> . ForStmt
   yacc.py:2565:    (27) Statement -> . BreakStmt
   yacc.py:2565:    (28) Statement -> . ContinueStmt
   yacc.py:2565:    (29) Statement -> . GotoStmt
   yacc.py:2565:    (30) Statement -> . PrintIntStmt
   yacc.py:2565:    (31) Statement -> . PrintStrStmt
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (35) Declaration -> . ConstDecl
   yacc.py:2565:    (36) Declaration -> . TypeDecl
   yacc.py:2565:    (37) Declaration -> . VarDecl
   yacc.py:2565:    (109) SimpleStmt -> . Expression
   yacc.py:2565:    (110) SimpleStmt -> . Assignment
   yacc.py:2565:    (111) SimpleStmt -> . ShortVarDecl
   yacc.py:2565:    (112) SimpleStmt -> . IncDecStmt
   yacc.py:2565:    (148) ReturnStmt -> . RETURN
   yacc.py:2565:    (149) ReturnStmt -> . RETURN Expression
   yacc.py:2565:    (150) ReturnStmt -> . RETURN ExpressionList
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2565:    (131) IfStmt -> . IF Expression Block
   yacc.py:2565:    (132) IfStmt -> . IF Expression Block ELSE elseTail
   yacc.py:2565:    (135) SwitchStmt -> . ExprSwitchStmt
   yacc.py:2565:    (146) ForStmt -> . FOR Expression Block
   yacc.py:2565:    (147) ForStmt -> . FOR Block
   yacc.py:2565:    (151) BreakStmt -> . BREAK IDENTIFIER
   yacc.py:2565:    (152) ContinueStmt -> . CONTINUE IDENTIFIER
   yacc.py:2565:    (153) GotoStmt -> . GOTO IDENTIFIER
   yacc.py:2565:    (32) PrintIntStmt -> . PRINTLN LROUND IDENTIFIER RROUND
   yacc.py:2565:    (33) PrintIntStmt -> . PRINTLN LROUND int_lit RROUND
   yacc.py:2565:    (34) PrintStrStmt -> . PRINTLN LROUND string_lit RROUND
   yacc.py:2565:    (38) ConstDecl -> . CONST LROUND ConstSpecList RROUND
   yacc.py:2565:    (39) ConstDecl -> . CONST ConstSpec
   yacc.py:2565:    (54) TypeDecl -> . TYPE TypeSpecTopList
   yacc.py:2565:    (94) VarDecl -> . VAR VarSpecTopList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (117) Assignment -> . ExpressionList assign_op ExpressionList
   yacc.py:2565:    (118) Assignment -> . Expression assign_op Expression
   yacc.py:2565:    (115) ShortVarDecl -> . ExpressionList ASSIGN_OP ExpressionList
   yacc.py:2565:    (116) ShortVarDecl -> . Expression ASSIGN_OP Expression
   yacc.py:2565:    (113) IncDecStmt -> . Expression PLUS_PLUS
   yacc.py:2565:    (114) IncDecStmt -> . Expression MINUS_MINUS
   yacc.py:2565:    (136) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (137) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (138) ExprSwitchStmt -> . SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (139) ExprSwitchStmt -> . SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    RETURN          shift and go to state 222
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2687:    IF              shift and go to state 224
   yacc.py:2687:    FOR             shift and go to state 226
   yacc.py:2687:    BREAK           shift and go to state 227
   yacc.py:2687:    CONTINUE        shift and go to state 228
   yacc.py:2687:    GOTO            shift and go to state 229
   yacc.py:2687:    PRINTLN         shift and go to state 230
   yacc.py:2687:    CONST           shift and go to state 18
   yacc.py:2687:    TYPE            shift and go to state 19
   yacc.py:2687:    VAR             shift and go to state 20
   yacc.py:2687:    SWITCH          shift and go to state 231
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    StatementList                  shift and go to state 203
   yacc.py:2714:    Statement                      shift and go to state 204
   yacc.py:2714:    empty                          shift and go to state 205
   yacc.py:2714:    Declaration                    shift and go to state 206
   yacc.py:2714:    SimpleStmt                     shift and go to state 207
   yacc.py:2714:    ReturnStmt                     shift and go to state 208
   yacc.py:2714:    Block                          shift and go to state 209
   yacc.py:2714:    IfStmt                         shift and go to state 210
   yacc.py:2714:    SwitchStmt                     shift and go to state 211
   yacc.py:2714:    ForStmt                        shift and go to state 212
   yacc.py:2714:    BreakStmt                      shift and go to state 213
   yacc.py:2714:    ContinueStmt                   shift and go to state 214
   yacc.py:2714:    GotoStmt                       shift and go to state 215
   yacc.py:2714:    PrintIntStmt                   shift and go to state 216
   yacc.py:2714:    PrintStrStmt                   shift and go to state 217
   yacc.py:2714:    ConstDecl                      shift and go to state 14
   yacc.py:2714:    TypeDecl                       shift and go to state 15
   yacc.py:2714:    VarDecl                        shift and go to state 16
   yacc.py:2714:    Expression                     shift and go to state 218
   yacc.py:2714:    Assignment                     shift and go to state 219
   yacc.py:2714:    ShortVarDecl                   shift and go to state 220
   yacc.py:2714:    IncDecStmt                     shift and go to state 221
   yacc.py:2714:    ExpressionList                 shift and go to state 223
   yacc.py:2714:    ExprSwitchStmt                 shift and go to state 225
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 156
   yacc.py:2563:
   yacc.py:2565:    (16) ScopeStart -> empty .
   yacc.py:2566:
   yacc.py:2687:    RETURN          reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    LCURLY          reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    IF              reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    FOR             reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    BREAK           reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    CONTINUE        reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    GOTO            reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    PRINTLN         reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    CONST           reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    TYPE            reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    VAR             reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    SWITCH          reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    PLUS            reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    MINUS           reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    NOT             reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    CARET           reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    STAR            reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    AMP             reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    LT_MINUS        reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    LROUND          reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    FUNC            reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    STRING_LIT      reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    HEX_LIT         reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    RCURLY          reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    CASE            reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2687:    DEFAULT         reduce using rule 16 (ScopeStart -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 157
   yacc.py:2563:
   yacc.py:2565:    (65) Type -> LROUND Type . RROUND
   yacc.py:2565:    (93) ParameterDecl -> Type .
   yacc.py:2566:
   yacc.py:2609:  ! shift/reduce conflict for RROUND resolved as shift
   yacc.py:2687:    RROUND          shift and go to state 193
   yacc.py:2687:    COMMA           reduce using rule 93 (ParameterDecl -> Type .)
   yacc.py:2689:
   yacc.py:2696:  ! RROUND          [ reduce using rule 93 (ParameterDecl -> Type .) ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 158
   yacc.py:2563:
   yacc.py:2565:    (88) Parameters -> LROUND ParameterList RROUND .
   yacc.py:2566:
   yacc.py:2687:    LROUND          reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    PREDEFINED_TYPES reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    STRUCT          reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    FUNC            reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    STAR            reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    EQ              reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2687:    STRING_LIT      reduce using rule 88 (Parameters -> LROUND ParameterList RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 159
   yacc.py:2563:
   yacc.py:2565:    (90) ParameterList -> ParameterList COMMA . ParameterDecl
   yacc.py:2565:    (91) ParameterDecl -> . IdentifierList Type
   yacc.py:2565:    (92) ParameterDecl -> . IDENTIFIER Type
   yacc.py:2565:    (93) ParameterDecl -> . Type
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 100
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    ParameterDecl                  shift and go to state 232
   yacc.py:2714:    IdentifierList                 shift and go to state 98
   yacc.py:2714:    Type                           shift and go to state 99
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 160
   yacc.py:2563:
   yacc.py:2565:    (91) ParameterDecl -> IdentifierList Type .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 91 (ParameterDecl -> IdentifierList Type .)
   yacc.py:2687:    COMMA           reduce using rule 91 (ParameterDecl -> IdentifierList Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 161
   yacc.py:2563:
   yacc.py:2565:    (92) ParameterDecl -> IDENTIFIER Type .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 92 (ParameterDecl -> IDENTIFIER Type .)
   yacc.py:2687:    COMMA           reduce using rule 92 (ParameterDecl -> IDENTIFIER Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 162
   yacc.py:2563:
   yacc.py:2565:    (41) ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 41 (ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 41 (ConstSpecList -> ConstSpecList ConstSpec SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 163
   yacc.py:2563:
   yacc.py:2565:    (155) Expression -> Expression OR_OR . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 233
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 164
   yacc.py:2563:
   yacc.py:2565:    (156) Expression -> Expression AMP_AMP . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 234
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 165
   yacc.py:2563:
   yacc.py:2565:    (157) Expression -> Expression EQ_EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 235
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 166
   yacc.py:2563:
   yacc.py:2565:    (158) Expression -> Expression NOT_EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 236
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 167
   yacc.py:2563:
   yacc.py:2565:    (159) Expression -> Expression LT . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 237
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 168
   yacc.py:2563:
   yacc.py:2565:    (160) Expression -> Expression LT_EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 238
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 169
   yacc.py:2563:
   yacc.py:2565:    (161) Expression -> Expression GT . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 239
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 170
   yacc.py:2563:
   yacc.py:2565:    (162) Expression -> Expression GT_EQ . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 240
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 171
   yacc.py:2563:
   yacc.py:2565:    (163) Expression -> Expression PLUS . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 241
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 172
   yacc.py:2563:
   yacc.py:2565:    (164) Expression -> Expression MINUS . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 242
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 173
   yacc.py:2563:
   yacc.py:2565:    (165) Expression -> Expression OR . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 243
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 174
   yacc.py:2563:
   yacc.py:2565:    (166) Expression -> Expression CARET . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 244
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 175
   yacc.py:2563:
   yacc.py:2565:    (167) Expression -> Expression STAR . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 245
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 176
   yacc.py:2563:
   yacc.py:2565:    (168) Expression -> Expression DIVIDE . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 246
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 177
   yacc.py:2563:
   yacc.py:2565:    (169) Expression -> Expression MODULO . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 247
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 178
   yacc.py:2563:
   yacc.py:2565:    (170) Expression -> Expression LS . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 248
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 179
   yacc.py:2563:
   yacc.py:2565:    (171) Expression -> Expression RS . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 249
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 180
   yacc.py:2563:
   yacc.py:2565:    (172) Expression -> Expression AMP . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 250
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 181
   yacc.py:2563:
   yacc.py:2565:    (173) Expression -> Expression AND_OR . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 251
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 182
   yacc.py:2563:
   yacc.py:2565:    (185) PrimaryExpr -> PrimaryExpr Selector .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    LSQUARE         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    LROUND          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    OR_OR           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    AMP_AMP         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    EQ_EQ           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    NOT_EQ          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    LT              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    LT_EQ           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    GT              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    GT_EQ           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    PLUS            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    MINUS           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    OR              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    CARET           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    STAR            reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    DIVIDE          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    MODULO          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    LS              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    RS              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    AMP             reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    AND_OR          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    SEMICOLON       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    RSQUARE         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    COMMA           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    RROUND          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    EQ              reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    OR_EQ           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    CARET_EQ        reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    STAR_EQ         reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    LS_EQ           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    RS_EQ           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    AMP_EQ          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    COLON           reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2687:    LCURLY          reduce using rule 185 (PrimaryExpr -> PrimaryExpr Selector .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 183
   yacc.py:2563:
   yacc.py:2565:    (186) PrimaryExpr -> PrimaryExpr Index .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    LSQUARE         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    LROUND          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    OR_OR           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    AMP_AMP         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    EQ_EQ           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    NOT_EQ          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    LT              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    LT_EQ           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    GT              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    GT_EQ           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    PLUS            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    MINUS           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    OR              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    CARET           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    STAR            reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    DIVIDE          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    MODULO          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    LS              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    RS              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    AMP             reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    AND_OR          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    SEMICOLON       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    RSQUARE         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    COMMA           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    RROUND          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    EQ              reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    OR_EQ           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    CARET_EQ        reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    STAR_EQ         reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    LS_EQ           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    RS_EQ           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    AMP_EQ          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    COLON           reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2687:    LCURLY          reduce using rule 186 (PrimaryExpr -> PrimaryExpr Index .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 184
   yacc.py:2563:
   yacc.py:2565:    (187) PrimaryExpr -> PrimaryExpr Arguments .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    LSQUARE         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    LROUND          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    OR_OR           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    AMP_AMP         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    EQ_EQ           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    NOT_EQ          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    LT              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    LT_EQ           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    GT              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    GT_EQ           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    PLUS            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    MINUS           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    OR              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    CARET           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    STAR            reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    DIVIDE          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    MODULO          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    LS              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    RS              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    AMP             reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    AND_OR          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    SEMICOLON       reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    RSQUARE         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    COMMA           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    RROUND          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    EQ              reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    OR_EQ           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    CARET_EQ        reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    STAR_EQ         reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    LS_EQ           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    RS_EQ           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    AMP_EQ          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    COLON           reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2687:    LCURLY          reduce using rule 187 (PrimaryExpr -> PrimaryExpr Arguments .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 185
   yacc.py:2563:
   yacc.py:2565:    (204) Selector -> DOT . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 252
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 186
   yacc.py:2563:
   yacc.py:2565:    (205) Index -> LSQUARE . Expression RSQUARE
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 253
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 187
   yacc.py:2563:
   yacc.py:2565:    (206) Arguments -> LROUND . RROUND
   yacc.py:2565:    (207) Arguments -> LROUND . ExpressionList RROUND
   yacc.py:2565:    (208) Arguments -> LROUND . Expression RROUND
   yacc.py:2565:    (209) Arguments -> LROUND . Type RROUND
   yacc.py:2565:    (210) Arguments -> LROUND . Type COMMA ExpressionList RROUND
   yacc.py:2565:    (211) Arguments -> LROUND . Type COMMA Expression RROUND
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 255
   yacc.py:2687:    LROUND          shift and go to state 254
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 259
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 260
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 256
   yacc.py:2714:    Expression                     shift and go to state 257
   yacc.py:2714:    Type                           shift and go to state 258
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 188
   yacc.py:2563:
   yacc.py:2565:    (175) UnaryExpr -> unary_op UnaryExpr .
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    AMP_AMP         reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    EQ_EQ           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    NOT_EQ          reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    LT              reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    LT_EQ           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    GT              reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    GT_EQ           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    PLUS            reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    MINUS           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    OR              reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    CARET           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    STAR            reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    DIVIDE          reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    MODULO          reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    LS              reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    RS              reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    AMP             reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    AND_OR          reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    SEMICOLON       reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    RSQUARE         reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    COMMA           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    RROUND          reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    EQ              reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    OR_EQ           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    CARET_EQ        reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    STAR_EQ         reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    LS_EQ           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    RS_EQ           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    AMP_EQ          reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    COLON           reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2687:    LCURLY          reduce using rule 175 (UnaryExpr -> unary_op UnaryExpr .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 189
   yacc.py:2563:
   yacc.py:2565:    (189) Operand -> LROUND Expression . RROUND
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 261
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 190
   yacc.py:2563:
   yacc.py:2565:    (203) FunctionLit -> FUNC Signature . FunctionBody
   yacc.py:2565:    (108) FunctionBody -> . Block
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2566:
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2689:
   yacc.py:2714:    FunctionBody                   shift and go to state 262
   yacc.py:2714:    Block                          shift and go to state 89
   yacc.py:2561:
   yacc.py:2562:state 191
   yacc.py:2563:
   yacc.py:2565:    (46) ConstSpec -> IDENTIFIER Type EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 46 (ConstSpec -> IDENTIFIER Type EQ Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 192
   yacc.py:2563:
   yacc.py:2565:    (49) IdentifierBotList -> IDENTIFIER COMMA . IdentifierBotList
   yacc.py:2565:    (49) IdentifierBotList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2565:    (50) IdentifierBotList -> . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 134
   yacc.py:2689:
   yacc.py:2714:    IdentifierBotList              shift and go to state 263
   yacc.py:2561:
   yacc.py:2562:state 193
   yacc.py:2563:
   yacc.py:2565:    (65) Type -> LROUND Type RROUND .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 65 (Type -> LROUND Type RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 65 (Type -> LROUND Type RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 65 (Type -> LROUND Type RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 65 (Type -> LROUND Type RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 65 (Type -> LROUND Type RROUND .)
   yacc.py:2687:    STRING_LIT      reduce using rule 65 (Type -> LROUND Type RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 194
   yacc.py:2563:
   yacc.py:2565:    (72) ArrayType -> LSQUARE ArrayLength RSQUARE . Type
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 264
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 195
   yacc.py:2563:
   yacc.py:2565:    (74) StructType -> STRUCT LCURLY FieldDeclList . RCURLY
   yacc.py:2565:    (76) FieldDeclList -> FieldDeclList . FieldDecl SEMICOLON
   yacc.py:2565:    (77) FieldDecl -> . IdentifierList Type TagTop
   yacc.py:2565:    (78) FieldDecl -> . IDENTIFIER Type TagTop
   yacc.py:2565:    (48) IdentifierList -> . IDENTIFIER COMMA IdentifierBotList
   yacc.py:2566:
   yacc.py:2687:    RCURLY          shift and go to state 265
   yacc.py:2687:    IDENTIFIER      shift and go to state 268
   yacc.py:2689:
   yacc.py:2714:    FieldDecl                      shift and go to state 266
   yacc.py:2714:    IdentifierList                 shift and go to state 267
   yacc.py:2561:
   yacc.py:2562:state 196
   yacc.py:2563:
   yacc.py:2565:    (75) FieldDeclList -> empty .
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 75 (FieldDeclList -> empty .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 75 (FieldDeclList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 197
   yacc.py:2563:
   yacc.py:2565:    (51) ExpressionList -> Expression COMMA . ExpressionBotList
   yacc.py:2565:    (52) ExpressionBotList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (53) ExpressionBotList -> . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 269
   yacc.py:2714:    ExpressionBotList              shift and go to state 270
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 198
   yacc.py:2563:
   yacc.py:2565:    (47) ConstSpec -> IdentifierList Type EQ ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 47 (ConstSpec -> IdentifierList Type EQ ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 199
   yacc.py:2563:
   yacc.py:2565:    (58) TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 58 (TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 58 (TypeSpecList -> TypeSpecList TypeSpec SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 200
   yacc.py:2563:
   yacc.py:2565:    (98) VarSpecList -> VarSpecList VarSpec SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 98 (VarSpecList -> VarSpecList VarSpec SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 98 (VarSpecList -> VarSpecList VarSpec SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 201
   yacc.py:2563:
   yacc.py:2565:    (101) VarSpec -> IDENTIFIER Type EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 101 (VarSpec -> IDENTIFIER Type EQ Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 202
   yacc.py:2563:
   yacc.py:2565:    (104) VarSpec -> IdentifierList Type EQ ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 104 (VarSpec -> IdentifierList Type EQ ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 203
   yacc.py:2563:
   yacc.py:2565:    (15) Block -> LCURLY ScopeStart StatementList . ScopeEnd RCURLY
   yacc.py:2565:    (17) ScopeEnd -> . empty
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ScopeEnd                       shift and go to state 271
   yacc.py:2714:    empty                          shift and go to state 272
   yacc.py:2561:
   yacc.py:2562:state 204
   yacc.py:2563:
   yacc.py:2565:    (18) StatementList -> Statement . SEMICOLON StatementList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 273
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 205
   yacc.py:2563:
   yacc.py:2565:    (19) StatementList -> empty .
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 19 (StatementList -> empty .)
   yacc.py:2687:    CASE            reduce using rule 19 (StatementList -> empty .)
   yacc.py:2687:    DEFAULT         reduce using rule 19 (StatementList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 206
   yacc.py:2563:
   yacc.py:2565:    (20) Statement -> Declaration .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 20 (Statement -> Declaration .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 207
   yacc.py:2563:
   yacc.py:2565:    (21) Statement -> SimpleStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 21 (Statement -> SimpleStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 208
   yacc.py:2563:
   yacc.py:2565:    (22) Statement -> ReturnStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 22 (Statement -> ReturnStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 209
   yacc.py:2563:
   yacc.py:2565:    (23) Statement -> Block .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 23 (Statement -> Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 210
   yacc.py:2563:
   yacc.py:2565:    (24) Statement -> IfStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 24 (Statement -> IfStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 211
   yacc.py:2563:
   yacc.py:2565:    (25) Statement -> SwitchStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 25 (Statement -> SwitchStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 212
   yacc.py:2563:
   yacc.py:2565:    (26) Statement -> ForStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 26 (Statement -> ForStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 213
   yacc.py:2563:
   yacc.py:2565:    (27) Statement -> BreakStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 27 (Statement -> BreakStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 214
   yacc.py:2563:
   yacc.py:2565:    (28) Statement -> ContinueStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 28 (Statement -> ContinueStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 215
   yacc.py:2563:
   yacc.py:2565:    (29) Statement -> GotoStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 29 (Statement -> GotoStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 216
   yacc.py:2563:
   yacc.py:2565:    (30) Statement -> PrintIntStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 30 (Statement -> PrintIntStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 217
   yacc.py:2563:
   yacc.py:2565:    (31) Statement -> PrintStrStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 31 (Statement -> PrintStrStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 218
   yacc.py:2563:
   yacc.py:2565:    (109) SimpleStmt -> Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2565:    (118) Assignment -> Expression . assign_op Expression
   yacc.py:2565:    (116) ShortVarDecl -> Expression . ASSIGN_OP Expression
   yacc.py:2565:    (113) IncDecStmt -> Expression . PLUS_PLUS
   yacc.py:2565:    (114) IncDecStmt -> Expression . MINUS_MINUS
   yacc.py:2565:    (51) ExpressionList -> Expression . COMMA ExpressionBotList
   yacc.py:2565:    (119) assign_op -> . EQ
   yacc.py:2565:    (120) assign_op -> . PLUS_EQ
   yacc.py:2565:    (121) assign_op -> . MINUS_EQ
   yacc.py:2565:    (122) assign_op -> . OR_EQ
   yacc.py:2565:    (123) assign_op -> . CARET_EQ
   yacc.py:2565:    (124) assign_op -> . STAR_EQ
   yacc.py:2565:    (125) assign_op -> . DIVIDE_EQ
   yacc.py:2565:    (126) assign_op -> . MODULO_EQ
   yacc.py:2565:    (127) assign_op -> . LS_EQ
   yacc.py:2565:    (128) assign_op -> . RS_EQ
   yacc.py:2565:    (129) assign_op -> . AMP_EQ
   yacc.py:2565:    (130) assign_op -> . AND_OR_EQ
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 109 (SimpleStmt -> Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2687:    ASSIGN_OP       shift and go to state 275
   yacc.py:2687:    PLUS_PLUS       shift and go to state 276
   yacc.py:2687:    MINUS_MINUS     shift and go to state 277
   yacc.py:2687:    COMMA           shift and go to state 197
   yacc.py:2687:    EQ              shift and go to state 278
   yacc.py:2687:    PLUS_EQ         shift and go to state 279
   yacc.py:2687:    MINUS_EQ        shift and go to state 280
   yacc.py:2687:    OR_EQ           shift and go to state 281
   yacc.py:2687:    CARET_EQ        shift and go to state 282
   yacc.py:2687:    STAR_EQ         shift and go to state 283
   yacc.py:2687:    DIVIDE_EQ       shift and go to state 284
   yacc.py:2687:    MODULO_EQ       shift and go to state 285
   yacc.py:2687:    LS_EQ           shift and go to state 286
   yacc.py:2687:    RS_EQ           shift and go to state 287
   yacc.py:2687:    AMP_EQ          shift and go to state 288
   yacc.py:2687:    AND_OR_EQ       shift and go to state 289
   yacc.py:2689:
   yacc.py:2714:    assign_op                      shift and go to state 274
   yacc.py:2561:
   yacc.py:2562:state 219
   yacc.py:2563:
   yacc.py:2565:    (110) SimpleStmt -> Assignment .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 110 (SimpleStmt -> Assignment .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 220
   yacc.py:2563:
   yacc.py:2565:    (111) SimpleStmt -> ShortVarDecl .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 111 (SimpleStmt -> ShortVarDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 221
   yacc.py:2563:
   yacc.py:2565:    (112) SimpleStmt -> IncDecStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 112 (SimpleStmt -> IncDecStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 222
   yacc.py:2563:
   yacc.py:2565:    (148) ReturnStmt -> RETURN .
   yacc.py:2565:    (149) ReturnStmt -> RETURN . Expression
   yacc.py:2565:    (150) ReturnStmt -> RETURN . ExpressionList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 148 (ReturnStmt -> RETURN .)
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 290
   yacc.py:2714:    ExpressionList                 shift and go to state 291
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 223
   yacc.py:2563:
   yacc.py:2565:    (117) Assignment -> ExpressionList . assign_op ExpressionList
   yacc.py:2565:    (115) ShortVarDecl -> ExpressionList . ASSIGN_OP ExpressionList
   yacc.py:2565:    (119) assign_op -> . EQ
   yacc.py:2565:    (120) assign_op -> . PLUS_EQ
   yacc.py:2565:    (121) assign_op -> . MINUS_EQ
   yacc.py:2565:    (122) assign_op -> . OR_EQ
   yacc.py:2565:    (123) assign_op -> . CARET_EQ
   yacc.py:2565:    (124) assign_op -> . STAR_EQ
   yacc.py:2565:    (125) assign_op -> . DIVIDE_EQ
   yacc.py:2565:    (126) assign_op -> . MODULO_EQ
   yacc.py:2565:    (127) assign_op -> . LS_EQ
   yacc.py:2565:    (128) assign_op -> . RS_EQ
   yacc.py:2565:    (129) assign_op -> . AMP_EQ
   yacc.py:2565:    (130) assign_op -> . AND_OR_EQ
   yacc.py:2566:
   yacc.py:2687:    ASSIGN_OP       shift and go to state 293
   yacc.py:2687:    EQ              shift and go to state 278
   yacc.py:2687:    PLUS_EQ         shift and go to state 279
   yacc.py:2687:    MINUS_EQ        shift and go to state 280
   yacc.py:2687:    OR_EQ           shift and go to state 281
   yacc.py:2687:    CARET_EQ        shift and go to state 282
   yacc.py:2687:    STAR_EQ         shift and go to state 283
   yacc.py:2687:    DIVIDE_EQ       shift and go to state 284
   yacc.py:2687:    MODULO_EQ       shift and go to state 285
   yacc.py:2687:    LS_EQ           shift and go to state 286
   yacc.py:2687:    RS_EQ           shift and go to state 287
   yacc.py:2687:    AMP_EQ          shift and go to state 288
   yacc.py:2687:    AND_OR_EQ       shift and go to state 289
   yacc.py:2689:
   yacc.py:2714:    assign_op                      shift and go to state 292
   yacc.py:2561:
   yacc.py:2562:state 224
   yacc.py:2563:
   yacc.py:2565:    (131) IfStmt -> IF . Expression Block
   yacc.py:2565:    (132) IfStmt -> IF . Expression Block ELSE elseTail
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 294
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 225
   yacc.py:2563:
   yacc.py:2565:    (135) SwitchStmt -> ExprSwitchStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 135 (SwitchStmt -> ExprSwitchStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 226
   yacc.py:2563:
   yacc.py:2565:    (146) ForStmt -> FOR . Expression Block
   yacc.py:2565:    (147) ForStmt -> FOR . Block
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 295
   yacc.py:2714:    Block                          shift and go to state 296
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 227
   yacc.py:2563:
   yacc.py:2565:    (151) BreakStmt -> BREAK . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 297
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 228
   yacc.py:2563:
   yacc.py:2565:    (152) ContinueStmt -> CONTINUE . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 298
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 229
   yacc.py:2563:
   yacc.py:2565:    (153) GotoStmt -> GOTO . IDENTIFIER
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 299
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 230
   yacc.py:2563:
   yacc.py:2565:    (32) PrintIntStmt -> PRINTLN . LROUND IDENTIFIER RROUND
   yacc.py:2565:    (33) PrintIntStmt -> PRINTLN . LROUND int_lit RROUND
   yacc.py:2565:    (34) PrintStrStmt -> PRINTLN . LROUND string_lit RROUND
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 300
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 231
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH . SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH . SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (138) ExprSwitchStmt -> SWITCH . LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (139) ExprSwitchStmt -> SWITCH . Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (109) SimpleStmt -> . Expression
   yacc.py:2565:    (110) SimpleStmt -> . Assignment
   yacc.py:2565:    (111) SimpleStmt -> . ShortVarDecl
   yacc.py:2565:    (112) SimpleStmt -> . IncDecStmt
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (117) Assignment -> . ExpressionList assign_op ExpressionList
   yacc.py:2565:    (118) Assignment -> . Expression assign_op Expression
   yacc.py:2565:    (115) ShortVarDecl -> . ExpressionList ASSIGN_OP ExpressionList
   yacc.py:2565:    (116) ShortVarDecl -> . Expression ASSIGN_OP Expression
   yacc.py:2565:    (113) IncDecStmt -> . Expression PLUS_PLUS
   yacc.py:2565:    (114) IncDecStmt -> . Expression MINUS_MINUS
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    LCURLY          shift and go to state 302
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    SimpleStmt                     shift and go to state 301
   yacc.py:2714:    Expression                     shift and go to state 303
   yacc.py:2714:    Assignment                     shift and go to state 219
   yacc.py:2714:    ShortVarDecl                   shift and go to state 220
   yacc.py:2714:    IncDecStmt                     shift and go to state 221
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    ExpressionList                 shift and go to state 223
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 232
   yacc.py:2563:
   yacc.py:2565:    (90) ParameterList -> ParameterList COMMA ParameterDecl .
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 90 (ParameterList -> ParameterList COMMA ParameterDecl .)
   yacc.py:2687:    COMMA           reduce using rule 90 (ParameterList -> ParameterList COMMA ParameterDecl .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 233
   yacc.py:2563:
   yacc.py:2565:    (155) Expression -> Expression OR_OR Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    COMMA           reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    RROUND          reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    EQ              reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    COLON           reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 155 (Expression -> Expression OR_OR Expression .)
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! AMP_AMP         [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! EQ_EQ           [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! NOT_EQ          [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! LT              [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! LT_EQ           [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! GT              [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! GT_EQ           [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! PLUS            [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 155 (Expression -> Expression OR_OR Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 234
   yacc.py:2563:
   yacc.py:2565:    (156) Expression -> Expression AMP_AMP Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    COMMA           reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    RROUND          reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    EQ              reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    COLON           reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 156 (Expression -> Expression AMP_AMP Expression .)
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! EQ_EQ           [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! NOT_EQ          [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! LT              [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! LT_EQ           [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! GT              [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! GT_EQ           [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! PLUS            [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 156 (Expression -> Expression AMP_AMP Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 235
   yacc.py:2563:
   yacc.py:2565:    (157) Expression -> Expression EQ_EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    LT              reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    GT              reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    COMMA           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    RROUND          reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    EQ              reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    COLON           reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 157 (Expression -> Expression EQ_EQ Expression .)
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 157 (Expression -> Expression EQ_EQ Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 236
   yacc.py:2563:
   yacc.py:2565:    (158) Expression -> Expression NOT_EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    LT              reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    GT              reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    COMMA           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    RROUND          reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    EQ              reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    COLON           reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 158 (Expression -> Expression NOT_EQ Expression .)
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 158 (Expression -> Expression NOT_EQ Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 237
   yacc.py:2563:
   yacc.py:2565:    (159) Expression -> Expression LT Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    LT              reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    GT              reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    COMMA           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    RROUND          reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    EQ              reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    COLON           reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 159 (Expression -> Expression LT Expression .)
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 159 (Expression -> Expression LT Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 238
   yacc.py:2563:
   yacc.py:2565:    (160) Expression -> Expression LT_EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    LT              reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    GT              reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    COMMA           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    RROUND          reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    EQ              reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    COLON           reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 160 (Expression -> Expression LT_EQ Expression .)
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 160 (Expression -> Expression LT_EQ Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 239
   yacc.py:2563:
   yacc.py:2565:    (161) Expression -> Expression GT Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    LT              reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    GT              reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    COMMA           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    RROUND          reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    EQ              reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    COLON           reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 161 (Expression -> Expression GT Expression .)
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 161 (Expression -> Expression GT Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 240
   yacc.py:2563:
   yacc.py:2565:    (162) Expression -> Expression GT_EQ Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    LT              reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    GT              reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    COMMA           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    RROUND          reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    EQ              reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    COLON           reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 162 (Expression -> Expression GT_EQ Expression .)
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! PLUS            [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! MINUS           [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! OR              [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! CARET           [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! STAR            [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 162 (Expression -> Expression GT_EQ Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 241
   yacc.py:2563:
   yacc.py:2565:    (163) Expression -> Expression PLUS Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    LT              reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    GT              reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    PLUS            reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    MINUS           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    OR              reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    CARET           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    COMMA           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    RROUND          reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    EQ              reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    COLON           reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 163 (Expression -> Expression PLUS Expression .)
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! STAR            [ reduce using rule 163 (Expression -> Expression PLUS Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 163 (Expression -> Expression PLUS Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 163 (Expression -> Expression PLUS Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 163 (Expression -> Expression PLUS Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 163 (Expression -> Expression PLUS Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 163 (Expression -> Expression PLUS Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 163 (Expression -> Expression PLUS Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 242
   yacc.py:2563:
   yacc.py:2565:    (164) Expression -> Expression MINUS Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    LT              reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    GT              reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    PLUS            reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    MINUS           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    OR              reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    CARET           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    COMMA           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    RROUND          reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    EQ              reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    COLON           reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 164 (Expression -> Expression MINUS Expression .)
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! STAR            [ reduce using rule 164 (Expression -> Expression MINUS Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 164 (Expression -> Expression MINUS Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 164 (Expression -> Expression MINUS Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 164 (Expression -> Expression MINUS Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 164 (Expression -> Expression MINUS Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 164 (Expression -> Expression MINUS Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 164 (Expression -> Expression MINUS Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 243
   yacc.py:2563:
   yacc.py:2565:    (165) Expression -> Expression OR Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    LT              reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    GT              reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    PLUS            reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    MINUS           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    OR              reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    CARET           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    COMMA           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    RROUND          reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    EQ              reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    COLON           reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 165 (Expression -> Expression OR Expression .)
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! STAR            [ reduce using rule 165 (Expression -> Expression OR Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 165 (Expression -> Expression OR Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 165 (Expression -> Expression OR Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 165 (Expression -> Expression OR Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 165 (Expression -> Expression OR Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 165 (Expression -> Expression OR Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 165 (Expression -> Expression OR Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 244
   yacc.py:2563:
   yacc.py:2565:    (166) Expression -> Expression CARET Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    LT              reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    GT              reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    PLUS            reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    MINUS           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    OR              reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    CARET           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    COMMA           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    RROUND          reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    EQ              reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    COLON           reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 166 (Expression -> Expression CARET Expression .)
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2696:  ! STAR            [ reduce using rule 166 (Expression -> Expression CARET Expression .) ]
   yacc.py:2696:  ! DIVIDE          [ reduce using rule 166 (Expression -> Expression CARET Expression .) ]
   yacc.py:2696:  ! MODULO          [ reduce using rule 166 (Expression -> Expression CARET Expression .) ]
   yacc.py:2696:  ! LS              [ reduce using rule 166 (Expression -> Expression CARET Expression .) ]
   yacc.py:2696:  ! RS              [ reduce using rule 166 (Expression -> Expression CARET Expression .) ]
   yacc.py:2696:  ! AMP             [ reduce using rule 166 (Expression -> Expression CARET Expression .) ]
   yacc.py:2696:  ! AND_OR          [ reduce using rule 166 (Expression -> Expression CARET Expression .) ]
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 245
   yacc.py:2563:
   yacc.py:2565:    (167) Expression -> Expression STAR Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    LT              reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    GT              reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    PLUS            reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    MINUS           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    OR              reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    CARET           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    STAR            reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    MODULO          reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    LS              reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    RS              reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    AMP             reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    AND_OR          reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    COMMA           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    RROUND          reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    EQ              reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    COLON           reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 167 (Expression -> Expression STAR Expression .)
   yacc.py:2689:
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 175 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 176 ]
   yacc.py:2696:  ! MODULO          [ shift and go to state 177 ]
   yacc.py:2696:  ! LS              [ shift and go to state 178 ]
   yacc.py:2696:  ! RS              [ shift and go to state 179 ]
   yacc.py:2696:  ! AMP             [ shift and go to state 180 ]
   yacc.py:2696:  ! AND_OR          [ shift and go to state 181 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 246
   yacc.py:2563:
   yacc.py:2565:    (168) Expression -> Expression DIVIDE Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    LT              reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    GT              reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    PLUS            reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    MINUS           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    OR              reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    CARET           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    STAR            reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    MODULO          reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    LS              reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    RS              reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    AMP             reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    AND_OR          reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    COMMA           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    RROUND          reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    EQ              reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    COLON           reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 168 (Expression -> Expression DIVIDE Expression .)
   yacc.py:2689:
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 175 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 176 ]
   yacc.py:2696:  ! MODULO          [ shift and go to state 177 ]
   yacc.py:2696:  ! LS              [ shift and go to state 178 ]
   yacc.py:2696:  ! RS              [ shift and go to state 179 ]
   yacc.py:2696:  ! AMP             [ shift and go to state 180 ]
   yacc.py:2696:  ! AND_OR          [ shift and go to state 181 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 247
   yacc.py:2563:
   yacc.py:2565:    (169) Expression -> Expression MODULO Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    LT              reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    GT              reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    PLUS            reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    MINUS           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    OR              reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    CARET           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    STAR            reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    MODULO          reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    LS              reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    RS              reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    AMP             reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    AND_OR          reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    COMMA           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    RROUND          reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    EQ              reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    COLON           reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 169 (Expression -> Expression MODULO Expression .)
   yacc.py:2689:
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 175 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 176 ]
   yacc.py:2696:  ! MODULO          [ shift and go to state 177 ]
   yacc.py:2696:  ! LS              [ shift and go to state 178 ]
   yacc.py:2696:  ! RS              [ shift and go to state 179 ]
   yacc.py:2696:  ! AMP             [ shift and go to state 180 ]
   yacc.py:2696:  ! AND_OR          [ shift and go to state 181 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 248
   yacc.py:2563:
   yacc.py:2565:    (170) Expression -> Expression LS Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    LT              reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    GT              reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    PLUS            reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    MINUS           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    OR              reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    CARET           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    STAR            reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    MODULO          reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    LS              reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    RS              reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    AMP             reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    AND_OR          reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    COMMA           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    RROUND          reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    EQ              reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    COLON           reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 170 (Expression -> Expression LS Expression .)
   yacc.py:2689:
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 175 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 176 ]
   yacc.py:2696:  ! MODULO          [ shift and go to state 177 ]
   yacc.py:2696:  ! LS              [ shift and go to state 178 ]
   yacc.py:2696:  ! RS              [ shift and go to state 179 ]
   yacc.py:2696:  ! AMP             [ shift and go to state 180 ]
   yacc.py:2696:  ! AND_OR          [ shift and go to state 181 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 249
   yacc.py:2563:
   yacc.py:2565:    (171) Expression -> Expression RS Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    LT              reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    GT              reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    PLUS            reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    MINUS           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    OR              reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    CARET           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    STAR            reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    MODULO          reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    LS              reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    RS              reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    AMP             reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    AND_OR          reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    COMMA           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    RROUND          reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    EQ              reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    COLON           reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 171 (Expression -> Expression RS Expression .)
   yacc.py:2689:
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 175 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 176 ]
   yacc.py:2696:  ! MODULO          [ shift and go to state 177 ]
   yacc.py:2696:  ! LS              [ shift and go to state 178 ]
   yacc.py:2696:  ! RS              [ shift and go to state 179 ]
   yacc.py:2696:  ! AMP             [ shift and go to state 180 ]
   yacc.py:2696:  ! AND_OR          [ shift and go to state 181 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 250
   yacc.py:2563:
   yacc.py:2565:    (172) Expression -> Expression AMP Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    LT              reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    GT              reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    PLUS            reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    MINUS           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    OR              reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    CARET           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    STAR            reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    MODULO          reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    LS              reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    RS              reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    AMP             reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    AND_OR          reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    COMMA           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    RROUND          reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    EQ              reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    COLON           reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 172 (Expression -> Expression AMP Expression .)
   yacc.py:2689:
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 175 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 176 ]
   yacc.py:2696:  ! MODULO          [ shift and go to state 177 ]
   yacc.py:2696:  ! LS              [ shift and go to state 178 ]
   yacc.py:2696:  ! RS              [ shift and go to state 179 ]
   yacc.py:2696:  ! AMP             [ shift and go to state 180 ]
   yacc.py:2696:  ! AND_OR          [ shift and go to state 181 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 251
   yacc.py:2563:
   yacc.py:2565:    (173) Expression -> Expression AND_OR Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    OR_OR           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    AMP_AMP         reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    EQ_EQ           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    NOT_EQ          reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    LT              reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    LT_EQ           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    GT              reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    GT_EQ           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    PLUS            reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    MINUS           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    OR              reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    CARET           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    STAR            reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    DIVIDE          reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    MODULO          reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    LS              reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    RS              reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    AMP             reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    AND_OR          reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    SEMICOLON       reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    RSQUARE         reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    COMMA           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    RROUND          reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    EQ              reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    COLON           reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2687:    LCURLY          reduce using rule 173 (Expression -> Expression AND_OR Expression .)
   yacc.py:2689:
   yacc.py:2696:  ! OR_OR           [ shift and go to state 163 ]
   yacc.py:2696:  ! AMP_AMP         [ shift and go to state 164 ]
   yacc.py:2696:  ! EQ_EQ           [ shift and go to state 165 ]
   yacc.py:2696:  ! NOT_EQ          [ shift and go to state 166 ]
   yacc.py:2696:  ! LT              [ shift and go to state 167 ]
   yacc.py:2696:  ! LT_EQ           [ shift and go to state 168 ]
   yacc.py:2696:  ! GT              [ shift and go to state 169 ]
   yacc.py:2696:  ! GT_EQ           [ shift and go to state 170 ]
   yacc.py:2696:  ! PLUS            [ shift and go to state 171 ]
   yacc.py:2696:  ! MINUS           [ shift and go to state 172 ]
   yacc.py:2696:  ! OR              [ shift and go to state 173 ]
   yacc.py:2696:  ! CARET           [ shift and go to state 174 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 175 ]
   yacc.py:2696:  ! DIVIDE          [ shift and go to state 176 ]
   yacc.py:2696:  ! MODULO          [ shift and go to state 177 ]
   yacc.py:2696:  ! LS              [ shift and go to state 178 ]
   yacc.py:2696:  ! RS              [ shift and go to state 179 ]
   yacc.py:2696:  ! AMP             [ shift and go to state 180 ]
   yacc.py:2696:  ! AND_OR          [ shift and go to state 181 ]
   yacc.py:2700:
   yacc.py:2561:
   yacc.py:2562:state 252
   yacc.py:2563:
   yacc.py:2565:    (204) Selector -> DOT IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    LSQUARE         reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    LROUND          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    OR_OR           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    AMP_AMP         reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    EQ_EQ           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    NOT_EQ          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    LT              reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    LT_EQ           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    GT              reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    GT_EQ           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    PLUS            reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    MINUS           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    OR              reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    CARET           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    STAR            reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    DIVIDE          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    MODULO          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    LS              reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    RS              reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    AMP             reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    AND_OR          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    SEMICOLON       reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    RSQUARE         reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    COMMA           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    RROUND          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    EQ              reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    OR_EQ           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    CARET_EQ        reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    STAR_EQ         reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    LS_EQ           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    RS_EQ           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    AMP_EQ          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    COLON           reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2687:    LCURLY          reduce using rule 204 (Selector -> DOT IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 253
   yacc.py:2563:
   yacc.py:2565:    (205) Index -> LSQUARE Expression . RSQUARE
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    RSQUARE         shift and go to state 304
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 254
   yacc.py:2563:
   yacc.py:2565:    (65) Type -> LROUND . Type RROUND
   yacc.py:2565:    (189) Operand -> LROUND . Expression RROUND
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 254
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 260
   yacc.py:2687:    STAR            shift and go to state 305
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 136
   yacc.py:2714:    Expression                     shift and go to state 189
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 255
   yacc.py:2563:
   yacc.py:2565:    (206) Arguments -> LROUND RROUND .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    LROUND          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    OR_OR           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    AMP_AMP         reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    EQ_EQ           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    NOT_EQ          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    LT              reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    LT_EQ           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    GT              reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    GT_EQ           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    PLUS            reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    MINUS           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    OR              reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    CARET           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    STAR            reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    DIVIDE          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    MODULO          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    LS              reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    RS              reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    AMP             reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    AND_OR          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    RSQUARE         reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    EQ              reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    OR_EQ           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    CARET_EQ        reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    STAR_EQ         reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    LS_EQ           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    RS_EQ           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    AMP_EQ          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    COLON           reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 206 (Arguments -> LROUND RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 256
   yacc.py:2563:
   yacc.py:2565:    (207) Arguments -> LROUND ExpressionList . RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 306
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 257
   yacc.py:2563:
   yacc.py:2565:    (208) Arguments -> LROUND Expression . RROUND
   yacc.py:2565:    (51) ExpressionList -> Expression . COMMA ExpressionBotList
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 307
   yacc.py:2687:    COMMA           shift and go to state 197
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 258
   yacc.py:2563:
   yacc.py:2565:    (209) Arguments -> LROUND Type . RROUND
   yacc.py:2565:    (210) Arguments -> LROUND Type . COMMA ExpressionList RROUND
   yacc.py:2565:    (211) Arguments -> LROUND Type . COMMA Expression RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 308
   yacc.py:2687:    COMMA           shift and go to state 309
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 259
   yacc.py:2563:
   yacc.py:2565:    (180) unary_op -> STAR .
   yacc.py:2565:    (71) PointerType -> STAR . Type
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    PLUS            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    MINUS           reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    NOT             reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    CARET           reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    STAR            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    AMP             reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    LT_MINUS        reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    LROUND          reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    FUNC            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    STRING_LIT      reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    HEX_LIT         reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2689:
   yacc.py:2696:  ! LROUND          [ shift and go to state 64 ]
   yacc.py:2696:  ! FUNC            [ shift and go to state 72 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 73 ]
   yacc.py:2700:
   yacc.py:2714:    Type                           shift and go to state 141
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 260
   yacc.py:2563:
   yacc.py:2565:    (82) FunctionType -> FUNC . Signature
   yacc.py:2565:    (203) FunctionLit -> FUNC . Signature FunctionBody
   yacc.py:2565:    (83) Signature -> . Parameters
   yacc.py:2565:    (84) Signature -> . Parameters Result
   yacc.py:2565:    (87) Parameters -> . LROUND RROUND
   yacc.py:2565:    (88) Parameters -> . LROUND ParameterList RROUND
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 56
   yacc.py:2689:
   yacc.py:2714:    Signature                      shift and go to state 310
   yacc.py:2714:    Parameters                     shift and go to state 55
   yacc.py:2561:
   yacc.py:2562:state 261
   yacc.py:2563:
   yacc.py:2565:    (189) Operand -> LROUND Expression RROUND .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    LROUND          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    OR_OR           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    AMP_AMP         reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    EQ_EQ           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    NOT_EQ          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    LT              reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    LT_EQ           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    GT              reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    GT_EQ           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    PLUS            reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    MINUS           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    OR              reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    CARET           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    STAR            reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    DIVIDE          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    MODULO          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    LS              reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    RS              reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    AMP             reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    AND_OR          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    RSQUARE         reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    EQ              reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    OR_EQ           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    CARET_EQ        reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    STAR_EQ         reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    LS_EQ           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    RS_EQ           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    AMP_EQ          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    COLON           reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 189 (Operand -> LROUND Expression RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 262
   yacc.py:2563:
   yacc.py:2565:    (203) FunctionLit -> FUNC Signature FunctionBody .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    LSQUARE         reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    LROUND          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    OR_OR           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    AMP_AMP         reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    EQ_EQ           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    NOT_EQ          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    LT              reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    LT_EQ           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    GT              reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    GT_EQ           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    PLUS            reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    MINUS           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    OR              reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    CARET           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    STAR            reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    DIVIDE          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    MODULO          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    LS              reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    RS              reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    AMP             reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    AND_OR          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    SEMICOLON       reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    RSQUARE         reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    COMMA           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    RROUND          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    EQ              reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    OR_EQ           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    CARET_EQ        reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    STAR_EQ         reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    LS_EQ           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    RS_EQ           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    AMP_EQ          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    COLON           reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2687:    LCURLY          reduce using rule 203 (FunctionLit -> FUNC Signature FunctionBody .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 263
   yacc.py:2563:
   yacc.py:2565:    (49) IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    LROUND          reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    PREDEFINED_TYPES reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    LSQUARE         reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    STRUCT          reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    FUNC            reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    STAR            reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2687:    SEMICOLON       reduce using rule 49 (IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 264
   yacc.py:2563:
   yacc.py:2565:    (72) ArrayType -> LSQUARE ArrayLength RSQUARE Type .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 72 (ArrayType -> LSQUARE ArrayLength RSQUARE Type .)
   yacc.py:2687:    SEMICOLON       reduce using rule 72 (ArrayType -> LSQUARE ArrayLength RSQUARE Type .)
   yacc.py:2687:    LCURLY          reduce using rule 72 (ArrayType -> LSQUARE ArrayLength RSQUARE Type .)
   yacc.py:2687:    RROUND          reduce using rule 72 (ArrayType -> LSQUARE ArrayLength RSQUARE Type .)
   yacc.py:2687:    COMMA           reduce using rule 72 (ArrayType -> LSQUARE ArrayLength RSQUARE Type .)
   yacc.py:2687:    STRING_LIT      reduce using rule 72 (ArrayType -> LSQUARE ArrayLength RSQUARE Type .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 265
   yacc.py:2563:
   yacc.py:2565:    (74) StructType -> STRUCT LCURLY FieldDeclList RCURLY .
   yacc.py:2566:
   yacc.py:2687:    EQ              reduce using rule 74 (StructType -> STRUCT LCURLY FieldDeclList RCURLY .)
   yacc.py:2687:    SEMICOLON       reduce using rule 74 (StructType -> STRUCT LCURLY FieldDeclList RCURLY .)
   yacc.py:2687:    LCURLY          reduce using rule 74 (StructType -> STRUCT LCURLY FieldDeclList RCURLY .)
   yacc.py:2687:    RROUND          reduce using rule 74 (StructType -> STRUCT LCURLY FieldDeclList RCURLY .)
   yacc.py:2687:    COMMA           reduce using rule 74 (StructType -> STRUCT LCURLY FieldDeclList RCURLY .)
   yacc.py:2687:    STRING_LIT      reduce using rule 74 (StructType -> STRUCT LCURLY FieldDeclList RCURLY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 266
   yacc.py:2563:
   yacc.py:2565:    (76) FieldDeclList -> FieldDeclList FieldDecl . SEMICOLON
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 311
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 267
   yacc.py:2563:
   yacc.py:2565:    (77) FieldDecl -> IdentifierList . Type TagTop
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 312
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 268
   yacc.py:2563:
   yacc.py:2565:    (78) FieldDecl -> IDENTIFIER . Type TagTop
   yacc.py:2565:    (48) IdentifierList -> IDENTIFIER . COMMA IdentifierBotList
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    COMMA           shift and go to state 61
   yacc.py:2687:    LROUND          shift and go to state 64
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2687:    FUNC            shift and go to state 72
   yacc.py:2687:    STAR            shift and go to state 73
   yacc.py:2689:
   yacc.py:2714:    Type                           shift and go to state 313
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 269
   yacc.py:2563:
   yacc.py:2565:    (52) ExpressionBotList -> Expression . COMMA ExpressionBotList
   yacc.py:2565:    (53) ExpressionBotList -> Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    COMMA           shift and go to state 314
   yacc.py:2687:    SEMICOLON       reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    EQ              reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    OR_EQ           reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    CARET_EQ        reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    STAR_EQ         reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    LS_EQ           reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    RS_EQ           reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    AMP_EQ          reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    RROUND          reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    COLON           reduce using rule 53 (ExpressionBotList -> Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 270
   yacc.py:2563:
   yacc.py:2565:    (51) ExpressionList -> Expression COMMA ExpressionBotList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    EQ              reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    OR_EQ           reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    CARET_EQ        reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    STAR_EQ         reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    LS_EQ           reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    RS_EQ           reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    AMP_EQ          reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    RROUND          reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    COLON           reduce using rule 51 (ExpressionList -> Expression COMMA ExpressionBotList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 271
   yacc.py:2563:
   yacc.py:2565:    (15) Block -> LCURLY ScopeStart StatementList ScopeEnd . RCURLY
   yacc.py:2566:
   yacc.py:2687:    RCURLY          shift and go to state 315
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 272
   yacc.py:2563:
   yacc.py:2565:    (17) ScopeEnd -> empty .
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 17 (ScopeEnd -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 273
   yacc.py:2563:
   yacc.py:2565:    (18) StatementList -> Statement SEMICOLON . StatementList
   yacc.py:2565:    (18) StatementList -> . Statement SEMICOLON StatementList
   yacc.py:2565:    (19) StatementList -> . empty
   yacc.py:2565:    (20) Statement -> . Declaration
   yacc.py:2565:    (21) Statement -> . SimpleStmt
   yacc.py:2565:    (22) Statement -> . ReturnStmt
   yacc.py:2565:    (23) Statement -> . Block
   yacc.py:2565:    (24) Statement -> . IfStmt
   yacc.py:2565:    (25) Statement -> . SwitchStmt
   yacc.py:2565:    (26) Statement -> . ForStmt
   yacc.py:2565:    (27) Statement -> . BreakStmt
   yacc.py:2565:    (28) Statement -> . ContinueStmt
   yacc.py:2565:    (29) Statement -> . GotoStmt
   yacc.py:2565:    (30) Statement -> . PrintIntStmt
   yacc.py:2565:    (31) Statement -> . PrintStrStmt
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (35) Declaration -> . ConstDecl
   yacc.py:2565:    (36) Declaration -> . TypeDecl
   yacc.py:2565:    (37) Declaration -> . VarDecl
   yacc.py:2565:    (109) SimpleStmt -> . Expression
   yacc.py:2565:    (110) SimpleStmt -> . Assignment
   yacc.py:2565:    (111) SimpleStmt -> . ShortVarDecl
   yacc.py:2565:    (112) SimpleStmt -> . IncDecStmt
   yacc.py:2565:    (148) ReturnStmt -> . RETURN
   yacc.py:2565:    (149) ReturnStmt -> . RETURN Expression
   yacc.py:2565:    (150) ReturnStmt -> . RETURN ExpressionList
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2565:    (131) IfStmt -> . IF Expression Block
   yacc.py:2565:    (132) IfStmt -> . IF Expression Block ELSE elseTail
   yacc.py:2565:    (135) SwitchStmt -> . ExprSwitchStmt
   yacc.py:2565:    (146) ForStmt -> . FOR Expression Block
   yacc.py:2565:    (147) ForStmt -> . FOR Block
   yacc.py:2565:    (151) BreakStmt -> . BREAK IDENTIFIER
   yacc.py:2565:    (152) ContinueStmt -> . CONTINUE IDENTIFIER
   yacc.py:2565:    (153) GotoStmt -> . GOTO IDENTIFIER
   yacc.py:2565:    (32) PrintIntStmt -> . PRINTLN LROUND IDENTIFIER RROUND
   yacc.py:2565:    (33) PrintIntStmt -> . PRINTLN LROUND int_lit RROUND
   yacc.py:2565:    (34) PrintStrStmt -> . PRINTLN LROUND string_lit RROUND
   yacc.py:2565:    (38) ConstDecl -> . CONST LROUND ConstSpecList RROUND
   yacc.py:2565:    (39) ConstDecl -> . CONST ConstSpec
   yacc.py:2565:    (54) TypeDecl -> . TYPE TypeSpecTopList
   yacc.py:2565:    (94) VarDecl -> . VAR VarSpecTopList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (117) Assignment -> . ExpressionList assign_op ExpressionList
   yacc.py:2565:    (118) Assignment -> . Expression assign_op Expression
   yacc.py:2565:    (115) ShortVarDecl -> . ExpressionList ASSIGN_OP ExpressionList
   yacc.py:2565:    (116) ShortVarDecl -> . Expression ASSIGN_OP Expression
   yacc.py:2565:    (113) IncDecStmt -> . Expression PLUS_PLUS
   yacc.py:2565:    (114) IncDecStmt -> . Expression MINUS_MINUS
   yacc.py:2565:    (136) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (137) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (138) ExprSwitchStmt -> . SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (139) ExprSwitchStmt -> . SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RETURN          shift and go to state 222
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2687:    IF              shift and go to state 224
   yacc.py:2687:    FOR             shift and go to state 226
   yacc.py:2687:    BREAK           shift and go to state 227
   yacc.py:2687:    CONTINUE        shift and go to state 228
   yacc.py:2687:    GOTO            shift and go to state 229
   yacc.py:2687:    PRINTLN         shift and go to state 230
   yacc.py:2687:    CONST           shift and go to state 18
   yacc.py:2687:    TYPE            shift and go to state 19
   yacc.py:2687:    VAR             shift and go to state 20
   yacc.py:2687:    SWITCH          shift and go to state 231
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Statement                      shift and go to state 204
   yacc.py:2714:    StatementList                  shift and go to state 316
   yacc.py:2714:    empty                          shift and go to state 205
   yacc.py:2714:    Declaration                    shift and go to state 206
   yacc.py:2714:    SimpleStmt                     shift and go to state 207
   yacc.py:2714:    ReturnStmt                     shift and go to state 208
   yacc.py:2714:    Block                          shift and go to state 209
   yacc.py:2714:    IfStmt                         shift and go to state 210
   yacc.py:2714:    SwitchStmt                     shift and go to state 211
   yacc.py:2714:    ForStmt                        shift and go to state 212
   yacc.py:2714:    BreakStmt                      shift and go to state 213
   yacc.py:2714:    ContinueStmt                   shift and go to state 214
   yacc.py:2714:    GotoStmt                       shift and go to state 215
   yacc.py:2714:    PrintIntStmt                   shift and go to state 216
   yacc.py:2714:    PrintStrStmt                   shift and go to state 217
   yacc.py:2714:    ConstDecl                      shift and go to state 14
   yacc.py:2714:    TypeDecl                       shift and go to state 15
   yacc.py:2714:    VarDecl                        shift and go to state 16
   yacc.py:2714:    Expression                     shift and go to state 218
   yacc.py:2714:    Assignment                     shift and go to state 219
   yacc.py:2714:    ShortVarDecl                   shift and go to state 220
   yacc.py:2714:    IncDecStmt                     shift and go to state 221
   yacc.py:2714:    ExpressionList                 shift and go to state 223
   yacc.py:2714:    ExprSwitchStmt                 shift and go to state 225
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 274
   yacc.py:2563:
   yacc.py:2565:    (118) Assignment -> Expression assign_op . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 317
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 275
   yacc.py:2563:
   yacc.py:2565:    (116) ShortVarDecl -> Expression ASSIGN_OP . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 318
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 276
   yacc.py:2563:
   yacc.py:2565:    (113) IncDecStmt -> Expression PLUS_PLUS .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 113 (IncDecStmt -> Expression PLUS_PLUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 277
   yacc.py:2563:
   yacc.py:2565:    (114) IncDecStmt -> Expression MINUS_MINUS .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 114 (IncDecStmt -> Expression MINUS_MINUS .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 278
   yacc.py:2563:
   yacc.py:2565:    (119) assign_op -> EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    PLUS            reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    MINUS           reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    NOT             reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    CARET           reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    STAR            reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    AMP             reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    LROUND          reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    FUNC            reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 119 (assign_op -> EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 279
   yacc.py:2563:
   yacc.py:2565:    (120) assign_op -> PLUS_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    NOT             reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    CARET           reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    STAR            reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    AMP             reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 120 (assign_op -> PLUS_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 280
   yacc.py:2563:
   yacc.py:2565:    (121) assign_op -> MINUS_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    NOT             reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    CARET           reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    STAR            reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    AMP             reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 121 (assign_op -> MINUS_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 281
   yacc.py:2563:
   yacc.py:2565:    (122) assign_op -> OR_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    NOT             reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    CARET           reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    STAR            reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    AMP             reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 122 (assign_op -> OR_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 282
   yacc.py:2563:
   yacc.py:2565:    (123) assign_op -> CARET_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    NOT             reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    CARET           reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    STAR            reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    AMP             reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 123 (assign_op -> CARET_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 283
   yacc.py:2563:
   yacc.py:2565:    (124) assign_op -> STAR_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    NOT             reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    CARET           reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    STAR            reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    AMP             reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 124 (assign_op -> STAR_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 284
   yacc.py:2563:
   yacc.py:2565:    (125) assign_op -> DIVIDE_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    NOT             reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    CARET           reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    STAR            reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    AMP             reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 125 (assign_op -> DIVIDE_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 285
   yacc.py:2563:
   yacc.py:2565:    (126) assign_op -> MODULO_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    NOT             reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    CARET           reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    STAR            reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    AMP             reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 126 (assign_op -> MODULO_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 286
   yacc.py:2563:
   yacc.py:2565:    (127) assign_op -> LS_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    NOT             reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    CARET           reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    STAR            reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    AMP             reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 127 (assign_op -> LS_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 287
   yacc.py:2563:
   yacc.py:2565:    (128) assign_op -> RS_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    NOT             reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    CARET           reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    STAR            reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    AMP             reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 128 (assign_op -> RS_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 288
   yacc.py:2563:
   yacc.py:2565:    (129) assign_op -> AMP_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    NOT             reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    CARET           reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    STAR            reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    AMP             reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 129 (assign_op -> AMP_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 289
   yacc.py:2563:
   yacc.py:2565:    (130) assign_op -> AND_OR_EQ .
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    PLUS            reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    MINUS           reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    NOT             reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    CARET           reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    STAR            reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    AMP             reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    LT_MINUS        reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    LROUND          reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    FUNC            reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    STRING_LIT      reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2687:    HEX_LIT         reduce using rule 130 (assign_op -> AND_OR_EQ .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 290
   yacc.py:2563:
   yacc.py:2565:    (149) ReturnStmt -> RETURN Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2565:    (51) ExpressionList -> Expression . COMMA ExpressionBotList
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 149 (ReturnStmt -> RETURN Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2687:    COMMA           shift and go to state 197
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 291
   yacc.py:2563:
   yacc.py:2565:    (150) ReturnStmt -> RETURN ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 150 (ReturnStmt -> RETURN ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 292
   yacc.py:2563:
   yacc.py:2565:    (117) Assignment -> ExpressionList assign_op . ExpressionList
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 319
   yacc.py:2714:    Expression                     shift and go to state 143
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 293
   yacc.py:2563:
   yacc.py:2565:    (115) ShortVarDecl -> ExpressionList ASSIGN_OP . ExpressionList
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 320
   yacc.py:2714:    Expression                     shift and go to state 143
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 294
   yacc.py:2563:
   yacc.py:2565:    (131) IfStmt -> IF Expression . Block
   yacc.py:2565:    (132) IfStmt -> IF Expression . Block ELSE elseTail
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2566:
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2689:
   yacc.py:2714:    Block                          shift and go to state 321
   yacc.py:2561:
   yacc.py:2562:state 295
   yacc.py:2563:
   yacc.py:2565:    (146) ForStmt -> FOR Expression . Block
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2566:
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2689:
   yacc.py:2714:    Block                          shift and go to state 322
   yacc.py:2561:
   yacc.py:2562:state 296
   yacc.py:2563:
   yacc.py:2565:    (147) ForStmt -> FOR Block .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 147 (ForStmt -> FOR Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 297
   yacc.py:2563:
   yacc.py:2565:    (151) BreakStmt -> BREAK IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 151 (BreakStmt -> BREAK IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 298
   yacc.py:2563:
   yacc.py:2565:    (152) ContinueStmt -> CONTINUE IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 152 (ContinueStmt -> CONTINUE IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 299
   yacc.py:2563:
   yacc.py:2565:    (153) GotoStmt -> GOTO IDENTIFIER .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 153 (GotoStmt -> GOTO IDENTIFIER .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 300
   yacc.py:2563:
   yacc.py:2565:    (32) PrintIntStmt -> PRINTLN LROUND . IDENTIFIER RROUND
   yacc.py:2565:    (33) PrintIntStmt -> PRINTLN LROUND . int_lit RROUND
   yacc.py:2565:    (34) PrintStrStmt -> PRINTLN LROUND . string_lit RROUND
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 323
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    int_lit                        shift and go to state 324
   yacc.py:2714:    string_lit                     shift and go to state 325
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 301
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH SimpleStmt . SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt . SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       shift and go to state 326
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 302
   yacc.py:2563:
   yacc.py:2565:    (138) ExprSwitchStmt -> SWITCH LCURLY . ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (16) ScopeStart -> . empty
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ScopeStart                     shift and go to state 327
   yacc.py:2714:    empty                          shift and go to state 156
   yacc.py:2561:
   yacc.py:2562:state 303
   yacc.py:2563:
   yacc.py:2565:    (139) ExprSwitchStmt -> SWITCH Expression . LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (109) SimpleStmt -> Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2565:    (118) Assignment -> Expression . assign_op Expression
   yacc.py:2565:    (116) ShortVarDecl -> Expression . ASSIGN_OP Expression
   yacc.py:2565:    (113) IncDecStmt -> Expression . PLUS_PLUS
   yacc.py:2565:    (114) IncDecStmt -> Expression . MINUS_MINUS
   yacc.py:2565:    (51) ExpressionList -> Expression . COMMA ExpressionBotList
   yacc.py:2565:    (119) assign_op -> . EQ
   yacc.py:2565:    (120) assign_op -> . PLUS_EQ
   yacc.py:2565:    (121) assign_op -> . MINUS_EQ
   yacc.py:2565:    (122) assign_op -> . OR_EQ
   yacc.py:2565:    (123) assign_op -> . CARET_EQ
   yacc.py:2565:    (124) assign_op -> . STAR_EQ
   yacc.py:2565:    (125) assign_op -> . DIVIDE_EQ
   yacc.py:2565:    (126) assign_op -> . MODULO_EQ
   yacc.py:2565:    (127) assign_op -> . LS_EQ
   yacc.py:2565:    (128) assign_op -> . RS_EQ
   yacc.py:2565:    (129) assign_op -> . AMP_EQ
   yacc.py:2565:    (130) assign_op -> . AND_OR_EQ
   yacc.py:2566:
   yacc.py:2687:    LCURLY          shift and go to state 328
   yacc.py:2687:    SEMICOLON       reduce using rule 109 (SimpleStmt -> Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2687:    ASSIGN_OP       shift and go to state 275
   yacc.py:2687:    PLUS_PLUS       shift and go to state 276
   yacc.py:2687:    MINUS_MINUS     shift and go to state 277
   yacc.py:2687:    COMMA           shift and go to state 197
   yacc.py:2687:    EQ              shift and go to state 278
   yacc.py:2687:    PLUS_EQ         shift and go to state 279
   yacc.py:2687:    MINUS_EQ        shift and go to state 280
   yacc.py:2687:    OR_EQ           shift and go to state 281
   yacc.py:2687:    CARET_EQ        shift and go to state 282
   yacc.py:2687:    STAR_EQ         shift and go to state 283
   yacc.py:2687:    DIVIDE_EQ       shift and go to state 284
   yacc.py:2687:    MODULO_EQ       shift and go to state 285
   yacc.py:2687:    LS_EQ           shift and go to state 286
   yacc.py:2687:    RS_EQ           shift and go to state 287
   yacc.py:2687:    AMP_EQ          shift and go to state 288
   yacc.py:2687:    AND_OR_EQ       shift and go to state 289
   yacc.py:2689:
   yacc.py:2714:    assign_op                      shift and go to state 274
   yacc.py:2561:
   yacc.py:2562:state 304
   yacc.py:2563:
   yacc.py:2565:    (205) Index -> LSQUARE Expression RSQUARE .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    LSQUARE         reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    LROUND          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    OR_OR           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    AMP_AMP         reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    EQ_EQ           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    NOT_EQ          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    LT              reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    LT_EQ           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    GT              reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    GT_EQ           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    PLUS            reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    MINUS           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    OR              reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    CARET           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    STAR            reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    DIVIDE          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    MODULO          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    LS              reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    RS              reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    AMP             reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    AND_OR          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    SEMICOLON       reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    RSQUARE         reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    COMMA           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    RROUND          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    EQ              reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    OR_EQ           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    CARET_EQ        reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    STAR_EQ         reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    LS_EQ           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    RS_EQ           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    AMP_EQ          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    COLON           reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2687:    LCURLY          reduce using rule 205 (Index -> LSQUARE Expression RSQUARE .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 305
   yacc.py:2563:
   yacc.py:2565:    (71) PointerType -> STAR . Type
   yacc.py:2565:    (180) unary_op -> STAR .
   yacc.py:2565:    (63) Type -> . TypeLit
   yacc.py:2565:    (64) Type -> . StandardTypes
   yacc.py:2565:    (65) Type -> . LROUND Type RROUND
   yacc.py:2565:    (67) TypeLit -> . ArrayType
   yacc.py:2565:    (68) TypeLit -> . StructType
   yacc.py:2565:    (69) TypeLit -> . FunctionType
   yacc.py:2565:    (70) TypeLit -> . PointerType
   yacc.py:2565:    (66) StandardTypes -> . PREDEFINED_TYPES
   yacc.py:2565:    (72) ArrayType -> . LSQUARE ArrayLength RSQUARE Type
   yacc.py:2565:    (74) StructType -> . STRUCT LCURLY FieldDeclList RCURLY
   yacc.py:2565:    (82) FunctionType -> . FUNC Signature
   yacc.py:2565:    (71) PointerType -> . STAR Type
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    PLUS            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    MINUS           reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    NOT             reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    CARET           reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    STAR            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    AMP             reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    LT_MINUS        reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    LROUND          reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    FUNC            reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    FLOAT_LIT       reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    STRING_LIT      reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    RUNE_LIT        reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    DECIMAL_LIT     reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    OCTAL_LIT       reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    HEX_LIT         reduce using rule 180 (unary_op -> STAR .)
   yacc.py:2687:    PREDEFINED_TYPES shift and go to state 69
   yacc.py:2687:    LSQUARE         shift and go to state 70
   yacc.py:2687:    STRUCT          shift and go to state 71
   yacc.py:2689:
   yacc.py:2696:  ! LROUND          [ shift and go to state 64 ]
   yacc.py:2696:  ! FUNC            [ shift and go to state 72 ]
   yacc.py:2696:  ! STAR            [ shift and go to state 73 ]
   yacc.py:2700:
   yacc.py:2714:    Type                           shift and go to state 141
   yacc.py:2714:    TypeLit                        shift and go to state 62
   yacc.py:2714:    StandardTypes                  shift and go to state 63
   yacc.py:2714:    ArrayType                      shift and go to state 65
   yacc.py:2714:    StructType                     shift and go to state 66
   yacc.py:2714:    FunctionType                   shift and go to state 67
   yacc.py:2714:    PointerType                    shift and go to state 68
   yacc.py:2561:
   yacc.py:2562:state 306
   yacc.py:2563:
   yacc.py:2565:    (207) Arguments -> LROUND ExpressionList RROUND .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    LROUND          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    OR_OR           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    AMP_AMP         reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    EQ_EQ           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    NOT_EQ          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    LT              reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    LT_EQ           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    GT              reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    GT_EQ           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    PLUS            reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    MINUS           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    OR              reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    CARET           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    STAR            reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    DIVIDE          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    MODULO          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    LS              reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    RS              reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    AMP             reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    AND_OR          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    RSQUARE         reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    EQ              reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    OR_EQ           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    CARET_EQ        reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    STAR_EQ         reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    LS_EQ           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    RS_EQ           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    AMP_EQ          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    COLON           reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 207 (Arguments -> LROUND ExpressionList RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 307
   yacc.py:2563:
   yacc.py:2565:    (208) Arguments -> LROUND Expression RROUND .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    LROUND          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    OR_OR           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    AMP_AMP         reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    EQ_EQ           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    NOT_EQ          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    LT              reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    LT_EQ           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    GT              reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    GT_EQ           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    PLUS            reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    MINUS           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    OR              reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    CARET           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    STAR            reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    DIVIDE          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    MODULO          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    LS              reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    RS              reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    AMP             reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    AND_OR          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    RSQUARE         reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    EQ              reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    OR_EQ           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    CARET_EQ        reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    STAR_EQ         reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    LS_EQ           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    RS_EQ           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    AMP_EQ          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    COLON           reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 208 (Arguments -> LROUND Expression RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 308
   yacc.py:2563:
   yacc.py:2565:    (209) Arguments -> LROUND Type RROUND .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    LROUND          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    OR_OR           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    AMP_AMP         reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    EQ_EQ           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    NOT_EQ          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    LT              reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    LT_EQ           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    GT              reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    GT_EQ           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    PLUS            reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    MINUS           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    OR              reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    CARET           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    STAR            reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    DIVIDE          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    MODULO          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    LS              reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    RS              reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    AMP             reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    AND_OR          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    RSQUARE         reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    EQ              reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    OR_EQ           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    CARET_EQ        reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    STAR_EQ         reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    LS_EQ           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    RS_EQ           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    AMP_EQ          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    COLON           reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 209 (Arguments -> LROUND Type RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 309
   yacc.py:2563:
   yacc.py:2565:    (210) Arguments -> LROUND Type COMMA . ExpressionList RROUND
   yacc.py:2565:    (211) Arguments -> LROUND Type COMMA . Expression RROUND
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 329
   yacc.py:2714:    Expression                     shift and go to state 330
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 310
   yacc.py:2563:
   yacc.py:2565:    (82) FunctionType -> FUNC Signature .
   yacc.py:2565:    (203) FunctionLit -> FUNC Signature . FunctionBody
   yacc.py:2565:    (108) FunctionBody -> . Block
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2566:
   yacc.py:2687:    RROUND          reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2687:    COMMA           reduce using rule 82 (FunctionType -> FUNC Signature .)
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2689:
   yacc.py:2714:    FunctionBody                   shift and go to state 262
   yacc.py:2714:    Block                          shift and go to state 89
   yacc.py:2561:
   yacc.py:2562:state 311
   yacc.py:2563:
   yacc.py:2565:    (76) FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 76 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)
   yacc.py:2687:    IDENTIFIER      reduce using rule 76 (FieldDeclList -> FieldDeclList FieldDecl SEMICOLON .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 312
   yacc.py:2563:
   yacc.py:2565:    (77) FieldDecl -> IdentifierList Type . TagTop
   yacc.py:2565:    (79) TagTop -> . empty
   yacc.py:2565:    (80) TagTop -> . Tag
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (81) Tag -> . string_lit
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 214 (empty -> .)
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2689:
   yacc.py:2714:    TagTop                         shift and go to state 331
   yacc.py:2714:    empty                          shift and go to state 332
   yacc.py:2714:    Tag                            shift and go to state 333
   yacc.py:2714:    string_lit                     shift and go to state 334
   yacc.py:2561:
   yacc.py:2562:state 313
   yacc.py:2563:
   yacc.py:2565:    (78) FieldDecl -> IDENTIFIER Type . TagTop
   yacc.py:2565:    (79) TagTop -> . empty
   yacc.py:2565:    (80) TagTop -> . Tag
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (81) Tag -> . string_lit
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 214 (empty -> .)
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2689:
   yacc.py:2714:    TagTop                         shift and go to state 335
   yacc.py:2714:    empty                          shift and go to state 332
   yacc.py:2714:    Tag                            shift and go to state 333
   yacc.py:2714:    string_lit                     shift and go to state 334
   yacc.py:2561:
   yacc.py:2562:state 314
   yacc.py:2563:
   yacc.py:2565:    (52) ExpressionBotList -> Expression COMMA . ExpressionBotList
   yacc.py:2565:    (52) ExpressionBotList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (53) ExpressionBotList -> . Expression
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 269
   yacc.py:2714:    ExpressionBotList              shift and go to state 336
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 315
   yacc.py:2563:
   yacc.py:2565:    (15) Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    DOT             reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    LSQUARE         reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    LROUND          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    OR_OR           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    AMP_AMP         reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    EQ_EQ           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    NOT_EQ          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    LT              reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    LT_EQ           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    GT              reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    GT_EQ           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    PLUS            reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    MINUS           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    OR              reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    CARET           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    STAR            reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    DIVIDE          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    MODULO          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    LS              reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    RS              reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    AMP             reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    AND_OR          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    RSQUARE         reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    COMMA           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    RROUND          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    EQ              reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    OR_EQ           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    CARET_EQ        reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    STAR_EQ         reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    LS_EQ           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    RS_EQ           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    AMP_EQ          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    COLON           reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    LCURLY          reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2687:    ELSE            reduce using rule 15 (Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 316
   yacc.py:2563:
   yacc.py:2565:    (18) StatementList -> Statement SEMICOLON StatementList .
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 18 (StatementList -> Statement SEMICOLON StatementList .)
   yacc.py:2687:    CASE            reduce using rule 18 (StatementList -> Statement SEMICOLON StatementList .)
   yacc.py:2687:    DEFAULT         reduce using rule 18 (StatementList -> Statement SEMICOLON StatementList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 317
   yacc.py:2563:
   yacc.py:2565:    (118) Assignment -> Expression assign_op Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 118 (Assignment -> Expression assign_op Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 318
   yacc.py:2563:
   yacc.py:2565:    (116) ShortVarDecl -> Expression ASSIGN_OP Expression .
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 116 (ShortVarDecl -> Expression ASSIGN_OP Expression .)
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 319
   yacc.py:2563:
   yacc.py:2565:    (117) Assignment -> ExpressionList assign_op ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 117 (Assignment -> ExpressionList assign_op ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 320
   yacc.py:2563:
   yacc.py:2565:    (115) ShortVarDecl -> ExpressionList ASSIGN_OP ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 115 (ShortVarDecl -> ExpressionList ASSIGN_OP ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 321
   yacc.py:2563:
   yacc.py:2565:    (131) IfStmt -> IF Expression Block .
   yacc.py:2565:    (132) IfStmt -> IF Expression Block . ELSE elseTail
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 131 (IfStmt -> IF Expression Block .)
   yacc.py:2687:    ELSE            shift and go to state 337
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 322
   yacc.py:2563:
   yacc.py:2565:    (146) ForStmt -> FOR Expression Block .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 146 (ForStmt -> FOR Expression Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 323
   yacc.py:2563:
   yacc.py:2565:    (32) PrintIntStmt -> PRINTLN LROUND IDENTIFIER . RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 338
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 324
   yacc.py:2563:
   yacc.py:2565:    (33) PrintIntStmt -> PRINTLN LROUND int_lit . RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 339
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 325
   yacc.py:2563:
   yacc.py:2565:    (34) PrintStrStmt -> PRINTLN LROUND string_lit . RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 340
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 326
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON . LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON . Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    LCURLY          shift and go to state 341
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    Expression                     shift and go to state 342
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 327
   yacc.py:2563:
   yacc.py:2565:    (138) ExprSwitchStmt -> SWITCH LCURLY ScopeStart . ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (140) ExprCaseClauseList -> . empty
   yacc.py:2565:    (141) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ExprCaseClauseList             shift and go to state 343
   yacc.py:2714:    empty                          shift and go to state 344
   yacc.py:2561:
   yacc.py:2562:state 328
   yacc.py:2563:
   yacc.py:2565:    (139) ExprSwitchStmt -> SWITCH Expression LCURLY . ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (16) ScopeStart -> . empty
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ScopeStart                     shift and go to state 345
   yacc.py:2714:    empty                          shift and go to state 156
   yacc.py:2561:
   yacc.py:2562:state 329
   yacc.py:2563:
   yacc.py:2565:    (210) Arguments -> LROUND Type COMMA ExpressionList . RROUND
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 346
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 330
   yacc.py:2563:
   yacc.py:2565:    (211) Arguments -> LROUND Type COMMA Expression . RROUND
   yacc.py:2565:    (51) ExpressionList -> Expression . COMMA ExpressionBotList
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    RROUND          shift and go to state 347
   yacc.py:2687:    COMMA           shift and go to state 197
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 331
   yacc.py:2563:
   yacc.py:2565:    (77) FieldDecl -> IdentifierList Type TagTop .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 77 (FieldDecl -> IdentifierList Type TagTop .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 332
   yacc.py:2563:
   yacc.py:2565:    (79) TagTop -> empty .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 79 (TagTop -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 333
   yacc.py:2563:
   yacc.py:2565:    (80) TagTop -> Tag .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 80 (TagTop -> Tag .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 334
   yacc.py:2563:
   yacc.py:2565:    (81) Tag -> string_lit .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 81 (Tag -> string_lit .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 335
   yacc.py:2563:
   yacc.py:2565:    (78) FieldDecl -> IDENTIFIER Type TagTop .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 78 (FieldDecl -> IDENTIFIER Type TagTop .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 336
   yacc.py:2563:
   yacc.py:2565:    (52) ExpressionBotList -> Expression COMMA ExpressionBotList .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    EQ              reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    OR_EQ           reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    CARET_EQ        reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    STAR_EQ         reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    LS_EQ           reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    RS_EQ           reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    AMP_EQ          reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    RROUND          reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2687:    COLON           reduce using rule 52 (ExpressionBotList -> Expression COMMA ExpressionBotList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 337
   yacc.py:2563:
   yacc.py:2565:    (132) IfStmt -> IF Expression Block ELSE . elseTail
   yacc.py:2565:    (133) elseTail -> . IfStmt
   yacc.py:2565:    (134) elseTail -> . Block
   yacc.py:2565:    (131) IfStmt -> . IF Expression Block
   yacc.py:2565:    (132) IfStmt -> . IF Expression Block ELSE elseTail
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2566:
   yacc.py:2687:    IF              shift and go to state 224
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2689:
   yacc.py:2714:    Block                          shift and go to state 348
   yacc.py:2714:    elseTail                       shift and go to state 349
   yacc.py:2714:    IfStmt                         shift and go to state 350
   yacc.py:2561:
   yacc.py:2562:state 338
   yacc.py:2563:
   yacc.py:2565:    (32) PrintIntStmt -> PRINTLN LROUND IDENTIFIER RROUND .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 32 (PrintIntStmt -> PRINTLN LROUND IDENTIFIER RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 339
   yacc.py:2563:
   yacc.py:2565:    (33) PrintIntStmt -> PRINTLN LROUND int_lit RROUND .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 33 (PrintIntStmt -> PRINTLN LROUND int_lit RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 340
   yacc.py:2563:
   yacc.py:2565:    (34) PrintStrStmt -> PRINTLN LROUND string_lit RROUND .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 34 (PrintStrStmt -> PRINTLN LROUND string_lit RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 341
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY . ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (16) ScopeStart -> . empty
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ScopeStart                     shift and go to state 351
   yacc.py:2714:    empty                          shift and go to state 156
   yacc.py:2561:
   yacc.py:2562:state 342
   yacc.py:2563:
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression . LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    LCURLY          shift and go to state 352
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 343
   yacc.py:2563:
   yacc.py:2565:    (138) ExprSwitchStmt -> SWITCH LCURLY ScopeStart ExprCaseClauseList . ScopeEnd RCURLY
   yacc.py:2565:    (141) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
   yacc.py:2565:    (17) ScopeEnd -> . empty
   yacc.py:2565:    (142) ExprCaseClause -> . ExprSwitchCase COLON StatementList
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (143) ExprSwitchCase -> . CASE ExpressionList
   yacc.py:2565:    (144) ExprSwitchCase -> . DEFAULT
   yacc.py:2565:    (145) ExprSwitchCase -> . CASE Expression
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    CASE            shift and go to state 356
   yacc.py:2687:    DEFAULT         shift and go to state 357
   yacc.py:2689:
   yacc.py:2714:    ScopeEnd                       shift and go to state 353
   yacc.py:2714:    ExprCaseClause                 shift and go to state 354
   yacc.py:2714:    empty                          shift and go to state 272
   yacc.py:2714:    ExprSwitchCase                 shift and go to state 355
   yacc.py:2561:
   yacc.py:2562:state 344
   yacc.py:2563:
   yacc.py:2565:    (140) ExprCaseClauseList -> empty .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 140 (ExprCaseClauseList -> empty .)
   yacc.py:2687:    DEFAULT         reduce using rule 140 (ExprCaseClauseList -> empty .)
   yacc.py:2687:    RCURLY          reduce using rule 140 (ExprCaseClauseList -> empty .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 345
   yacc.py:2563:
   yacc.py:2565:    (139) ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart . ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (140) ExprCaseClauseList -> . empty
   yacc.py:2565:    (141) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ExprCaseClauseList             shift and go to state 358
   yacc.py:2714:    empty                          shift and go to state 344
   yacc.py:2561:
   yacc.py:2562:state 346
   yacc.py:2563:
   yacc.py:2565:    (210) Arguments -> LROUND Type COMMA ExpressionList RROUND .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    LROUND          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    OR_OR           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    AMP_AMP         reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    EQ_EQ           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    NOT_EQ          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    LT              reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    LT_EQ           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    GT              reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    GT_EQ           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    PLUS            reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    MINUS           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    OR              reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    CARET           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    STAR            reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    DIVIDE          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    MODULO          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    LS              reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    RS              reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    AMP             reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    AND_OR          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    RSQUARE         reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    EQ              reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    OR_EQ           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    CARET_EQ        reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    STAR_EQ         reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    LS_EQ           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    RS_EQ           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    AMP_EQ          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    COLON           reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 210 (Arguments -> LROUND Type COMMA ExpressionList RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 347
   yacc.py:2563:
   yacc.py:2565:    (211) Arguments -> LROUND Type COMMA Expression RROUND .
   yacc.py:2566:
   yacc.py:2687:    DOT             reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    LSQUARE         reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    LROUND          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    OR_OR           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    AMP_AMP         reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    EQ_EQ           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    NOT_EQ          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    LT              reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    LT_EQ           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    GT              reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    GT_EQ           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    PLUS            reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    MINUS           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    OR              reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    CARET           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    STAR            reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    DIVIDE          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    MODULO          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    LS              reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    RS              reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    AMP             reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    AND_OR          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    SEMICOLON       reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    RSQUARE         reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    COMMA           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    RROUND          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    ASSIGN_OP       reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    PLUS_PLUS       reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    MINUS_MINUS     reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    EQ              reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    PLUS_EQ         reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    MINUS_EQ        reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    OR_EQ           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    CARET_EQ        reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    STAR_EQ         reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    DIVIDE_EQ       reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    MODULO_EQ       reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    LS_EQ           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    RS_EQ           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    AMP_EQ          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    AND_OR_EQ       reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    COLON           reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2687:    LCURLY          reduce using rule 211 (Arguments -> LROUND Type COMMA Expression RROUND .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 348
   yacc.py:2563:
   yacc.py:2565:    (134) elseTail -> Block .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 134 (elseTail -> Block .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 349
   yacc.py:2563:
   yacc.py:2565:    (132) IfStmt -> IF Expression Block ELSE elseTail .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 132 (IfStmt -> IF Expression Block ELSE elseTail .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 350
   yacc.py:2563:
   yacc.py:2565:    (133) elseTail -> IfStmt .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 133 (elseTail -> IfStmt .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 351
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart . ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (140) ExprCaseClauseList -> . empty
   yacc.py:2565:    (141) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ExprCaseClauseList             shift and go to state 359
   yacc.py:2714:    empty                          shift and go to state 344
   yacc.py:2561:
   yacc.py:2562:state 352
   yacc.py:2563:
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY . ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (16) ScopeStart -> . empty
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ScopeStart                     shift and go to state 360
   yacc.py:2714:    empty                          shift and go to state 156
   yacc.py:2561:
   yacc.py:2562:state 353
   yacc.py:2563:
   yacc.py:2565:    (138) ExprSwitchStmt -> SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd . RCURLY
   yacc.py:2566:
   yacc.py:2687:    RCURLY          shift and go to state 361
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 354
   yacc.py:2563:
   yacc.py:2565:    (141) ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 141 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
   yacc.py:2687:    DEFAULT         reduce using rule 141 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
   yacc.py:2687:    RCURLY          reduce using rule 141 (ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 355
   yacc.py:2563:
   yacc.py:2565:    (142) ExprCaseClause -> ExprSwitchCase . COLON StatementList
   yacc.py:2566:
   yacc.py:2687:    COLON           shift and go to state 362
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 356
   yacc.py:2563:
   yacc.py:2565:    (143) ExprSwitchCase -> CASE . ExpressionList
   yacc.py:2565:    (145) ExprSwitchCase -> CASE . Expression
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    ExpressionList                 shift and go to state 363
   yacc.py:2714:    Expression                     shift and go to state 364
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 357
   yacc.py:2563:
   yacc.py:2565:    (144) ExprSwitchCase -> DEFAULT .
   yacc.py:2566:
   yacc.py:2687:    COLON           reduce using rule 144 (ExprSwitchCase -> DEFAULT .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 358
   yacc.py:2563:
   yacc.py:2565:    (139) ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . ScopeEnd RCURLY
   yacc.py:2565:    (141) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
   yacc.py:2565:    (17) ScopeEnd -> . empty
   yacc.py:2565:    (142) ExprCaseClause -> . ExprSwitchCase COLON StatementList
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (143) ExprSwitchCase -> . CASE ExpressionList
   yacc.py:2565:    (144) ExprSwitchCase -> . DEFAULT
   yacc.py:2565:    (145) ExprSwitchCase -> . CASE Expression
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    CASE            shift and go to state 356
   yacc.py:2687:    DEFAULT         shift and go to state 357
   yacc.py:2689:
   yacc.py:2714:    ScopeEnd                       shift and go to state 365
   yacc.py:2714:    ExprCaseClause                 shift and go to state 354
   yacc.py:2714:    empty                          shift and go to state 272
   yacc.py:2714:    ExprSwitchCase                 shift and go to state 355
   yacc.py:2561:
   yacc.py:2562:state 359
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList . ScopeEnd RCURLY
   yacc.py:2565:    (141) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
   yacc.py:2565:    (17) ScopeEnd -> . empty
   yacc.py:2565:    (142) ExprCaseClause -> . ExprSwitchCase COLON StatementList
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (143) ExprSwitchCase -> . CASE ExpressionList
   yacc.py:2565:    (144) ExprSwitchCase -> . DEFAULT
   yacc.py:2565:    (145) ExprSwitchCase -> . CASE Expression
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    CASE            shift and go to state 356
   yacc.py:2687:    DEFAULT         shift and go to state 357
   yacc.py:2689:
   yacc.py:2714:    ScopeEnd                       shift and go to state 366
   yacc.py:2714:    ExprCaseClause                 shift and go to state 354
   yacc.py:2714:    empty                          shift and go to state 272
   yacc.py:2714:    ExprSwitchCase                 shift and go to state 355
   yacc.py:2561:
   yacc.py:2562:state 360
   yacc.py:2563:
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart . ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (140) ExprCaseClauseList -> . empty
   yacc.py:2565:    (141) ExprCaseClauseList -> . ExprCaseClauseList ExprCaseClause
   yacc.py:2565:    (214) empty -> .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2689:
   yacc.py:2714:    ExprCaseClauseList             shift and go to state 367
   yacc.py:2714:    empty                          shift and go to state 344
   yacc.py:2561:
   yacc.py:2562:state 361
   yacc.py:2563:
   yacc.py:2565:    (138) ExprSwitchStmt -> SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 138 (ExprSwitchStmt -> SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 362
   yacc.py:2563:
   yacc.py:2565:    (142) ExprCaseClause -> ExprSwitchCase COLON . StatementList
   yacc.py:2565:    (18) StatementList -> . Statement SEMICOLON StatementList
   yacc.py:2565:    (19) StatementList -> . empty
   yacc.py:2565:    (20) Statement -> . Declaration
   yacc.py:2565:    (21) Statement -> . SimpleStmt
   yacc.py:2565:    (22) Statement -> . ReturnStmt
   yacc.py:2565:    (23) Statement -> . Block
   yacc.py:2565:    (24) Statement -> . IfStmt
   yacc.py:2565:    (25) Statement -> . SwitchStmt
   yacc.py:2565:    (26) Statement -> . ForStmt
   yacc.py:2565:    (27) Statement -> . BreakStmt
   yacc.py:2565:    (28) Statement -> . ContinueStmt
   yacc.py:2565:    (29) Statement -> . GotoStmt
   yacc.py:2565:    (30) Statement -> . PrintIntStmt
   yacc.py:2565:    (31) Statement -> . PrintStrStmt
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (35) Declaration -> . ConstDecl
   yacc.py:2565:    (36) Declaration -> . TypeDecl
   yacc.py:2565:    (37) Declaration -> . VarDecl
   yacc.py:2565:    (109) SimpleStmt -> . Expression
   yacc.py:2565:    (110) SimpleStmt -> . Assignment
   yacc.py:2565:    (111) SimpleStmt -> . ShortVarDecl
   yacc.py:2565:    (112) SimpleStmt -> . IncDecStmt
   yacc.py:2565:    (148) ReturnStmt -> . RETURN
   yacc.py:2565:    (149) ReturnStmt -> . RETURN Expression
   yacc.py:2565:    (150) ReturnStmt -> . RETURN ExpressionList
   yacc.py:2565:    (15) Block -> . LCURLY ScopeStart StatementList ScopeEnd RCURLY
   yacc.py:2565:    (131) IfStmt -> . IF Expression Block
   yacc.py:2565:    (132) IfStmt -> . IF Expression Block ELSE elseTail
   yacc.py:2565:    (135) SwitchStmt -> . ExprSwitchStmt
   yacc.py:2565:    (146) ForStmt -> . FOR Expression Block
   yacc.py:2565:    (147) ForStmt -> . FOR Block
   yacc.py:2565:    (151) BreakStmt -> . BREAK IDENTIFIER
   yacc.py:2565:    (152) ContinueStmt -> . CONTINUE IDENTIFIER
   yacc.py:2565:    (153) GotoStmt -> . GOTO IDENTIFIER
   yacc.py:2565:    (32) PrintIntStmt -> . PRINTLN LROUND IDENTIFIER RROUND
   yacc.py:2565:    (33) PrintIntStmt -> . PRINTLN LROUND int_lit RROUND
   yacc.py:2565:    (34) PrintStrStmt -> . PRINTLN LROUND string_lit RROUND
   yacc.py:2565:    (38) ConstDecl -> . CONST LROUND ConstSpecList RROUND
   yacc.py:2565:    (39) ConstDecl -> . CONST ConstSpec
   yacc.py:2565:    (54) TypeDecl -> . TYPE TypeSpecTopList
   yacc.py:2565:    (94) VarDecl -> . VAR VarSpecTopList
   yacc.py:2565:    (154) Expression -> . UnaryExpr
   yacc.py:2565:    (155) Expression -> . Expression OR_OR Expression
   yacc.py:2565:    (156) Expression -> . Expression AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> . Expression EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> . Expression NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> . Expression LT Expression
   yacc.py:2565:    (160) Expression -> . Expression LT_EQ Expression
   yacc.py:2565:    (161) Expression -> . Expression GT Expression
   yacc.py:2565:    (162) Expression -> . Expression GT_EQ Expression
   yacc.py:2565:    (163) Expression -> . Expression PLUS Expression
   yacc.py:2565:    (164) Expression -> . Expression MINUS Expression
   yacc.py:2565:    (165) Expression -> . Expression OR Expression
   yacc.py:2565:    (166) Expression -> . Expression CARET Expression
   yacc.py:2565:    (167) Expression -> . Expression STAR Expression
   yacc.py:2565:    (168) Expression -> . Expression DIVIDE Expression
   yacc.py:2565:    (169) Expression -> . Expression MODULO Expression
   yacc.py:2565:    (170) Expression -> . Expression LS Expression
   yacc.py:2565:    (171) Expression -> . Expression RS Expression
   yacc.py:2565:    (172) Expression -> . Expression AMP Expression
   yacc.py:2565:    (173) Expression -> . Expression AND_OR Expression
   yacc.py:2565:    (117) Assignment -> . ExpressionList assign_op ExpressionList
   yacc.py:2565:    (118) Assignment -> . Expression assign_op Expression
   yacc.py:2565:    (115) ShortVarDecl -> . ExpressionList ASSIGN_OP ExpressionList
   yacc.py:2565:    (116) ShortVarDecl -> . Expression ASSIGN_OP Expression
   yacc.py:2565:    (113) IncDecStmt -> . Expression PLUS_PLUS
   yacc.py:2565:    (114) IncDecStmt -> . Expression MINUS_MINUS
   yacc.py:2565:    (136) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (137) ExprSwitchStmt -> . SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (138) ExprSwitchStmt -> . SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (139) ExprSwitchStmt -> . SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY
   yacc.py:2565:    (174) UnaryExpr -> . PrimaryExpr
   yacc.py:2565:    (175) UnaryExpr -> . unary_op UnaryExpr
   yacc.py:2565:    (51) ExpressionList -> . Expression COMMA ExpressionBotList
   yacc.py:2565:    (183) PrimaryExpr -> . Operand
   yacc.py:2565:    (184) PrimaryExpr -> . IDENTIFIER
   yacc.py:2565:    (185) PrimaryExpr -> . PrimaryExpr Selector
   yacc.py:2565:    (186) PrimaryExpr -> . PrimaryExpr Index
   yacc.py:2565:    (187) PrimaryExpr -> . PrimaryExpr Arguments
   yacc.py:2565:    (176) unary_op -> . PLUS
   yacc.py:2565:    (177) unary_op -> . MINUS
   yacc.py:2565:    (178) unary_op -> . NOT
   yacc.py:2565:    (179) unary_op -> . CARET
   yacc.py:2565:    (180) unary_op -> . STAR
   yacc.py:2565:    (181) unary_op -> . AMP
   yacc.py:2565:    (182) unary_op -> . LT_MINUS
   yacc.py:2565:    (188) Operand -> . Literal
   yacc.py:2565:    (189) Operand -> . LROUND Expression RROUND
   yacc.py:2565:    (190) Literal -> . BasicLit
   yacc.py:2565:    (191) Literal -> . FunctionLit
   yacc.py:2565:    (192) BasicLit -> . int_lit
   yacc.py:2565:    (193) BasicLit -> . float_lit
   yacc.py:2565:    (194) BasicLit -> . string_lit
   yacc.py:2565:    (195) BasicLit -> . rune_lit
   yacc.py:2565:    (203) FunctionLit -> . FUNC Signature FunctionBody
   yacc.py:2565:    (196) int_lit -> . decimal_lit
   yacc.py:2565:    (197) int_lit -> . octal_lit
   yacc.py:2565:    (198) int_lit -> . hex_lit
   yacc.py:2565:    (202) float_lit -> . FLOAT_LIT
   yacc.py:2565:    (212) string_lit -> . STRING_LIT
   yacc.py:2565:    (213) rune_lit -> . RUNE_LIT
   yacc.py:2565:    (199) decimal_lit -> . DECIMAL_LIT
   yacc.py:2565:    (200) octal_lit -> . OCTAL_LIT
   yacc.py:2565:    (201) hex_lit -> . HEX_LIT
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 214 (empty -> .)
   yacc.py:2687:    DEFAULT         reduce using rule 214 (empty -> .)
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    RETURN          shift and go to state 222
   yacc.py:2687:    LCURLY          shift and go to state 90
   yacc.py:2687:    IF              shift and go to state 224
   yacc.py:2687:    FOR             shift and go to state 226
   yacc.py:2687:    BREAK           shift and go to state 227
   yacc.py:2687:    CONTINUE        shift and go to state 228
   yacc.py:2687:    GOTO            shift and go to state 229
   yacc.py:2687:    PRINTLN         shift and go to state 230
   yacc.py:2687:    CONST           shift and go to state 18
   yacc.py:2687:    TYPE            shift and go to state 19
   yacc.py:2687:    VAR             shift and go to state 20
   yacc.py:2687:    SWITCH          shift and go to state 231
   yacc.py:2687:    IDENTIFIER      shift and go to state 103
   yacc.py:2687:    PLUS            shift and go to state 106
   yacc.py:2687:    MINUS           shift and go to state 107
   yacc.py:2687:    NOT             shift and go to state 114
   yacc.py:2687:    CARET           shift and go to state 108
   yacc.py:2687:    STAR            shift and go to state 109
   yacc.py:2687:    AMP             shift and go to state 110
   yacc.py:2687:    LT_MINUS        shift and go to state 115
   yacc.py:2687:    LROUND          shift and go to state 117
   yacc.py:2687:    FUNC            shift and go to state 124
   yacc.py:2687:    FLOAT_LIT       shift and go to state 128
   yacc.py:2687:    STRING_LIT      shift and go to state 50
   yacc.py:2687:    RUNE_LIT        shift and go to state 129
   yacc.py:2687:    DECIMAL_LIT     shift and go to state 130
   yacc.py:2687:    OCTAL_LIT       shift and go to state 131
   yacc.py:2687:    HEX_LIT         shift and go to state 132
   yacc.py:2689:
   yacc.py:2714:    StatementList                  shift and go to state 368
   yacc.py:2714:    Statement                      shift and go to state 204
   yacc.py:2714:    empty                          shift and go to state 205
   yacc.py:2714:    Declaration                    shift and go to state 206
   yacc.py:2714:    SimpleStmt                     shift and go to state 207
   yacc.py:2714:    ReturnStmt                     shift and go to state 208
   yacc.py:2714:    Block                          shift and go to state 209
   yacc.py:2714:    IfStmt                         shift and go to state 210
   yacc.py:2714:    SwitchStmt                     shift and go to state 211
   yacc.py:2714:    ForStmt                        shift and go to state 212
   yacc.py:2714:    BreakStmt                      shift and go to state 213
   yacc.py:2714:    ContinueStmt                   shift and go to state 214
   yacc.py:2714:    GotoStmt                       shift and go to state 215
   yacc.py:2714:    PrintIntStmt                   shift and go to state 216
   yacc.py:2714:    PrintStrStmt                   shift and go to state 217
   yacc.py:2714:    ConstDecl                      shift and go to state 14
   yacc.py:2714:    TypeDecl                       shift and go to state 15
   yacc.py:2714:    VarDecl                        shift and go to state 16
   yacc.py:2714:    Expression                     shift and go to state 218
   yacc.py:2714:    Assignment                     shift and go to state 219
   yacc.py:2714:    ShortVarDecl                   shift and go to state 220
   yacc.py:2714:    IncDecStmt                     shift and go to state 221
   yacc.py:2714:    ExpressionList                 shift and go to state 223
   yacc.py:2714:    ExprSwitchStmt                 shift and go to state 225
   yacc.py:2714:    int_lit                        shift and go to state 120
   yacc.py:2714:    string_lit                     shift and go to state 122
   yacc.py:2714:    UnaryExpr                      shift and go to state 105
   yacc.py:2714:    PrimaryExpr                    shift and go to state 111
   yacc.py:2714:    unary_op                       shift and go to state 112
   yacc.py:2714:    Operand                        shift and go to state 113
   yacc.py:2714:    Literal                        shift and go to state 116
   yacc.py:2714:    BasicLit                       shift and go to state 118
   yacc.py:2714:    FunctionLit                    shift and go to state 119
   yacc.py:2714:    float_lit                      shift and go to state 121
   yacc.py:2714:    rune_lit                       shift and go to state 123
   yacc.py:2714:    decimal_lit                    shift and go to state 125
   yacc.py:2714:    octal_lit                      shift and go to state 126
   yacc.py:2714:    hex_lit                        shift and go to state 127
   yacc.py:2561:
   yacc.py:2562:state 363
   yacc.py:2563:
   yacc.py:2565:    (143) ExprSwitchCase -> CASE ExpressionList .
   yacc.py:2566:
   yacc.py:2687:    COLON           reduce using rule 143 (ExprSwitchCase -> CASE ExpressionList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 364
   yacc.py:2563:
   yacc.py:2565:    (145) ExprSwitchCase -> CASE Expression .
   yacc.py:2565:    (51) ExpressionList -> Expression . COMMA ExpressionBotList
   yacc.py:2565:    (155) Expression -> Expression . OR_OR Expression
   yacc.py:2565:    (156) Expression -> Expression . AMP_AMP Expression
   yacc.py:2565:    (157) Expression -> Expression . EQ_EQ Expression
   yacc.py:2565:    (158) Expression -> Expression . NOT_EQ Expression
   yacc.py:2565:    (159) Expression -> Expression . LT Expression
   yacc.py:2565:    (160) Expression -> Expression . LT_EQ Expression
   yacc.py:2565:    (161) Expression -> Expression . GT Expression
   yacc.py:2565:    (162) Expression -> Expression . GT_EQ Expression
   yacc.py:2565:    (163) Expression -> Expression . PLUS Expression
   yacc.py:2565:    (164) Expression -> Expression . MINUS Expression
   yacc.py:2565:    (165) Expression -> Expression . OR Expression
   yacc.py:2565:    (166) Expression -> Expression . CARET Expression
   yacc.py:2565:    (167) Expression -> Expression . STAR Expression
   yacc.py:2565:    (168) Expression -> Expression . DIVIDE Expression
   yacc.py:2565:    (169) Expression -> Expression . MODULO Expression
   yacc.py:2565:    (170) Expression -> Expression . LS Expression
   yacc.py:2565:    (171) Expression -> Expression . RS Expression
   yacc.py:2565:    (172) Expression -> Expression . AMP Expression
   yacc.py:2565:    (173) Expression -> Expression . AND_OR Expression
   yacc.py:2566:
   yacc.py:2687:    COLON           reduce using rule 145 (ExprSwitchCase -> CASE Expression .)
   yacc.py:2687:    COMMA           shift and go to state 197
   yacc.py:2687:    OR_OR           shift and go to state 163
   yacc.py:2687:    AMP_AMP         shift and go to state 164
   yacc.py:2687:    EQ_EQ           shift and go to state 165
   yacc.py:2687:    NOT_EQ          shift and go to state 166
   yacc.py:2687:    LT              shift and go to state 167
   yacc.py:2687:    LT_EQ           shift and go to state 168
   yacc.py:2687:    GT              shift and go to state 169
   yacc.py:2687:    GT_EQ           shift and go to state 170
   yacc.py:2687:    PLUS            shift and go to state 171
   yacc.py:2687:    MINUS           shift and go to state 172
   yacc.py:2687:    OR              shift and go to state 173
   yacc.py:2687:    CARET           shift and go to state 174
   yacc.py:2687:    STAR            shift and go to state 175
   yacc.py:2687:    DIVIDE          shift and go to state 176
   yacc.py:2687:    MODULO          shift and go to state 177
   yacc.py:2687:    LS              shift and go to state 178
   yacc.py:2687:    RS              shift and go to state 179
   yacc.py:2687:    AMP             shift and go to state 180
   yacc.py:2687:    AND_OR          shift and go to state 181
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 365
   yacc.py:2563:
   yacc.py:2565:    (139) ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd . RCURLY
   yacc.py:2566:
   yacc.py:2687:    RCURLY          shift and go to state 369
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 366
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd . RCURLY
   yacc.py:2566:
   yacc.py:2687:    RCURLY          shift and go to state 370
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 367
   yacc.py:2563:
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList . ScopeEnd RCURLY
   yacc.py:2565:    (141) ExprCaseClauseList -> ExprCaseClauseList . ExprCaseClause
   yacc.py:2565:    (17) ScopeEnd -> . empty
   yacc.py:2565:    (142) ExprCaseClause -> . ExprSwitchCase COLON StatementList
   yacc.py:2565:    (214) empty -> .
   yacc.py:2565:    (143) ExprSwitchCase -> . CASE ExpressionList
   yacc.py:2565:    (144) ExprSwitchCase -> . DEFAULT
   yacc.py:2565:    (145) ExprSwitchCase -> . CASE Expression
   yacc.py:2566:
   yacc.py:2687:    RCURLY          reduce using rule 214 (empty -> .)
   yacc.py:2687:    CASE            shift and go to state 356
   yacc.py:2687:    DEFAULT         shift and go to state 357
   yacc.py:2689:
   yacc.py:2714:    ScopeEnd                       shift and go to state 371
   yacc.py:2714:    ExprCaseClause                 shift and go to state 354
   yacc.py:2714:    empty                          shift and go to state 272
   yacc.py:2714:    ExprSwitchCase                 shift and go to state 355
   yacc.py:2561:
   yacc.py:2562:state 368
   yacc.py:2563:
   yacc.py:2565:    (142) ExprCaseClause -> ExprSwitchCase COLON StatementList .
   yacc.py:2566:
   yacc.py:2687:    CASE            reduce using rule 142 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
   yacc.py:2687:    DEFAULT         reduce using rule 142 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
   yacc.py:2687:    RCURLY          reduce using rule 142 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 369
   yacc.py:2563:
   yacc.py:2565:    (139) ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 139 (ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 370
   yacc.py:2563:
   yacc.py:2565:    (136) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 136 (ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .)
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 371
   yacc.py:2563:
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd . RCURLY
   yacc.py:2566:
   yacc.py:2687:    RCURLY          shift and go to state 372
   yacc.py:2689:
   yacc.py:2561:
   yacc.py:2562:state 372
   yacc.py:2563:
   yacc.py:2565:    (137) ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .
   yacc.py:2566:
   yacc.py:2687:    SEMICOLON       reduce using rule 137 (ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY .)
   yacc.py:2689:
   yacc.py:3457:
   yacc.py:3458:Conflicts:
   yacc.py:3459:
   yacc.py:3462:shift/reduce conflict for RROUND in state 157 resolved as shift
   yacc.py: 362:PLY: PARSE DEBUG START
   yacc.py: 410:
   yacc.py: 411:State  : 0
   yacc.py: 434:Stack  : . LexToken(PACKAGE,'package',23,0)
   yacc.py: 445:Action : Shift and goto state 2
   yacc.py: 410:
   yacc.py: 411:State  : 2
   yacc.py: 434:Stack  : PACKAGE . LexToken(IDENTIFIER,'main',23,8)
   yacc.py: 445:Action : Shift and goto state 3
   yacc.py: 410:
   yacc.py: 411:State  : 3
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER . LexToken(SEMICOLON,';',25,14)
   yacc.py: 445:Action : Shift and goto state 4
   yacc.py: 410:
   yacc.py: 411:State  : 4
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON . LexToken(FUNC,'func',25,14)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 7
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 7
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON empty . LexToken(FUNC,'func',25,14)
   yacc.py: 469:Action : Reduce rule [ImportDeclList -> empty] with [None] and goto state 5
   yacc.py: 506:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 5
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList . LexToken(FUNC,'func',25,14)
   yacc.py: 445:Action : Shift and goto state 17
   yacc.py: 410:
   yacc.py: 411:State  : 17
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC . LexToken(IDENTIFIER,'main',25,19)
   yacc.py: 445:Action : Shift and goto state 29
   yacc.py: 410:
   yacc.py: 411:State  : 29
   yacc.py: 430:Defaulted state 29: Reduce using 107
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC IDENTIFIER . None
   yacc.py: 469:Action : Reduce rule [FunctionName -> IDENTIFIER] with ['main'] and goto state 28
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5b0fd0> (<code.TreeNode object at 0x7f6fea5b0fd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 28
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName . LexToken(LROUND,'(',25,23)
   yacc.py: 445:Action : Shift and goto state 56
   yacc.py: 410:
   yacc.py: 411:State  : 56
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName LROUND . LexToken(RROUND,')',25,24)
   yacc.py: 445:Action : Shift and goto state 95
   yacc.py: 410:
   yacc.py: 411:State  : 95
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName LROUND RROUND . LexToken(LCURLY,'{',25,26)
   yacc.py: 469:Action : Reduce rule [Parameters -> LROUND RROUND] with ['(',')'] and goto state 55
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea577f40> (<code.TreeNode object at 0x7f6fea577f40>)
   yacc.py: 410:
   yacc.py: 411:State  : 55
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Parameters . LexToken(LCURLY,'{',25,26)
   yacc.py: 469:Action : Reduce rule [Signature -> Parameters] with [<TreeNode @ 0x7f6fea577f40>] and goto state 54
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea577f40> (<code.TreeNode object at 0x7f6fea577f40>)
   yacc.py: 410:
   yacc.py: 411:State  : 54
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature . LexToken(LCURLY,'{',25,26)
   yacc.py: 445:Action : Shift and goto state 90
   yacc.py: 410:
   yacc.py: 411:State  : 90
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY . LexToken(IDENTIFIER,'i',26,32)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY empty . LexToken(IDENTIFIER,'i',26,32)
   yacc.py: 469:Action : Reduce rule [ScopeStart -> empty] with [None] and goto state 155
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e340> (<code.TreeNode object at 0x7f6fea51e340>)
   yacc.py: 410:
   yacc.py: 411:State  : 155
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart . LexToken(IDENTIFIER,'i',26,32)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart IDENTIFIER . LexToken(ASSIGN_OP,':=',26,34)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e250> (<code.TreeNode object at 0x7f6fea51e250>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart PrimaryExpr . LexToken(ASSIGN_OP,':=',26,34)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea51e250>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e250> (<code.TreeNode object at 0x7f6fea51e250>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart UnaryExpr . LexToken(ASSIGN_OP,':=',26,34)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea51e250>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e250> (<code.TreeNode object at 0x7f6fea51e250>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression . LexToken(ASSIGN_OP,':=',26,34)
   yacc.py: 445:Action : Shift and goto state 275
   yacc.py: 410:
   yacc.py: 411:State  : 275
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP . LexToken(DECIMAL_LIT,'5',26,37)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP DECIMAL_LIT . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['5'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP decimal_lit . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea51e160>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP int_lit . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea51e160>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP BasicLit . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea51e160>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP Literal . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea51e160>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP Operand . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea51e160>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP PrimaryExpr . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea51e160>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP UnaryExpr . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea51e160>] and goto state 318
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e160> (<code.TreeNode object at 0x7f6fea51e160>)
   yacc.py: 410:
   yacc.py: 411:State  : 318
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Expression ASSIGN_OP Expression . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [ShortVarDecl -> Expression ASSIGN_OP Expression] with [<TreeNode @ 0x7f6fea51e250>,':=',<TreeNode @ 0x7f6fea51e160>] and goto state 220
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e550> (<code.TreeNode object at 0x7f6fea51e550>)
   yacc.py: 410:
   yacc.py: 411:State  : 220
   yacc.py: 430:Defaulted state 220: Reduce using 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart ShortVarDecl . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> ShortVarDecl] with [<TreeNode @ 0x7f6fea51e550>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e550> (<code.TreeNode object at 0x7f6fea51e550>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart SimpleStmt . LexToken(SEMICOLON,';',27,39)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea51e550>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e550> (<code.TreeNode object at 0x7f6fea51e550>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement . LexToken(SEMICOLON,';',27,39)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON . LexToken(SWITCH,'switch',27,43)
   yacc.py: 445:Action : Shift and goto state 231
   yacc.py: 410:
   yacc.py: 411:State  : 231
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH . LexToken(IDENTIFIER,'i',27,50)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH IDENTIFIER . LexToken(LCURLY,'{',27,52)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e7c0> (<code.TreeNode object at 0x7f6fea51e7c0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH PrimaryExpr . LexToken(LCURLY,'{',27,52)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea51e7c0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e7c0> (<code.TreeNode object at 0x7f6fea51e7c0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH UnaryExpr . LexToken(LCURLY,'{',27,52)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea51e7c0>] and goto state 303
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e7c0> (<code.TreeNode object at 0x7f6fea51e7c0>)
   yacc.py: 410:
   yacc.py: 411:State  : 303
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression . LexToken(LCURLY,'{',27,52)
   yacc.py: 445:Action : Shift and goto state 328
   yacc.py: 410:
   yacc.py: 411:State  : 328
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY . LexToken(CASE,'case',28,62)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 156
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 156
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY empty . LexToken(CASE,'case',28,62)
   yacc.py: 469:Action : Reduce rule [ScopeStart -> empty] with [None] and goto state 345
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51e940> (<code.TreeNode object at 0x7f6fea51e940>)
   yacc.py: 410:
   yacc.py: 411:State  : 345
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart . LexToken(CASE,'case',28,62)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 344
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 344
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart empty . LexToken(CASE,'case',28,62)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> empty] with [None] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51eaf0> (<code.TreeNode object at 0x7f6fea51eaf0>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(CASE,'case',28,62)
   yacc.py: 445:Action : Shift and goto state 356
   yacc.py: 410:
   yacc.py: 411:State  : 356
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE . LexToken(DECIMAL_LIT,'1',28,67)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE DECIMAL_LIT . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE decimal_lit . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea51ebb0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE int_lit . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea51ebb0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE BasicLit . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea51ebb0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Literal . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea51ebb0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Operand . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea51ebb0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE PrimaryExpr . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea51ebb0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE UnaryExpr . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea51ebb0>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ebb0> (<code.TreeNode object at 0x7f6fea51ebb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(COLON,':',28,68)
   yacc.py: 469:Action : Reduce rule [ExprSwitchCase -> CASE Expression] with ['case',<TreeNode @ 0x7f6fea51ebb0>] and goto state 355
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51edc0> (<code.TreeNode object at 0x7f6fea51edc0>)
   yacc.py: 410:
   yacc.py: 411:State  : 355
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase . LexToken(COLON,':',28,68)
   yacc.py: 445:Action : Shift and goto state 362
   yacc.py: 410:
   yacc.py: 411:State  : 362
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON . LexToken(IDENTIFIER,'i',29,82)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON IDENTIFIER . LexToken(PLUS_EQ,'+=',29,83)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ee80> (<code.TreeNode object at 0x7f6fea51ee80>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON PrimaryExpr . LexToken(PLUS_EQ,'+=',29,83)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea51ee80>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ee80> (<code.TreeNode object at 0x7f6fea51ee80>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON UnaryExpr . LexToken(PLUS_EQ,'+=',29,83)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea51ee80>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51ee80> (<code.TreeNode object at 0x7f6fea51ee80>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression . LexToken(PLUS_EQ,'+=',29,83)
   yacc.py: 445:Action : Shift and goto state 279
   yacc.py: 410:
   yacc.py: 411:State  : 279
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression PLUS_EQ . LexToken(DECIMAL_LIT,'1',29,85)
   yacc.py: 469:Action : Reduce rule [assign_op -> PLUS_EQ] with ['+='] and goto state 274
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea51efd0> (<code.TreeNode object at 0x7f6fea51efd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 274
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op . LexToken(DECIMAL_LIT,'1',29,85)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op DECIMAL_LIT . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op decimal_lit . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea49e0a0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op int_lit . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea49e0a0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op BasicLit . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea49e0a0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Literal . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea49e0a0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Operand . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea49e0a0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op PrimaryExpr . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea49e0a0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op UnaryExpr . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea49e0a0>] and goto state 317
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e0a0> (<code.TreeNode object at 0x7f6fea49e0a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 317
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Expression . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [Assignment -> Expression assign_op Expression] with [<TreeNode @ 0x7f6fea51ee80>,<TreeNode @ 0x7f6fea51efd0>,<TreeNode @ 0x7f6fea49e0a0>] and goto state 219
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e310> (<code.TreeNode object at 0x7f6fea49e310>)
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 430:Defaulted state 219: Reduce using 110
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Assignment . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> Assignment] with [<TreeNode @ 0x7f6fea49e310>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e310> (<code.TreeNode object at 0x7f6fea49e310>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON SimpleStmt . LexToken(SEMICOLON,';',30,87)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea49e310>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e310> (<code.TreeNode object at 0x7f6fea49e310>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement . LexToken(SEMICOLON,';',30,87)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON . LexToken(CASE,'case',30,95)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON empty . LexToken(CASE,'case',30,95)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e4f0> (<code.TreeNode object at 0x7f6fea49e4f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON StatementList . LexToken(CASE,'case',30,95)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea49e310>,';',<TreeNode @ 0x7f6fea49e4f0>] and goto state 368
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e5b0> (<code.TreeNode object at 0x7f6fea49e5b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 368
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON StatementList . LexToken(CASE,'case',30,95)
   yacc.py: 469:Action : Reduce rule [ExprCaseClause -> ExprSwitchCase COLON StatementList] with [<TreeNode @ 0x7f6fea51edc0>,':',<TreeNode @ 0x7f6fea49e5b0>] and goto state 354
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e5e0> (<code.TreeNode object at 0x7f6fea49e5e0>)
   yacc.py: 410:
   yacc.py: 411:State  : 354
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprCaseClause . LexToken(CASE,'case',30,95)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause] with [<TreeNode @ 0x7f6fea51eaf0>,<TreeNode @ 0x7f6fea49e5e0>] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e730> (<code.TreeNode object at 0x7f6fea49e730>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(CASE,'case',30,95)
   yacc.py: 445:Action : Shift and goto state 356
   yacc.py: 410:
   yacc.py: 411:State  : 356
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE . LexToken(DECIMAL_LIT,'1',30,100)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE DECIMAL_LIT . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE decimal_lit . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea49e790>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE int_lit . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea49e790>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE BasicLit . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea49e790>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Literal . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea49e790>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Operand . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea49e790>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE PrimaryExpr . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea49e790>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE UnaryExpr . LexToken(PLUS,'+',30,101)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea49e790>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49e790> (<code.TreeNode object at 0x7f6fea49e790>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(PLUS,'+',30,101)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS . LexToken(DECIMAL_LIT,'1',30,102)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS DECIMAL_LIT . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS decimal_lit . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea49ea00>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS int_lit . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea49ea00>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS BasicLit . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea49ea00>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Literal . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea49ea00>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Operand . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea49ea00>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS PrimaryExpr . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea49ea00>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS UnaryExpr . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea49ea00>] and goto state 241
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ea00> (<code.TreeNode object at 0x7f6fea49ea00>)
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Expression . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [Expression -> Expression PLUS Expression] with [<TreeNode @ 0x7f6fea49e790>,'+',<TreeNode @ 0x7f6fea49ea00>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ec10> (<code.TreeNode object at 0x7f6fea49ec10>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(COLON,':',30,103)
   yacc.py: 469:Action : Reduce rule [ExprSwitchCase -> CASE Expression] with ['case',<TreeNode @ 0x7f6fea49ec10>] and goto state 355
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ecd0> (<code.TreeNode object at 0x7f6fea49ecd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 355
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase . LexToken(COLON,':',30,103)
   yacc.py: 445:Action : Shift and goto state 362
   yacc.py: 410:
   yacc.py: 411:State  : 362
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON . LexToken(IDENTIFIER,'i',31,117)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON IDENTIFIER . LexToken(PLUS_EQ,'+=',31,118)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ed90> (<code.TreeNode object at 0x7f6fea49ed90>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON PrimaryExpr . LexToken(PLUS_EQ,'+=',31,118)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea49ed90>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ed90> (<code.TreeNode object at 0x7f6fea49ed90>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON UnaryExpr . LexToken(PLUS_EQ,'+=',31,118)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea49ed90>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ed90> (<code.TreeNode object at 0x7f6fea49ed90>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression . LexToken(PLUS_EQ,'+=',31,118)
   yacc.py: 445:Action : Shift and goto state 279
   yacc.py: 410:
   yacc.py: 411:State  : 279
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression PLUS_EQ . LexToken(DECIMAL_LIT,'11',31,120)
   yacc.py: 469:Action : Reduce rule [assign_op -> PLUS_EQ] with ['+='] and goto state 274
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49eee0> (<code.TreeNode object at 0x7f6fea49eee0>)
   yacc.py: 410:
   yacc.py: 411:State  : 274
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op . LexToken(DECIMAL_LIT,'11',31,120)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op DECIMAL_LIT . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['11'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op decimal_lit . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea49ef70>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op int_lit . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea49ef70>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op BasicLit . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea49ef70>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Literal . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea49ef70>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Operand . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea49ef70>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op PrimaryExpr . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea49ef70>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op UnaryExpr . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea49ef70>] and goto state 317
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea49ef70> (<code.TreeNode object at 0x7f6fea49ef70>)
   yacc.py: 410:
   yacc.py: 411:State  : 317
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Expression . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [Assignment -> Expression assign_op Expression] with [<TreeNode @ 0x7f6fea49ed90>,<TreeNode @ 0x7f6fea49eee0>,<TreeNode @ 0x7f6fea49ef70>] and goto state 219
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e220> (<code.TreeNode object at 0x7f6fea57e220>)
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 430:Defaulted state 219: Reduce using 110
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Assignment . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> Assignment] with [<TreeNode @ 0x7f6fea57e220>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e220> (<code.TreeNode object at 0x7f6fea57e220>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON SimpleStmt . LexToken(SEMICOLON,';',32,123)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea57e220>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e220> (<code.TreeNode object at 0x7f6fea57e220>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement . LexToken(SEMICOLON,';',32,123)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON . LexToken(CASE,'case',32,131)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON empty . LexToken(CASE,'case',32,131)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e3a0> (<code.TreeNode object at 0x7f6fea57e3a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON StatementList . LexToken(CASE,'case',32,131)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea57e220>,';',<TreeNode @ 0x7f6fea57e3a0>] and goto state 368
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e460> (<code.TreeNode object at 0x7f6fea57e460>)
   yacc.py: 410:
   yacc.py: 411:State  : 368
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON StatementList . LexToken(CASE,'case',32,131)
   yacc.py: 469:Action : Reduce rule [ExprCaseClause -> ExprSwitchCase COLON StatementList] with [<TreeNode @ 0x7f6fea49ecd0>,':',<TreeNode @ 0x7f6fea57e460>] and goto state 354
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e490> (<code.TreeNode object at 0x7f6fea57e490>)
   yacc.py: 410:
   yacc.py: 411:State  : 354
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprCaseClause . LexToken(CASE,'case',32,131)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause] with [<TreeNode @ 0x7f6fea49e730>,<TreeNode @ 0x7f6fea57e490>] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e5e0> (<code.TreeNode object at 0x7f6fea57e5e0>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(CASE,'case',32,131)
   yacc.py: 445:Action : Shift and goto state 356
   yacc.py: 410:
   yacc.py: 411:State  : 356
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE . LexToken(DECIMAL_LIT,'2',32,136)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE DECIMAL_LIT . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['2'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE decimal_lit . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea57e640>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE int_lit . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea57e640>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE BasicLit . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea57e640>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Literal . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea57e640>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Operand . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea57e640>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE PrimaryExpr . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea57e640>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE UnaryExpr . LexToken(PLUS,'+',32,137)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea57e640>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e640> (<code.TreeNode object at 0x7f6fea57e640>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(PLUS,'+',32,137)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS . LexToken(DECIMAL_LIT,'1',32,138)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS DECIMAL_LIT . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS decimal_lit . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea57e8b0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS int_lit . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea57e8b0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS BasicLit . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea57e8b0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Literal . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea57e8b0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Operand . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea57e8b0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS PrimaryExpr . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea57e8b0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS UnaryExpr . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea57e8b0>] and goto state 241
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57e8b0> (<code.TreeNode object at 0x7f6fea57e8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Expression . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [Expression -> Expression PLUS Expression] with [<TreeNode @ 0x7f6fea57e640>,'+',<TreeNode @ 0x7f6fea57e8b0>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57eac0> (<code.TreeNode object at 0x7f6fea57eac0>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(COLON,':',32,139)
   yacc.py: 469:Action : Reduce rule [ExprSwitchCase -> CASE Expression] with ['case',<TreeNode @ 0x7f6fea57eac0>] and goto state 355
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57eb80> (<code.TreeNode object at 0x7f6fea57eb80>)
   yacc.py: 410:
   yacc.py: 411:State  : 355
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase . LexToken(COLON,':',32,139)
   yacc.py: 445:Action : Shift and goto state 362
   yacc.py: 410:
   yacc.py: 411:State  : 362
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON . LexToken(IDENTIFIER,'i',33,153)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON IDENTIFIER . LexToken(PLUS_EQ,'+=',33,154)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ec40> (<code.TreeNode object at 0x7f6fea57ec40>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON PrimaryExpr . LexToken(PLUS_EQ,'+=',33,154)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea57ec40>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ec40> (<code.TreeNode object at 0x7f6fea57ec40>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON UnaryExpr . LexToken(PLUS_EQ,'+=',33,154)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea57ec40>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ec40> (<code.TreeNode object at 0x7f6fea57ec40>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression . LexToken(PLUS_EQ,'+=',33,154)
   yacc.py: 445:Action : Shift and goto state 279
   yacc.py: 410:
   yacc.py: 411:State  : 279
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression PLUS_EQ . LexToken(DECIMAL_LIT,'111',33,156)
   yacc.py: 469:Action : Reduce rule [assign_op -> PLUS_EQ] with ['+='] and goto state 274
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ed90> (<code.TreeNode object at 0x7f6fea57ed90>)
   yacc.py: 410:
   yacc.py: 411:State  : 274
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op . LexToken(DECIMAL_LIT,'111',33,156)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op DECIMAL_LIT . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['111'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op decimal_lit . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea57ee20>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op int_lit . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea57ee20>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op BasicLit . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea57ee20>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Literal . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea57ee20>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Operand . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea57ee20>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op PrimaryExpr . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea57ee20>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op UnaryExpr . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea57ee20>] and goto state 317
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea57ee20> (<code.TreeNode object at 0x7f6fea57ee20>)
   yacc.py: 410:
   yacc.py: 411:State  : 317
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Expression . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [Assignment -> Expression assign_op Expression] with [<TreeNode @ 0x7f6fea57ec40>,<TreeNode @ 0x7f6fea57ed90>,<TreeNode @ 0x7f6fea57ee20>] and goto state 219
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5900d0> (<code.TreeNode object at 0x7f6fea5900d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 430:Defaulted state 219: Reduce using 110
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Assignment . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> Assignment] with [<TreeNode @ 0x7f6fea5900d0>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5900d0> (<code.TreeNode object at 0x7f6fea5900d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON SimpleStmt . LexToken(SEMICOLON,';',34,160)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea5900d0>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5900d0> (<code.TreeNode object at 0x7f6fea5900d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement . LexToken(SEMICOLON,';',34,160)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON . LexToken(CASE,'case',34,168)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON empty . LexToken(CASE,'case',34,168)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590250> (<code.TreeNode object at 0x7f6fea590250>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON StatementList . LexToken(CASE,'case',34,168)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea5900d0>,';',<TreeNode @ 0x7f6fea590250>] and goto state 368
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590310> (<code.TreeNode object at 0x7f6fea590310>)
   yacc.py: 410:
   yacc.py: 411:State  : 368
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON StatementList . LexToken(CASE,'case',34,168)
   yacc.py: 469:Action : Reduce rule [ExprCaseClause -> ExprSwitchCase COLON StatementList] with [<TreeNode @ 0x7f6fea57eb80>,':',<TreeNode @ 0x7f6fea590310>] and goto state 354
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590340> (<code.TreeNode object at 0x7f6fea590340>)
   yacc.py: 410:
   yacc.py: 411:State  : 354
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprCaseClause . LexToken(CASE,'case',34,168)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause] with [<TreeNode @ 0x7f6fea57e5e0>,<TreeNode @ 0x7f6fea590340>] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590490> (<code.TreeNode object at 0x7f6fea590490>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(CASE,'case',34,168)
   yacc.py: 445:Action : Shift and goto state 356
   yacc.py: 410:
   yacc.py: 411:State  : 356
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE . LexToken(DECIMAL_LIT,'3',34,173)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE DECIMAL_LIT . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['3'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE decimal_lit . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea5904f0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE int_lit . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea5904f0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE BasicLit . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea5904f0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Literal . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea5904f0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Operand . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea5904f0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE PrimaryExpr . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea5904f0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE UnaryExpr . LexToken(PLUS,'+',34,174)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea5904f0>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5904f0> (<code.TreeNode object at 0x7f6fea5904f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(PLUS,'+',34,174)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS . LexToken(DECIMAL_LIT,'1',34,175)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS DECIMAL_LIT . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS decimal_lit . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea590760>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS int_lit . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea590760>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS BasicLit . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea590760>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Literal . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea590760>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Operand . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea590760>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS PrimaryExpr . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea590760>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS UnaryExpr . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea590760>] and goto state 241
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590760> (<code.TreeNode object at 0x7f6fea590760>)
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Expression . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [Expression -> Expression PLUS Expression] with [<TreeNode @ 0x7f6fea5904f0>,'+',<TreeNode @ 0x7f6fea590760>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590970> (<code.TreeNode object at 0x7f6fea590970>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(COLON,':',34,176)
   yacc.py: 469:Action : Reduce rule [ExprSwitchCase -> CASE Expression] with ['case',<TreeNode @ 0x7f6fea590970>] and goto state 355
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590a30> (<code.TreeNode object at 0x7f6fea590a30>)
   yacc.py: 410:
   yacc.py: 411:State  : 355
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase . LexToken(COLON,':',34,176)
   yacc.py: 445:Action : Shift and goto state 362
   yacc.py: 410:
   yacc.py: 411:State  : 362
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON . LexToken(IDENTIFIER,'i',35,190)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON IDENTIFIER . LexToken(PLUS_EQ,'+=',35,191)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590af0> (<code.TreeNode object at 0x7f6fea590af0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON PrimaryExpr . LexToken(PLUS_EQ,'+=',35,191)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea590af0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590af0> (<code.TreeNode object at 0x7f6fea590af0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON UnaryExpr . LexToken(PLUS_EQ,'+=',35,191)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea590af0>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590af0> (<code.TreeNode object at 0x7f6fea590af0>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression . LexToken(PLUS_EQ,'+=',35,191)
   yacc.py: 445:Action : Shift and goto state 279
   yacc.py: 410:
   yacc.py: 411:State  : 279
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression PLUS_EQ . LexToken(DECIMAL_LIT,'1111',35,193)
   yacc.py: 469:Action : Reduce rule [assign_op -> PLUS_EQ] with ['+='] and goto state 274
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590c40> (<code.TreeNode object at 0x7f6fea590c40>)
   yacc.py: 410:
   yacc.py: 411:State  : 274
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op . LexToken(DECIMAL_LIT,'1111',35,193)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op DECIMAL_LIT . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1111'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op decimal_lit . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea590cd0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op int_lit . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea590cd0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op BasicLit . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea590cd0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Literal . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea590cd0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Operand . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea590cd0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op PrimaryExpr . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea590cd0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op UnaryExpr . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea590cd0>] and goto state 317
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590cd0> (<code.TreeNode object at 0x7f6fea590cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 317
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Expression . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [Assignment -> Expression assign_op Expression] with [<TreeNode @ 0x7f6fea590af0>,<TreeNode @ 0x7f6fea590c40>,<TreeNode @ 0x7f6fea590cd0>] and goto state 219
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590f40> (<code.TreeNode object at 0x7f6fea590f40>)
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 430:Defaulted state 219: Reduce using 110
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Assignment . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> Assignment] with [<TreeNode @ 0x7f6fea590f40>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590f40> (<code.TreeNode object at 0x7f6fea590f40>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON SimpleStmt . LexToken(SEMICOLON,';',36,198)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea590f40>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea590f40> (<code.TreeNode object at 0x7f6fea590f40>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement . LexToken(SEMICOLON,';',36,198)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON . LexToken(CASE,'case',36,206)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON empty . LexToken(CASE,'case',36,206)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593100> (<code.TreeNode object at 0x7f6fea593100>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON StatementList . LexToken(CASE,'case',36,206)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea590f40>,';',<TreeNode @ 0x7f6fea593100>] and goto state 368
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5931c0> (<code.TreeNode object at 0x7f6fea5931c0>)
   yacc.py: 410:
   yacc.py: 411:State  : 368
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON StatementList . LexToken(CASE,'case',36,206)
   yacc.py: 469:Action : Reduce rule [ExprCaseClause -> ExprSwitchCase COLON StatementList] with [<TreeNode @ 0x7f6fea590a30>,':',<TreeNode @ 0x7f6fea5931c0>] and goto state 354
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5931f0> (<code.TreeNode object at 0x7f6fea5931f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 354
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprCaseClause . LexToken(CASE,'case',36,206)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause] with [<TreeNode @ 0x7f6fea590490>,<TreeNode @ 0x7f6fea5931f0>] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593340> (<code.TreeNode object at 0x7f6fea593340>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(CASE,'case',36,206)
   yacc.py: 445:Action : Shift and goto state 356
   yacc.py: 410:
   yacc.py: 411:State  : 356
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE . LexToken(DECIMAL_LIT,'4',36,211)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE DECIMAL_LIT . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['4'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE decimal_lit . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea5933a0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE int_lit . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea5933a0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE BasicLit . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea5933a0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Literal . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea5933a0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Operand . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea5933a0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE PrimaryExpr . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea5933a0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE UnaryExpr . LexToken(PLUS,'+',36,212)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea5933a0>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5933a0> (<code.TreeNode object at 0x7f6fea5933a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(PLUS,'+',36,212)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS . LexToken(DECIMAL_LIT,'1',36,213)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS DECIMAL_LIT . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS decimal_lit . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea593610>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS int_lit . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea593610>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS BasicLit . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea593610>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Literal . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea593610>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Operand . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea593610>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS PrimaryExpr . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea593610>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS UnaryExpr . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea593610>] and goto state 241
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593610> (<code.TreeNode object at 0x7f6fea593610>)
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Expression . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [Expression -> Expression PLUS Expression] with [<TreeNode @ 0x7f6fea5933a0>,'+',<TreeNode @ 0x7f6fea593610>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593820> (<code.TreeNode object at 0x7f6fea593820>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(COLON,':',36,214)
   yacc.py: 469:Action : Reduce rule [ExprSwitchCase -> CASE Expression] with ['case',<TreeNode @ 0x7f6fea593820>] and goto state 355
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5938e0> (<code.TreeNode object at 0x7f6fea5938e0>)
   yacc.py: 410:
   yacc.py: 411:State  : 355
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase . LexToken(COLON,':',36,214)
   yacc.py: 445:Action : Shift and goto state 362
   yacc.py: 410:
   yacc.py: 411:State  : 362
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON . LexToken(IDENTIFIER,'i',37,228)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON IDENTIFIER . LexToken(PLUS_EQ,'+=',37,229)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5939a0> (<code.TreeNode object at 0x7f6fea5939a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON PrimaryExpr . LexToken(PLUS_EQ,'+=',37,229)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea5939a0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5939a0> (<code.TreeNode object at 0x7f6fea5939a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON UnaryExpr . LexToken(PLUS_EQ,'+=',37,229)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea5939a0>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5939a0> (<code.TreeNode object at 0x7f6fea5939a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression . LexToken(PLUS_EQ,'+=',37,229)
   yacc.py: 445:Action : Shift and goto state 279
   yacc.py: 410:
   yacc.py: 411:State  : 279
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression PLUS_EQ . LexToken(DECIMAL_LIT,'11111',37,231)
   yacc.py: 469:Action : Reduce rule [assign_op -> PLUS_EQ] with ['+='] and goto state 274
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593af0> (<code.TreeNode object at 0x7f6fea593af0>)
   yacc.py: 410:
   yacc.py: 411:State  : 274
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op . LexToken(DECIMAL_LIT,'11111',37,231)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op DECIMAL_LIT . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['11111'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op decimal_lit . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea593b80>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op int_lit . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea593b80>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op BasicLit . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea593b80>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Literal . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea593b80>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Operand . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea593b80>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op PrimaryExpr . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea593b80>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op UnaryExpr . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea593b80>] and goto state 317
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593b80> (<code.TreeNode object at 0x7f6fea593b80>)
   yacc.py: 410:
   yacc.py: 411:State  : 317
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Expression . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [Assignment -> Expression assign_op Expression] with [<TreeNode @ 0x7f6fea5939a0>,<TreeNode @ 0x7f6fea593af0>,<TreeNode @ 0x7f6fea593b80>] and goto state 219
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593df0> (<code.TreeNode object at 0x7f6fea593df0>)
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 430:Defaulted state 219: Reduce using 110
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Assignment . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> Assignment] with [<TreeNode @ 0x7f6fea593df0>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593df0> (<code.TreeNode object at 0x7f6fea593df0>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON SimpleStmt . LexToken(SEMICOLON,';',38,237)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea593df0>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593df0> (<code.TreeNode object at 0x7f6fea593df0>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement . LexToken(SEMICOLON,';',38,237)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON . LexToken(CASE,'case',38,245)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON empty . LexToken(CASE,'case',38,245)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea593f70> (<code.TreeNode object at 0x7f6fea593f70>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON StatementList . LexToken(CASE,'case',38,245)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea593df0>,';',<TreeNode @ 0x7f6fea593f70>] and goto state 368
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584070> (<code.TreeNode object at 0x7f6fea584070>)
   yacc.py: 410:
   yacc.py: 411:State  : 368
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON StatementList . LexToken(CASE,'case',38,245)
   yacc.py: 469:Action : Reduce rule [ExprCaseClause -> ExprSwitchCase COLON StatementList] with [<TreeNode @ 0x7f6fea5938e0>,':',<TreeNode @ 0x7f6fea584070>] and goto state 354
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5840a0> (<code.TreeNode object at 0x7f6fea5840a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 354
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprCaseClause . LexToken(CASE,'case',38,245)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause] with [<TreeNode @ 0x7f6fea593340>,<TreeNode @ 0x7f6fea5840a0>] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584220> (<code.TreeNode object at 0x7f6fea584220>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(CASE,'case',38,245)
   yacc.py: 445:Action : Shift and goto state 356
   yacc.py: 410:
   yacc.py: 411:State  : 356
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE . LexToken(DECIMAL_LIT,'5',38,250)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE DECIMAL_LIT . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['5'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE decimal_lit . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea584280>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE int_lit . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea584280>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE BasicLit . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea584280>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Literal . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea584280>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Operand . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea584280>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE PrimaryExpr . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea584280>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE UnaryExpr . LexToken(PLUS,'+',38,251)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea584280>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584280> (<code.TreeNode object at 0x7f6fea584280>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(PLUS,'+',38,251)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS . LexToken(DECIMAL_LIT,'1',38,252)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS DECIMAL_LIT . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS decimal_lit . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea5844f0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS int_lit . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea5844f0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS BasicLit . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea5844f0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Literal . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea5844f0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Operand . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea5844f0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS PrimaryExpr . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea5844f0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS UnaryExpr . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea5844f0>] and goto state 241
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5844f0> (<code.TreeNode object at 0x7f6fea5844f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Expression . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [Expression -> Expression PLUS Expression] with [<TreeNode @ 0x7f6fea584280>,'+',<TreeNode @ 0x7f6fea5844f0>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584700> (<code.TreeNode object at 0x7f6fea584700>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(COLON,':',38,253)
   yacc.py: 469:Action : Reduce rule [ExprSwitchCase -> CASE Expression] with ['case',<TreeNode @ 0x7f6fea584700>] and goto state 355
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5847c0> (<code.TreeNode object at 0x7f6fea5847c0>)
   yacc.py: 410:
   yacc.py: 411:State  : 355
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase . LexToken(COLON,':',38,253)
   yacc.py: 445:Action : Shift and goto state 362
   yacc.py: 410:
   yacc.py: 411:State  : 362
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON . LexToken(IDENTIFIER,'i',39,267)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON IDENTIFIER . LexToken(PLUS_EQ,'+=',39,268)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584880> (<code.TreeNode object at 0x7f6fea584880>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON PrimaryExpr . LexToken(PLUS_EQ,'+=',39,268)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea584880>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584880> (<code.TreeNode object at 0x7f6fea584880>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON UnaryExpr . LexToken(PLUS_EQ,'+=',39,268)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea584880>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584880> (<code.TreeNode object at 0x7f6fea584880>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression . LexToken(PLUS_EQ,'+=',39,268)
   yacc.py: 445:Action : Shift and goto state 279
   yacc.py: 410:
   yacc.py: 411:State  : 279
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression PLUS_EQ . LexToken(DECIMAL_LIT,'111111',39,270)
   yacc.py: 469:Action : Reduce rule [assign_op -> PLUS_EQ] with ['+='] and goto state 274
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5849d0> (<code.TreeNode object at 0x7f6fea5849d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 274
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op . LexToken(DECIMAL_LIT,'111111',39,270)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op DECIMAL_LIT . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['111111'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op decimal_lit . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea584a60>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op int_lit . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea584a60>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op BasicLit . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea584a60>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Literal . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea584a60>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Operand . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea584a60>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op PrimaryExpr . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea584a60>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op UnaryExpr . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea584a60>] and goto state 317
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584a60> (<code.TreeNode object at 0x7f6fea584a60>)
   yacc.py: 410:
   yacc.py: 411:State  : 317
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Expression . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [Assignment -> Expression assign_op Expression] with [<TreeNode @ 0x7f6fea584880>,<TreeNode @ 0x7f6fea5849d0>,<TreeNode @ 0x7f6fea584a60>] and goto state 219
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584cd0> (<code.TreeNode object at 0x7f6fea584cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 430:Defaulted state 219: Reduce using 110
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Assignment . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> Assignment] with [<TreeNode @ 0x7f6fea584cd0>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584cd0> (<code.TreeNode object at 0x7f6fea584cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON SimpleStmt . LexToken(SEMICOLON,';',40,277)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea584cd0>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584cd0> (<code.TreeNode object at 0x7f6fea584cd0>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement . LexToken(SEMICOLON,';',40,277)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON . LexToken(CASE,'case',40,285)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON empty . LexToken(CASE,'case',40,285)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584e50> (<code.TreeNode object at 0x7f6fea584e50>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON StatementList . LexToken(CASE,'case',40,285)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea584cd0>,';',<TreeNode @ 0x7f6fea584e50>] and goto state 368
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584f10> (<code.TreeNode object at 0x7f6fea584f10>)
   yacc.py: 410:
   yacc.py: 411:State  : 368
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON StatementList . LexToken(CASE,'case',40,285)
   yacc.py: 469:Action : Reduce rule [ExprCaseClause -> ExprSwitchCase COLON StatementList] with [<TreeNode @ 0x7f6fea5847c0>,':',<TreeNode @ 0x7f6fea584f10>] and goto state 354
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea584f40> (<code.TreeNode object at 0x7f6fea584f40>)
   yacc.py: 410:
   yacc.py: 411:State  : 354
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprCaseClause . LexToken(CASE,'case',40,285)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause] with [<TreeNode @ 0x7f6fea584220>,<TreeNode @ 0x7f6fea584f40>] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587100> (<code.TreeNode object at 0x7f6fea587100>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(CASE,'case',40,285)
   yacc.py: 445:Action : Shift and goto state 356
   yacc.py: 410:
   yacc.py: 411:State  : 356
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE . LexToken(DECIMAL_LIT,'6',40,290)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE DECIMAL_LIT . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['6'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE decimal_lit . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea587160>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE int_lit . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea587160>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE BasicLit . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea587160>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Literal . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea587160>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Operand . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea587160>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE PrimaryExpr . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea587160>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE UnaryExpr . LexToken(PLUS,'+',40,291)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea587160>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587160> (<code.TreeNode object at 0x7f6fea587160>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(PLUS,'+',40,291)
   yacc.py: 445:Action : Shift and goto state 171
   yacc.py: 410:
   yacc.py: 411:State  : 171
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS . LexToken(DECIMAL_LIT,'1',40,292)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS DECIMAL_LIT . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS decimal_lit . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea5873d0>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS int_lit . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea5873d0>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS BasicLit . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea5873d0>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Literal . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea5873d0>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Operand . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea5873d0>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS PrimaryExpr . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea5873d0>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS UnaryExpr . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea5873d0>] and goto state 241
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5873d0> (<code.TreeNode object at 0x7f6fea5873d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 241
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression PLUS Expression . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [Expression -> Expression PLUS Expression] with [<TreeNode @ 0x7f6fea587160>,'+',<TreeNode @ 0x7f6fea5873d0>] and goto state 364
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5875e0> (<code.TreeNode object at 0x7f6fea5875e0>)
   yacc.py: 410:
   yacc.py: 411:State  : 364
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList CASE Expression . LexToken(COLON,':',40,293)
   yacc.py: 469:Action : Reduce rule [ExprSwitchCase -> CASE Expression] with ['case',<TreeNode @ 0x7f6fea5875e0>] and goto state 355
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5876a0> (<code.TreeNode object at 0x7f6fea5876a0>)
   yacc.py: 410:
   yacc.py: 411:State  : 355
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase . LexToken(COLON,':',40,293)
   yacc.py: 445:Action : Shift and goto state 362
   yacc.py: 410:
   yacc.py: 411:State  : 362
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON . LexToken(IDENTIFIER,'i',41,307)
   yacc.py: 445:Action : Shift and goto state 103
   yacc.py: 410:
   yacc.py: 411:State  : 103
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON IDENTIFIER . LexToken(PLUS_EQ,'+=',41,308)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> IDENTIFIER] with ['i'] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587760> (<code.TreeNode object at 0x7f6fea587760>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON PrimaryExpr . LexToken(PLUS_EQ,'+=',41,308)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea587760>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587760> (<code.TreeNode object at 0x7f6fea587760>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON UnaryExpr . LexToken(PLUS_EQ,'+=',41,308)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea587760>] and goto state 218
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587760> (<code.TreeNode object at 0x7f6fea587760>)
   yacc.py: 410:
   yacc.py: 411:State  : 218
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression . LexToken(PLUS_EQ,'+=',41,308)
   yacc.py: 445:Action : Shift and goto state 279
   yacc.py: 410:
   yacc.py: 411:State  : 279
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression PLUS_EQ . LexToken(DECIMAL_LIT,'1111111',41,310)
   yacc.py: 469:Action : Reduce rule [assign_op -> PLUS_EQ] with ['+='] and goto state 274
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea5878b0> (<code.TreeNode object at 0x7f6fea5878b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 274
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op . LexToken(DECIMAL_LIT,'1111111',41,310)
   yacc.py: 445:Action : Shift and goto state 130
   yacc.py: 410:
   yacc.py: 411:State  : 130
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op DECIMAL_LIT . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [decimal_lit -> DECIMAL_LIT] with ['1111111'] and goto state 125
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 125
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op decimal_lit . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [int_lit -> decimal_lit] with [<TreeNode @ 0x7f6fea587940>] and goto state 120
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 120
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op int_lit . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [BasicLit -> int_lit] with [<TreeNode @ 0x7f6fea587940>] and goto state 118
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 118
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op BasicLit . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [Literal -> BasicLit] with [<TreeNode @ 0x7f6fea587940>] and goto state 116
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 116
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Literal . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [Operand -> Literal] with [<TreeNode @ 0x7f6fea587940>] and goto state 113
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 113
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Operand . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [PrimaryExpr -> Operand] with [<TreeNode @ 0x7f6fea587940>] and goto state 111
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 111
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op PrimaryExpr . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [UnaryExpr -> PrimaryExpr] with [<TreeNode @ 0x7f6fea587940>] and goto state 105
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 105
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op UnaryExpr . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [Expression -> UnaryExpr] with [<TreeNode @ 0x7f6fea587940>] and goto state 317
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587940> (<code.TreeNode object at 0x7f6fea587940>)
   yacc.py: 410:
   yacc.py: 411:State  : 317
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Expression assign_op Expression . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [Assignment -> Expression assign_op Expression] with [<TreeNode @ 0x7f6fea587760>,<TreeNode @ 0x7f6fea5878b0>,<TreeNode @ 0x7f6fea587940>] and goto state 219
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587bb0> (<code.TreeNode object at 0x7f6fea587bb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 219
   yacc.py: 430:Defaulted state 219: Reduce using 110
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Assignment . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [SimpleStmt -> Assignment] with [<TreeNode @ 0x7f6fea587bb0>] and goto state 207
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587bb0> (<code.TreeNode object at 0x7f6fea587bb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 207
   yacc.py: 430:Defaulted state 207: Reduce using 21
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON SimpleStmt . LexToken(SEMICOLON,';',42,318)
   yacc.py: 469:Action : Reduce rule [Statement -> SimpleStmt] with [<TreeNode @ 0x7f6fea587bb0>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587bb0> (<code.TreeNode object at 0x7f6fea587bb0>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement . LexToken(SEMICOLON,';',42,318)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON . LexToken(RCURLY,'}',42,322)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON empty . LexToken(RCURLY,'}',42,322)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587d60> (<code.TreeNode object at 0x7f6fea587d60>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON Statement SEMICOLON StatementList . LexToken(RCURLY,'}',42,322)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea587bb0>,';',<TreeNode @ 0x7f6fea587d60>] and goto state 368
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587e20> (<code.TreeNode object at 0x7f6fea587e20>)
   yacc.py: 410:
   yacc.py: 411:State  : 368
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprSwitchCase COLON StatementList . LexToken(RCURLY,'}',42,322)
   yacc.py: 469:Action : Reduce rule [ExprCaseClause -> ExprSwitchCase COLON StatementList] with [<TreeNode @ 0x7f6fea5876a0>,':',<TreeNode @ 0x7f6fea587e20>] and goto state 354
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587e50> (<code.TreeNode object at 0x7f6fea587e50>)
   yacc.py: 410:
   yacc.py: 411:State  : 354
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ExprCaseClause . LexToken(RCURLY,'}',42,322)
   yacc.py: 469:Action : Reduce rule [ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause] with [<TreeNode @ 0x7f6fea587100>,<TreeNode @ 0x7f6fea587e50>] and goto state 358
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea587fa0> (<code.TreeNode object at 0x7f6fea587fa0>)
   yacc.py: 410:
   yacc.py: 411:State  : 358
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList . LexToken(RCURLY,'}',42,322)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 272
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 272
   yacc.py: 430:Defaulted state 272: Reduce using 17
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList empty . LexToken(RCURLY,'}',42,322)
   yacc.py: 469:Action : Reduce rule [ScopeEnd -> empty] with [None] and goto state 365
   yacc.py: 506:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 365
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd . LexToken(RCURLY,'}',42,322)
   yacc.py: 445:Action : Shift and goto state 369
   yacc.py: 410:
   yacc.py: 411:State  : 369
   yacc.py: 430:Defaulted state 369: Reduce using 139
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY . None
   yacc.py: 469:Action : Reduce rule [ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY] with ['switch',<TreeNode @ 0x7f6fea51e7c0>,'{',<TreeNode @ 0x7f6fea51e940>,<TreeNode @ 0x7f6fea587fa0>,None,'}'] and goto state 225
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd040> (<code.TreeNode object at 0x7f6fea4cd040>)
   yacc.py: 410:
   yacc.py: 411:State  : 225
   yacc.py: 430:Defaulted state 225: Reduce using 135
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON ExprSwitchStmt . None
   yacc.py: 469:Action : Reduce rule [SwitchStmt -> ExprSwitchStmt] with [<TreeNode @ 0x7f6fea4cd040>] and goto state 211
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd0d0> (<code.TreeNode object at 0x7f6fea4cd0d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 211
   yacc.py: 430:Defaulted state 211: Reduce using 25
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON SwitchStmt . None
   yacc.py: 469:Action : Reduce rule [Statement -> SwitchStmt] with [<TreeNode @ 0x7f6fea4cd0d0>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd0d0> (<code.TreeNode object at 0x7f6fea4cd0d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement . LexToken(SEMICOLON,';',43,324)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON . LexToken(PRINTLN,'Println',43,328)
   yacc.py: 445:Action : Shift and goto state 230
   yacc.py: 410:
   yacc.py: 411:State  : 230
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON PRINTLN . LexToken(LROUND,'(',43,335)
   yacc.py: 445:Action : Shift and goto state 300
   yacc.py: 410:
   yacc.py: 411:State  : 300
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON PRINTLN LROUND . LexToken(IDENTIFIER,'i',43,336)
   yacc.py: 445:Action : Shift and goto state 323
   yacc.py: 410:
   yacc.py: 411:State  : 323
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON PRINTLN LROUND IDENTIFIER . LexToken(RROUND,')',43,337)
   yacc.py: 445:Action : Shift and goto state 338
   yacc.py: 410:
   yacc.py: 411:State  : 338
   yacc.py: 430:Defaulted state 338: Reduce using 32
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON PRINTLN LROUND IDENTIFIER RROUND . None
   yacc.py: 469:Action : Reduce rule [PrintIntStmt -> PRINTLN LROUND IDENTIFIER RROUND] with ['Println','(','i',')'] and goto state 216
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd310> (<code.TreeNode object at 0x7f6fea4cd310>)
   yacc.py: 410:
   yacc.py: 411:State  : 216
   yacc.py: 430:Defaulted state 216: Reduce using 30
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON PrintIntStmt . None
   yacc.py: 469:Action : Reduce rule [Statement -> PrintIntStmt] with [<TreeNode @ 0x7f6fea4cd310>] and goto state 204
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd310> (<code.TreeNode object at 0x7f6fea4cd310>)
   yacc.py: 410:
   yacc.py: 411:State  : 204
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON Statement . LexToken(SEMICOLON,';',44,339)
   yacc.py: 445:Action : Shift and goto state 273
   yacc.py: 410:
   yacc.py: 411:State  : 273
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON . LexToken(RCURLY,'}',44,339)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 205
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 205
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON empty . LexToken(RCURLY,'}',44,339)
   yacc.py: 469:Action : Reduce rule [StatementList -> empty] with [None] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd2b0> (<code.TreeNode object at 0x7f6fea4cd2b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RCURLY,'}',44,339)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea4cd310>,';',<TreeNode @ 0x7f6fea4cd2b0>] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd460> (<code.TreeNode object at 0x7f6fea4cd460>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON Statement SEMICOLON StatementList . LexToken(RCURLY,'}',44,339)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea4cd0d0>,';',<TreeNode @ 0x7f6fea4cd460>] and goto state 316
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd490> (<code.TreeNode object at 0x7f6fea4cd490>)
   yacc.py: 410:
   yacc.py: 411:State  : 316
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart Statement SEMICOLON StatementList . LexToken(RCURLY,'}',44,339)
   yacc.py: 469:Action : Reduce rule [StatementList -> Statement SEMICOLON StatementList] with [<TreeNode @ 0x7f6fea51e550>,';',<TreeNode @ 0x7f6fea4cd490>] and goto state 203
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd4f0> (<code.TreeNode object at 0x7f6fea4cd4f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 203
   yacc.py: 430:Defaulted state 203: Reduce using 214
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart StatementList . LexToken(RCURLY,'}',44,339)
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 272
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 272
   yacc.py: 430:Defaulted state 272: Reduce using 17
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart StatementList empty . LexToken(RCURLY,'}',44,339)
   yacc.py: 469:Action : Reduce rule [ScopeEnd -> empty] with [None] and goto state 271
   yacc.py: 506:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 271
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart StatementList ScopeEnd . LexToken(RCURLY,'}',44,339)
   yacc.py: 445:Action : Shift and goto state 315
   yacc.py: 410:
   yacc.py: 411:State  : 315
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature LCURLY ScopeStart StatementList ScopeEnd RCURLY . LexToken(SEMICOLON,';',45,341)
   yacc.py: 469:Action : Reduce rule [Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY] with ['{',<TreeNode @ 0x7f6fea51e340>,<TreeNode @ 0x7f6fea4cd4f0>,None,'}'] and goto state 89
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd4f0> (<code.TreeNode object at 0x7f6fea4cd4f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 89
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature Block . LexToken(SEMICOLON,';',45,341)
   yacc.py: 469:Action : Reduce rule [FunctionBody -> Block] with [<TreeNode @ 0x7f6fea4cd4f0>] and goto state 88
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd4f0> (<code.TreeNode object at 0x7f6fea4cd4f0>)
   yacc.py: 410:
   yacc.py: 411:State  : 88
   yacc.py: 430:Defaulted state 88: Reduce using 106
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FUNC FunctionName Signature FunctionBody . LexToken(SEMICOLON,';',45,341)
   yacc.py: 469:Action : Reduce rule [FunctionDecl -> FUNC FunctionName Signature FunctionBody] with ['func',<TreeNode @ 0x7f6fea5b0fd0>,<TreeNode @ 0x7f6fea577f40>,<TreeNode @ 0x7f6fea4cd4f0>] and goto state 13
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd6d0> (<code.TreeNode object at 0x7f6fea4cd6d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 13
   yacc.py: 430:Defaulted state 13: Reduce using 7
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList FunctionDecl . LexToken(SEMICOLON,';',45,341)
   yacc.py: 469:Action : Reduce rule [TopLevelDecl -> FunctionDecl] with [<TreeNode @ 0x7f6fea4cd6d0>] and goto state 10
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd6d0> (<code.TreeNode object at 0x7f6fea4cd6d0>)
   yacc.py: 410:
   yacc.py: 411:State  : 10
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDecl . LexToken(SEMICOLON,';',45,341)
   yacc.py: 445:Action : Shift and goto state 27
   yacc.py: 410:
   yacc.py: 411:State  : 27
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDecl SEMICOLON . $end
   yacc.py: 473:Action : Reduce rule [empty -> <empty>] with [] and goto state 11
   yacc.py: 548:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 11
   yacc.py: 430:Defaulted state 11: Reduce using 5
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDecl SEMICOLON empty . $end
   yacc.py: 469:Action : Reduce rule [TopLevelDeclList -> empty] with [None] and goto state 53
   yacc.py: 506:Result : <NoneType @ 0x8d11c0> (None)
   yacc.py: 410:
   yacc.py: 411:State  : 53
   yacc.py: 430:Defaulted state 53: Reduce using 4
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDecl SEMICOLON TopLevelDeclList . $end
   yacc.py: 469:Action : Reduce rule [TopLevelDeclList -> TopLevelDecl SEMICOLON TopLevelDeclList] with [<TreeNode @ 0x7f6fea4cd6d0>,';',None] and goto state 9
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd8b0> (<code.TreeNode object at 0x7f6fea4cd8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 9
   yacc.py: 430:Defaulted state 9: Reduce using 1
   yacc.py: 434:Stack  : PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList . $end
   yacc.py: 469:Action : Reduce rule [SourceFile -> PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList] with ['package','main',';',None,<TreeNode @ 0x7f6fea4cd8b0>] and goto state 1
   yacc.py: 506:Result : <TreeNode @ 0x7f6fea4cd8b0> (<code.TreeNode object at 0x7f6fea4cd8b0>)
   yacc.py: 410:
   yacc.py: 411:State  : 1
   yacc.py: 434:Stack  : SourceFile . $end
   yacc.py: 571:Done   : Returning <TreeNode @ 0x7f6fea4cd8b0> (<code.TreeNode object at 0x7f6fea4cd8b0>)
   yacc.py: 572:PLY: PARSE DEBUG END
