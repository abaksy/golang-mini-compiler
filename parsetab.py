
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftIDENTIFIERrightASSIGN_OPleftCOMMAleftLSQUAREleftRSQUAREleftLCURLYleftRCURLYleftDDDleftDOTleftSEMICOLONleftCOLONleftSINGLE_QUOTESleftDOUBLE_QUOTESleftDECIMAL_LITleftOCTAL_LITleftHEX_LITleftFLOAT_LITleftSTRING_LITleftNEWLINEleftBREAKleftCONTINUEleftRETURNleftRROUNDleftLROUNDleftOR_ORleftAMP_AMPleftEQ_EQNOT_EQLTLT_EQGTGT_EQleftPLUSMINUSORCARETleftSTARDIVIDEMODULOAMPAND_ORLSRSAMP AMP_AMP AMP_EQ AND_OR AND_OR_EQ ASSIGN_OP BREAK CARET CARET_EQ CASE COLON COMMA CONST CONTINUE DDD DECIMAL_LIT DEFAULT DIVIDE DIVIDE_EQ DOT DOUBLE_QUOTES ELSE EQ EQ_EQ FALSE FLOAT_LIT FOR FUNC GO GOTO GT GT_EQ HEX_LIT IDENTIFIER IF IMPORT LCURLY LROUND LS LSQUARE LS_EQ LT LT_EQ LT_MINUS MINUS MINUS_EQ MINUS_MINUS MODULO MODULO_EQ NEWLINE NIL NOT NOT_EQ OCTAL_LIT OR OR_EQ OR_OR PACKAGE PLUS PLUS_EQ PLUS_PLUS PREDEFINED_TYPES PRINTLN RCURLY RETURN RROUND RS RSQUARE RS_EQ RUNE_LIT SELECT SEMICOLON SINGLE_QUOTES STAR STAR_EQ STRING_LIT STRUCT SWITCH TRUE TYPE VARSourceFile : PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList\n    ImportDeclList : ImportDecl SEMICOLON ImportDeclList\n                      | empty\n    TopLevelDeclList : TopLevelDecl SEMICOLON TopLevelDeclList\n                        | empty\n    TopLevelDecl : Declaration\n                    | FunctionDecl\n    ImportDecl : IMPORT LROUND ImportSpecList RROUND\n                  | IMPORT ImportSpec\n    ImportSpecList : ImportSpec SEMICOLON ImportSpecList\n                      | empty\n    ImportSpec : DOT string_lit\n                  | IDENTIFIER string_lit\n                  | empty string_lit\n    Block : LCURLY ScopeStart StatementList ScopeEnd RCURLY\n    ScopeStart : empty\n    ScopeEnd : empty\n    StatementList : Statement SEMICOLON StatementList\n                     | empty\n    Statement : Declaration\n                 | SimpleStmt\n                 | ReturnStmt\n                 | Block\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n                 | PrintIntStmt\n                 | PrintStrStmt\n    PrintIntStmt : PRINTLN LROUND IDENTIFIER RROUND\n                    | PRINTLN LROUND int_lit RROUND\n    PrintStrStmt : PRINTLN LROUND string_lit RROUND\n    Declaration : ConstDecl\n                   | TypeDecl\n                   | VarDecl\n    ConstDecl : CONST LROUND ConstSpecList RROUND\n                 | CONST ConstSpec\n    ConstSpecList : empty\n                     | ConstSpecList ConstSpec SEMICOLON\n    ConstSpec : IDENTIFIER\n                 | IdentifierList\n                 | IDENTIFIER EQ Expression\n                 | IdentifierList EQ ExpressionList\n                 | IDENTIFIER Type EQ Expression\n                 | IdentifierList Type EQ ExpressionList\n    IdentifierList : IDENTIFIER COMMA IdentifierBotList\n    IdentifierBotList : IDENTIFIER COMMA IdentifierBotList\n                         | IDENTIFIER\n    ExpressionList : Expression COMMA ExpressionBotList\n    ExpressionBotList : Expression COMMA ExpressionBotList\n                         | Expression\n    TypeDecl : TYPE TypeSpecTopList\n    TypeSpecTopList : TypeSpec\n                       | LROUND TypeSpecList RROUND\n    TypeSpecList : empty\n                    | TypeSpecList TypeSpec SEMICOLON\n    TypeSpec : AliasDecl\n                | TypeDef\n    AliasDecl : IDENTIFIER EQ Type\n    TypeDef : IDENTIFIER Type\n    Type : TypeLit\n            | StandardTypes\n            | LROUND Type RROUND\n    StandardTypes : PREDEFINED_TYPES\n    TypeLit : ArrayType\n               | StructType\n               | FunctionType\n               | PointerType\n    PointerType : STAR Type\n    ArrayType : LSQUARE ArrayLength RSQUARE Type\n    ArrayLength : Expression\n    StructType : STRUCT LCURLY FieldDeclList RCURLY\n    FieldDeclList : empty\n                     | FieldDeclList FieldDecl SEMICOLON\n    FieldDecl : IdentifierList Type TagTop\n                 | IDENTIFIER Type TagTop\n    TagTop : empty\n              | Tag\n    Tag : string_lit\n    FunctionType : FUNC Signature\n    Signature : Parameters\n                 | Parameters Result\n    Result : Parameters\n              | Type\n    Parameters : LROUND RROUND\n                  | LROUND ParameterList RROUND\n    ParameterList : ParameterDecl\n                     | ParameterList COMMA ParameterDecl\n    ParameterDecl : IdentifierList Type\n                     | IDENTIFIER Type\n                     | Type\n    VarDecl : VAR VarSpecTopList\n    VarSpecTopList : VarSpec\n                      | LROUND VarSpecList RROUND\n    VarSpecList : empty\n                   | VarSpecList VarSpec SEMICOLON\n    VarSpec : IDENTIFIER Type\n               | IDENTIFIER EQ Expression\n               | IDENTIFIER Type EQ Expression\n               | IdentifierList Type\n               | IdentifierList EQ ExpressionList\n               | IdentifierList Type EQ ExpressionList\n    FunctionDecl : FUNC FunctionName Signature\n                    | FUNC FunctionName Signature FunctionBody\n    FunctionName : IDENTIFIER\n    FunctionBody : Block\n    SimpleStmt : Expression\n                  | Assignment\n                  | ShortVarDecl\n                  | IncDecStmt\n    IncDecStmt : Expression PLUS_PLUS\n                  | Expression MINUS_MINUS\n    ShortVarDecl : ExpressionList ASSIGN_OP ExpressionList\n                    | Expression ASSIGN_OP Expression\n    Assignment : ExpressionList assign_op ExpressionList\n                  | Expression assign_op Expression\n    assign_op : EQ\n                 | PLUS_EQ\n                 | MINUS_EQ\n                 | OR_EQ\n                 | CARET_EQ\n                 | STAR_EQ\n                 | DIVIDE_EQ\n                 | MODULO_EQ\n                 | LS_EQ\n                 | RS_EQ\n                 | AMP_EQ\n                 | AND_OR_EQ\n    IfStmt : IF Expression Block\n              | IF Expression Block ELSE elseTail\n    elseTail : IfStmt\n                | Block\n    SwitchStmt : ExprSwitchStmt\n    ExprSwitchStmt : SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY\n                      | SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY\n                      | SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY\n                      | SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY\n    ExprCaseClauseList : empty\n                          | ExprCaseClauseList ExprCaseClause\n    ExprCaseClause : ExprSwitchCase COLON StatementList\n    ExprSwitchCase : CASE ExpressionList\n                      | DEFAULT\n                      | CASE Expression\n    ForStmt : FOR Expression Block\n               | FOR Block\n    ReturnStmt : RETURN\n                  | RETURN Expression\n                  | RETURN ExpressionList\n    BreakStmt : BREAK IDENTIFIER\n    ContinueStmt : CONTINUE IDENTIFIER\n    GotoStmt : GOTO IDENTIFIER\n    Expression : UnaryExpr\n                  | Expression OR_OR Expression\n                  | Expression AMP_AMP Expression\n                  | Expression EQ_EQ Expression\n                  | Expression NOT_EQ Expression\n                  | Expression LT Expression\n                  | Expression LT_EQ Expression\n                  | Expression GT Expression\n                  | Expression GT_EQ Expression\n                  | Expression PLUS Expression\n                  | Expression MINUS Expression\n                  | Expression OR Expression\n                  | Expression CARET Expression\n                  | Expression STAR Expression\n                  | Expression DIVIDE Expression\n                  | Expression MODULO Expression\n                  | Expression LS Expression\n                  | Expression RS Expression\n                  | Expression AMP Expression\n                  | Expression AND_OR Expression\n    UnaryExpr : PrimaryExpr\n                 | unary_op UnaryExpr\n    unary_op : PLUS\n                | MINUS\n                | NOT\n                | CARET\n                | STAR\n                | AMP\n                | LT_MINUS\n    PrimaryExpr : Operand\n                   | IDENTIFIER\n                   | PrimaryExpr Selector\n                   | PrimaryExpr Index\n                   | PrimaryExpr Arguments\n    Operand  : Literal\n                | LROUND Expression RROUND\n    Literal  : BasicLit\n                | FunctionLit\n    BasicLit : int_lit\n                | float_lit\n                | string_lit\n                | rune_lit\n    int_lit : decimal_lit\n               | octal_lit\n               | hex_lit\n    decimal_lit : DECIMAL_LIT\n    octal_lit : OCTAL_LIT\n    hex_lit  : HEX_LIT\n    float_lit : FLOAT_LIT\n    FunctionLit : FUNC Signature FunctionBody\n    Selector : DOT IDENTIFIER\n    Index : LSQUARE Expression RSQUARE\n    Arguments : LROUND RROUND\n                 | LROUND ExpressionList RROUND\n                 | LROUND Expression RROUND\n                 | LROUND Type RROUND\n                 | LROUND Type COMMA ExpressionList RROUND\n                 | LROUND Type COMMA Expression RROUND\n    string_lit : STRING_LIT\n    rune_lit : RUNE_LIT\n    empty :'
    
_lr_action_items = {'PACKAGE':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'SourceFile':([0,],[1,]),'ImportDeclList':([4,21,],[5,45,]),'ImportDecl':([4,21,],[6,6,]),'empty':([4,5,8,21,22,27,30,36,42,87,90,139,155,203,273,302,312,313,327,328,341,343,345,351,352,358,359,360,362,367,],[7,11,26,7,48,11,58,77,81,48,156,196,205,272,205,156,332,332,344,156,156,272,344,344,156,272,272,344,205,272,]),'TopLevelDeclList':([5,27,],[9,53,]),'TopLevelDecl':([5,27,],[10,10,]),'Declaration':([5,27,155,273,362,],[12,12,206,206,206,]),'FunctionDecl':([5,27,],[13,13,]),'ConstDecl':([5,27,155,273,362,],[14,14,14,14,14,]),'TypeDecl':([5,27,155,273,362,],[15,15,15,15,15,]),'VarDecl':([5,27,155,273,362,],[16,16,16,16,16,]),'ImportSpec':([8,22,87,],[23,47,47,]),'FunctionName':([17,],[28,]),'ConstSpec':([18,57,],[31,102,]),'IdentifierList':([18,20,56,57,80,94,159,195,],[33,44,98,33,44,98,98,267,]),'TypeSpecTopList':([19,],[34,]),'TypeSpec':([19,76,],[35,146,]),'AliasDecl':([19,76,],[37,37,]),'TypeDef':([19,76,],[38,38,]),'VarSpecTopList':([20,],[40,]),'VarSpec':([20,80,],[41,149,]),'ImportSpecList':([22,87,],[46,154,]),'string_lit':([24,25,26,48,59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,300,309,312,313,314,326,356,362,],[49,51,52,52,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,325,122,334,334,122,122,122,122,]),'Signature':([28,72,124,260,],[54,140,190,310,]),'Parameters':([28,55,72,124,260,],[55,91,55,55,55,]),'ConstSpecList':([30,],[57,]),'Type':([32,33,39,43,44,55,56,64,73,78,94,98,100,159,187,194,254,259,267,268,305,],[60,75,79,82,84,93,99,136,141,147,157,160,161,99,258,264,136,141,312,313,141,]),'TypeLit':([32,33,39,43,44,55,56,64,73,78,94,98,100,159,187,194,254,259,267,268,305,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'StandardTypes':([32,33,39,43,44,55,56,64,73,78,94,98,100,159,187,194,254,259,267,268,305,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'ArrayType':([32,33,39,43,44,55,56,64,73,78,94,98,100,159,187,194,254,259,267,268,305,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'StructType':([32,33,39,43,44,55,56,64,73,78,94,98,100,159,187,194,254,259,267,268,305,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FunctionType':([32,33,39,43,44,55,56,64,73,78,94,98,100,159,187,194,254,259,267,268,305,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'PointerType':([32,33,39,43,44,55,56,64,73,78,94,98,100,159,187,194,254,259,267,268,305,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'TypeSpecList':([36,],[76,]),'VarSpecList':([42,],[80,]),'FunctionBody':([54,190,310,],[88,262,262,]),'Block':([54,155,190,226,273,294,295,310,337,362,],[89,209,89,296,209,321,322,89,348,209,]),'Result':([55,],[92,]),'ParameterList':([56,94,],[96,96,]),'ParameterDecl':([56,94,159,],[97,97,232,]),'Expression':([59,70,74,83,85,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[104,138,143,151,143,189,191,143,201,143,218,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,253,257,269,290,294,295,303,189,218,317,318,143,143,330,269,342,364,218,]),'UnaryExpr':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[105,105,105,105,105,188,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'PrimaryExpr':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'unary_op':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'Operand':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'Literal':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'BasicLit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'FunctionLit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'int_lit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,300,309,314,326,356,362,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,324,120,120,120,120,120,]),'float_lit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'rune_lit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,309,314,326,356,362,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'decimal_lit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,300,309,314,326,356,362,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,]),'octal_lit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,300,309,314,326,356,362,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,]),'hex_lit':([59,70,74,83,85,112,117,133,144,150,152,155,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,186,187,197,222,224,226,231,254,273,274,275,292,293,300,309,314,326,356,362,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,]),'IdentifierBotList':([61,192,],[135,263,]),'ArrayLength':([70,],[137,]),'ExpressionList':([74,85,144,152,155,187,222,231,273,292,293,309,356,362,],[142,153,198,202,223,256,291,223,223,319,320,329,363,223,]),'ScopeStart':([90,302,328,341,352,],[155,327,345,351,360,]),'Selector':([111,],[182,]),'Index':([111,],[183,]),'Arguments':([111,],[184,]),'FieldDeclList':([139,],[195,]),'StatementList':([155,273,362,],[203,316,368,]),'Statement':([155,273,362,],[204,204,204,]),'SimpleStmt':([155,231,273,362,],[207,301,207,207,]),'ReturnStmt':([155,273,362,],[208,208,208,]),'IfStmt':([155,273,337,362,],[210,210,350,210,]),'SwitchStmt':([155,273,362,],[211,211,211,]),'ForStmt':([155,273,362,],[212,212,212,]),'BreakStmt':([155,273,362,],[213,213,213,]),'ContinueStmt':([155,273,362,],[214,214,214,]),'GotoStmt':([155,273,362,],[215,215,215,]),'PrintIntStmt':([155,273,362,],[216,216,216,]),'PrintStrStmt':([155,273,362,],[217,217,217,]),'Assignment':([155,231,273,362,],[219,219,219,219,]),'ShortVarDecl':([155,231,273,362,],[220,220,220,220,]),'IncDecStmt':([155,231,273,362,],[221,221,221,221,]),'ExprSwitchStmt':([155,273,362,],[225,225,225,]),'FieldDecl':([195,],[266,]),'ExpressionBotList':([197,314,],[270,336,]),'ScopeEnd':([203,343,358,359,367,],[271,353,365,366,371,]),'assign_op':([218,223,303,],[274,292,274,]),'TagTop':([312,313,],[331,335,]),'Tag':([312,313,],[333,333,]),'ExprCaseClauseList':([327,345,351,360,],[343,358,359,367,]),'elseTail':([337,],[349,]),'ExprCaseClause':([343,358,359,367,],[354,354,354,354,]),'ExprSwitchCase':([343,358,359,367,],[355,355,355,355,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> SourceFile","S'",1,None,None,None),
  ('SourceFile -> PACKAGE IDENTIFIER SEMICOLON ImportDeclList TopLevelDeclList','SourceFile',5,'p_SourceFile','parser.py',106),
  ('ImportDeclList -> ImportDecl SEMICOLON ImportDeclList','ImportDeclList',3,'p_ImportDeclList','parser.py',122),
  ('ImportDeclList -> empty','ImportDeclList',1,'p_ImportDeclList','parser.py',123),
  ('TopLevelDeclList -> TopLevelDecl SEMICOLON TopLevelDeclList','TopLevelDeclList',3,'p_TopLevelDeclList','parser.py',130),
  ('TopLevelDeclList -> empty','TopLevelDeclList',1,'p_TopLevelDeclList','parser.py',131),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_TopLevelDecl','parser.py',143),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_TopLevelDecl','parser.py',144),
  ('ImportDecl -> IMPORT LROUND ImportSpecList RROUND','ImportDecl',4,'p_ImportDecl','parser.py',151),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_ImportDecl','parser.py',152),
  ('ImportSpecList -> ImportSpec SEMICOLON ImportSpecList','ImportSpecList',3,'p_ImportSpecList','parser.py',159),
  ('ImportSpecList -> empty','ImportSpecList',1,'p_ImportSpecList','parser.py',160),
  ('ImportSpec -> DOT string_lit','ImportSpec',2,'p_ImportSpec','parser.py',167),
  ('ImportSpec -> IDENTIFIER string_lit','ImportSpec',2,'p_ImportSpec','parser.py',168),
  ('ImportSpec -> empty string_lit','ImportSpec',2,'p_ImportSpec','parser.py',169),
  ('Block -> LCURLY ScopeStart StatementList ScopeEnd RCURLY','Block',5,'p_Block','parser.py',176),
  ('ScopeStart -> empty','ScopeStart',1,'p_ScopeStart','parser.py',185),
  ('ScopeEnd -> empty','ScopeEnd',1,'p_ScopeEnd','parser.py',193),
  ('StatementList -> Statement SEMICOLON StatementList','StatementList',3,'p_StatementList','parser.py',200),
  ('StatementList -> empty','StatementList',1,'p_StatementList','parser.py',201),
  ('Statement -> Declaration','Statement',1,'p_Statement','parser.py',212),
  ('Statement -> SimpleStmt','Statement',1,'p_Statement','parser.py',213),
  ('Statement -> ReturnStmt','Statement',1,'p_Statement','parser.py',214),
  ('Statement -> Block','Statement',1,'p_Statement','parser.py',215),
  ('Statement -> IfStmt','Statement',1,'p_Statement','parser.py',216),
  ('Statement -> SwitchStmt','Statement',1,'p_Statement','parser.py',217),
  ('Statement -> ForStmt','Statement',1,'p_Statement','parser.py',218),
  ('Statement -> BreakStmt','Statement',1,'p_Statement','parser.py',219),
  ('Statement -> ContinueStmt','Statement',1,'p_Statement','parser.py',220),
  ('Statement -> GotoStmt','Statement',1,'p_Statement','parser.py',221),
  ('Statement -> PrintIntStmt','Statement',1,'p_Statement','parser.py',222),
  ('Statement -> PrintStrStmt','Statement',1,'p_Statement','parser.py',223),
  ('PrintIntStmt -> PRINTLN LROUND IDENTIFIER RROUND','PrintIntStmt',4,'p_PrintIntStmt','parser.py',231),
  ('PrintIntStmt -> PRINTLN LROUND int_lit RROUND','PrintIntStmt',4,'p_PrintIntStmt','parser.py',232),
  ('PrintStrStmt -> PRINTLN LROUND string_lit RROUND','PrintStrStmt',4,'p_PrintStrStmt','parser.py',244),
  ('Declaration -> ConstDecl','Declaration',1,'p_Declaration','parser.py',256),
  ('Declaration -> TypeDecl','Declaration',1,'p_Declaration','parser.py',257),
  ('Declaration -> VarDecl','Declaration',1,'p_Declaration','parser.py',258),
  ('ConstDecl -> CONST LROUND ConstSpecList RROUND','ConstDecl',4,'p_ConstDecl','parser.py',266),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_ConstDecl','parser.py',267),
  ('ConstSpecList -> empty','ConstSpecList',1,'p_ConstSpecList','parser.py',273),
  ('ConstSpecList -> ConstSpecList ConstSpec SEMICOLON','ConstSpecList',3,'p_ConstSpecList','parser.py',274),
  ('ConstSpec -> IDENTIFIER','ConstSpec',1,'p_ConstSpec','parser.py',280),
  ('ConstSpec -> IdentifierList','ConstSpec',1,'p_ConstSpec','parser.py',281),
  ('ConstSpec -> IDENTIFIER EQ Expression','ConstSpec',3,'p_ConstSpec','parser.py',282),
  ('ConstSpec -> IdentifierList EQ ExpressionList','ConstSpec',3,'p_ConstSpec','parser.py',283),
  ('ConstSpec -> IDENTIFIER Type EQ Expression','ConstSpec',4,'p_ConstSpec','parser.py',284),
  ('ConstSpec -> IdentifierList Type EQ ExpressionList','ConstSpec',4,'p_ConstSpec','parser.py',285),
  ('IdentifierList -> IDENTIFIER COMMA IdentifierBotList','IdentifierList',3,'p_IdentifierList','parser.py',291),
  ('IdentifierBotList -> IDENTIFIER COMMA IdentifierBotList','IdentifierBotList',3,'p_IdentifierBotList','parser.py',299),
  ('IdentifierBotList -> IDENTIFIER','IdentifierBotList',1,'p_IdentifierBotList','parser.py',300),
  ('ExpressionList -> Expression COMMA ExpressionBotList','ExpressionList',3,'p_ExpressionList','parser.py',313),
  ('ExpressionBotList -> Expression COMMA ExpressionBotList','ExpressionBotList',3,'p_ExpressionBotList','parser.py',321),
  ('ExpressionBotList -> Expression','ExpressionBotList',1,'p_ExpressionBotList','parser.py',322),
  ('TypeDecl -> TYPE TypeSpecTopList','TypeDecl',2,'p_TypeDecl','parser.py',333),
  ('TypeSpecTopList -> TypeSpec','TypeSpecTopList',1,'p_TypeSpecTopList','parser.py',339),
  ('TypeSpecTopList -> LROUND TypeSpecList RROUND','TypeSpecTopList',3,'p_TypeSpecTopList','parser.py',340),
  ('TypeSpecList -> empty','TypeSpecList',1,'p_TypeSpecList','parser.py',346),
  ('TypeSpecList -> TypeSpecList TypeSpec SEMICOLON','TypeSpecList',3,'p_TypeSpecList','parser.py',347),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_TypeSpec','parser.py',353),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_TypeSpec','parser.py',354),
  ('AliasDecl -> IDENTIFIER EQ Type','AliasDecl',3,'p_AliasDecl','parser.py',360),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_TypeDef','parser.py',366),
  ('Type -> TypeLit','Type',1,'p_Type','parser.py',372),
  ('Type -> StandardTypes','Type',1,'p_Type','parser.py',373),
  ('Type -> LROUND Type RROUND','Type',3,'p_Type','parser.py',374),
  ('StandardTypes -> PREDEFINED_TYPES','StandardTypes',1,'p_StandardTypes','parser.py',385),
  ('TypeLit -> ArrayType','TypeLit',1,'p_TypeLit','parser.py',392),
  ('TypeLit -> StructType','TypeLit',1,'p_TypeLit','parser.py',393),
  ('TypeLit -> FunctionType','TypeLit',1,'p_TypeLit','parser.py',394),
  ('TypeLit -> PointerType','TypeLit',1,'p_TypeLit','parser.py',395),
  ('PointerType -> STAR Type','PointerType',2,'p_PointerType','parser.py',403),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE Type','ArrayType',4,'p_ArrayType','parser.py',409),
  ('ArrayLength -> Expression','ArrayLength',1,'p_ArrayLength','parser.py',416),
  ('StructType -> STRUCT LCURLY FieldDeclList RCURLY','StructType',4,'p_StructType','parser.py',424),
  ('FieldDeclList -> empty','FieldDeclList',1,'p_FieldDeclList','parser.py',430),
  ('FieldDeclList -> FieldDeclList FieldDecl SEMICOLON','FieldDeclList',3,'p_FieldDeclList','parser.py',431),
  ('FieldDecl -> IdentifierList Type TagTop','FieldDecl',3,'p_FieldDecl','parser.py',437),
  ('FieldDecl -> IDENTIFIER Type TagTop','FieldDecl',3,'p_FieldDecl','parser.py',438),
  ('TagTop -> empty','TagTop',1,'p_TagTop','parser.py',444),
  ('TagTop -> Tag','TagTop',1,'p_TagTop','parser.py',445),
  ('Tag -> string_lit','Tag',1,'p_Tag','parser.py',451),
  ('FunctionType -> FUNC Signature','FunctionType',2,'p_FunctionType','parser.py',457),
  ('Signature -> Parameters','Signature',1,'p_Signature','parser.py',463),
  ('Signature -> Parameters Result','Signature',2,'p_Signature','parser.py',464),
  ('Result -> Parameters','Result',1,'p_Result','parser.py',484),
  ('Result -> Type','Result',1,'p_Result','parser.py',485),
  ('Parameters -> LROUND RROUND','Parameters',2,'p_Parameters','parser.py',496),
  ('Parameters -> LROUND ParameterList RROUND','Parameters',3,'p_Parameters','parser.py',497),
  ('ParameterList -> ParameterDecl','ParameterList',1,'p_ParameterList','parser.py',508),
  ('ParameterList -> ParameterList COMMA ParameterDecl','ParameterList',3,'p_ParameterList','parser.py',509),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_ParameterDecl','parser.py',521),
  ('ParameterDecl -> IDENTIFIER Type','ParameterDecl',2,'p_ParameterDecl','parser.py',522),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_ParameterDecl','parser.py',523),
  ('VarDecl -> VAR VarSpecTopList','VarDecl',2,'p_VarDecl','parser.py',543),
  ('VarSpecTopList -> VarSpec','VarSpecTopList',1,'p_VarSpecTopList','parser.py',551),
  ('VarSpecTopList -> LROUND VarSpecList RROUND','VarSpecTopList',3,'p_VarSpecTopList','parser.py',552),
  ('VarSpecList -> empty','VarSpecList',1,'p_VarSpecList','parser.py',563),
  ('VarSpecList -> VarSpecList VarSpec SEMICOLON','VarSpecList',3,'p_VarSpecList','parser.py',564),
  ('VarSpec -> IDENTIFIER Type','VarSpec',2,'p_VarSpec','parser.py',569),
  ('VarSpec -> IDENTIFIER EQ Expression','VarSpec',3,'p_VarSpec','parser.py',570),
  ('VarSpec -> IDENTIFIER Type EQ Expression','VarSpec',4,'p_VarSpec','parser.py',571),
  ('VarSpec -> IdentifierList Type','VarSpec',2,'p_VarSpec','parser.py',572),
  ('VarSpec -> IdentifierList EQ ExpressionList','VarSpec',3,'p_VarSpec','parser.py',573),
  ('VarSpec -> IdentifierList Type EQ ExpressionList','VarSpec',4,'p_VarSpec','parser.py',574),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_FunctionDecl','parser.py',620),
  ('FunctionDecl -> FUNC FunctionName Signature FunctionBody','FunctionDecl',4,'p_FunctionDecl','parser.py',621),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_FunctionName','parser.py',643),
  ('FunctionBody -> Block','FunctionBody',1,'p_FunctionBody','parser.py',650),
  ('SimpleStmt -> Expression','SimpleStmt',1,'p_SimpleStmt','parser.py',658),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_SimpleStmt','parser.py',659),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_SimpleStmt','parser.py',660),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_SimpleStmt','parser.py',661),
  ('IncDecStmt -> Expression PLUS_PLUS','IncDecStmt',2,'p_IncDecStmt','parser.py',669),
  ('IncDecStmt -> Expression MINUS_MINUS','IncDecStmt',2,'p_IncDecStmt','parser.py',670),
  ('ShortVarDecl -> ExpressionList ASSIGN_OP ExpressionList','ShortVarDecl',3,'p_ShortVarDecl','parser.py',686),
  ('ShortVarDecl -> Expression ASSIGN_OP Expression','ShortVarDecl',3,'p_ShortVarDecl','parser.py',687),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_Assignment','parser.py',724),
  ('Assignment -> Expression assign_op Expression','Assignment',3,'p_Assignment','parser.py',725),
  ('assign_op -> EQ','assign_op',1,'p_assign_op','parser.py',768),
  ('assign_op -> PLUS_EQ','assign_op',1,'p_assign_op','parser.py',769),
  ('assign_op -> MINUS_EQ','assign_op',1,'p_assign_op','parser.py',770),
  ('assign_op -> OR_EQ','assign_op',1,'p_assign_op','parser.py',771),
  ('assign_op -> CARET_EQ','assign_op',1,'p_assign_op','parser.py',772),
  ('assign_op -> STAR_EQ','assign_op',1,'p_assign_op','parser.py',773),
  ('assign_op -> DIVIDE_EQ','assign_op',1,'p_assign_op','parser.py',774),
  ('assign_op -> MODULO_EQ','assign_op',1,'p_assign_op','parser.py',775),
  ('assign_op -> LS_EQ','assign_op',1,'p_assign_op','parser.py',776),
  ('assign_op -> RS_EQ','assign_op',1,'p_assign_op','parser.py',777),
  ('assign_op -> AMP_EQ','assign_op',1,'p_assign_op','parser.py',778),
  ('assign_op -> AND_OR_EQ','assign_op',1,'p_assign_op','parser.py',779),
  ('IfStmt -> IF Expression Block','IfStmt',3,'p_IfStmt','parser.py',786),
  ('IfStmt -> IF Expression Block ELSE elseTail','IfStmt',5,'p_IfStmt','parser.py',787),
  ('elseTail -> IfStmt','elseTail',1,'p_elseTail','parser.py',811),
  ('elseTail -> Block','elseTail',1,'p_elseTail','parser.py',812),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_SwitchStmt','parser.py',820),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY','ExprSwitchStmt',8,'p_ExprSwitchStmt','parser.py',827),
  ('ExprSwitchStmt -> SWITCH SimpleStmt SEMICOLON Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY','ExprSwitchStmt',9,'p_ExprSwitchStmt','parser.py',828),
  ('ExprSwitchStmt -> SWITCH LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY','ExprSwitchStmt',6,'p_ExprSwitchStmt','parser.py',829),
  ('ExprSwitchStmt -> SWITCH Expression LCURLY ScopeStart ExprCaseClauseList ScopeEnd RCURLY','ExprSwitchStmt',7,'p_ExprSwitchStmt','parser.py',830),
  ('ExprCaseClauseList -> empty','ExprCaseClauseList',1,'p_ExprCaseClauseList','parser.py',852),
  ('ExprCaseClauseList -> ExprCaseClauseList ExprCaseClause','ExprCaseClauseList',2,'p_ExprCaseClauseList','parser.py',853),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_ExprCaseClause','parser.py',872),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',887),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_ExprSwitchCase','parser.py',888),
  ('ExprSwitchCase -> CASE Expression','ExprSwitchCase',2,'p_ExprSwitchCase','parser.py',889),
  ('ForStmt -> FOR Expression Block','ForStmt',3,'p_ForStmt','parser.py',900),
  ('ForStmt -> FOR Block','ForStmt',2,'p_ForStmt','parser.py',901),
  ('ReturnStmt -> RETURN','ReturnStmt',1,'p_ReturnStmt','parser.py',925),
  ('ReturnStmt -> RETURN Expression','ReturnStmt',2,'p_ReturnStmt','parser.py',926),
  ('ReturnStmt -> RETURN ExpressionList','ReturnStmt',2,'p_ReturnStmt','parser.py',927),
  ('BreakStmt -> BREAK IDENTIFIER','BreakStmt',2,'p_BreakStmt','parser.py',941),
  ('ContinueStmt -> CONTINUE IDENTIFIER','ContinueStmt',2,'p_ContinueStmt','parser.py',947),
  ('GotoStmt -> GOTO IDENTIFIER','GotoStmt',2,'p_GotoStmt','parser.py',953),
  ('Expression -> UnaryExpr','Expression',1,'p_Expression','parser.py',959),
  ('Expression -> Expression OR_OR Expression','Expression',3,'p_Expression','parser.py',960),
  ('Expression -> Expression AMP_AMP Expression','Expression',3,'p_Expression','parser.py',961),
  ('Expression -> Expression EQ_EQ Expression','Expression',3,'p_Expression','parser.py',962),
  ('Expression -> Expression NOT_EQ Expression','Expression',3,'p_Expression','parser.py',963),
  ('Expression -> Expression LT Expression','Expression',3,'p_Expression','parser.py',964),
  ('Expression -> Expression LT_EQ Expression','Expression',3,'p_Expression','parser.py',965),
  ('Expression -> Expression GT Expression','Expression',3,'p_Expression','parser.py',966),
  ('Expression -> Expression GT_EQ Expression','Expression',3,'p_Expression','parser.py',967),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_Expression','parser.py',968),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_Expression','parser.py',969),
  ('Expression -> Expression OR Expression','Expression',3,'p_Expression','parser.py',970),
  ('Expression -> Expression CARET Expression','Expression',3,'p_Expression','parser.py',971),
  ('Expression -> Expression STAR Expression','Expression',3,'p_Expression','parser.py',972),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_Expression','parser.py',973),
  ('Expression -> Expression MODULO Expression','Expression',3,'p_Expression','parser.py',974),
  ('Expression -> Expression LS Expression','Expression',3,'p_Expression','parser.py',975),
  ('Expression -> Expression RS Expression','Expression',3,'p_Expression','parser.py',976),
  ('Expression -> Expression AMP Expression','Expression',3,'p_Expression','parser.py',977),
  ('Expression -> Expression AND_OR Expression','Expression',3,'p_Expression','parser.py',978),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_UnaryExpr','parser.py',991),
  ('UnaryExpr -> unary_op UnaryExpr','UnaryExpr',2,'p_UnaryExpr','parser.py',992),
  ('unary_op -> PLUS','unary_op',1,'p_unary_op','parser.py',1004),
  ('unary_op -> MINUS','unary_op',1,'p_unary_op','parser.py',1005),
  ('unary_op -> NOT','unary_op',1,'p_unary_op','parser.py',1006),
  ('unary_op -> CARET','unary_op',1,'p_unary_op','parser.py',1007),
  ('unary_op -> STAR','unary_op',1,'p_unary_op','parser.py',1008),
  ('unary_op -> AMP','unary_op',1,'p_unary_op','parser.py',1009),
  ('unary_op -> LT_MINUS','unary_op',1,'p_unary_op','parser.py',1010),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_PrimaryExpr','parser.py',1017),
  ('PrimaryExpr -> IDENTIFIER','PrimaryExpr',1,'p_PrimaryExpr','parser.py',1018),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1019),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1020),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_PrimaryExpr','parser.py',1021),
  ('Operand -> Literal','Operand',1,'p_Operand','parser.py',1058),
  ('Operand -> LROUND Expression RROUND','Operand',3,'p_Operand','parser.py',1059),
  ('Literal -> BasicLit','Literal',1,'p_Literal','parser.py',1070),
  ('Literal -> FunctionLit','Literal',1,'p_Literal','parser.py',1071),
  ('BasicLit -> int_lit','BasicLit',1,'p_BasicLit','parser.py',1079),
  ('BasicLit -> float_lit','BasicLit',1,'p_BasicLit','parser.py',1080),
  ('BasicLit -> string_lit','BasicLit',1,'p_BasicLit','parser.py',1081),
  ('BasicLit -> rune_lit','BasicLit',1,'p_BasicLit','parser.py',1082),
  ('int_lit -> decimal_lit','int_lit',1,'p_int_lit','parser.py',1090),
  ('int_lit -> octal_lit','int_lit',1,'p_int_lit','parser.py',1091),
  ('int_lit -> hex_lit','int_lit',1,'p_int_lit','parser.py',1092),
  ('decimal_lit -> DECIMAL_LIT','decimal_lit',1,'p_decimal_lit','parser.py',1100),
  ('octal_lit -> OCTAL_LIT','octal_lit',1,'p_octal_lit','parser.py',1107),
  ('hex_lit -> HEX_LIT','hex_lit',1,'p_hex_lit','parser.py',1114),
  ('float_lit -> FLOAT_LIT','float_lit',1,'p_float_lit','parser.py',1121),
  ('FunctionLit -> FUNC Signature FunctionBody','FunctionLit',3,'p_FunctionLit','parser.py',1128),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_Selector','parser.py',1136),
  ('Index -> LSQUARE Expression RSQUARE','Index',3,'p_Index','parser.py',1142),
  ('Arguments -> LROUND RROUND','Arguments',2,'p_Arguments','parser.py',1150),
  ('Arguments -> LROUND ExpressionList RROUND','Arguments',3,'p_Arguments','parser.py',1151),
  ('Arguments -> LROUND Expression RROUND','Arguments',3,'p_Arguments','parser.py',1152),
  ('Arguments -> LROUND Type RROUND','Arguments',3,'p_Arguments','parser.py',1153),
  ('Arguments -> LROUND Type COMMA ExpressionList RROUND','Arguments',5,'p_Arguments','parser.py',1154),
  ('Arguments -> LROUND Type COMMA Expression RROUND','Arguments',5,'p_Arguments','parser.py',1155),
  ('string_lit -> STRING_LIT','string_lit',1,'p_string_lit','parser.py',1171),
  ('rune_lit -> RUNE_LIT','rune_lit',1,'p_rune_lit','parser.py',1178),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',1185),
]
